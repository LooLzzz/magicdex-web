{"version":3,"sources":["Themes/index.js","Logic/redux/initialState.js","Logic/redux/reducers/accountReducers.js","Logic/redux/reducers/themeReducers.js","Logic/redux/reducers/topMenuReducers.js","Logic/redux/reducerSlice.js","Logic/redux/reducers/index.js","Logic/redux/store.js","Components/Home/styles.js","Components/Home/index.js","Api/MagicdexApi/utils.js","Config/index.js","Api/MagicdexApi/auth.js","Api/MagicdexApi/collection.js","Components/App/styles.js","Components/App/index.js","CardRenders/styles.js","CardRenders/utils.js","CardRenders/index.js","Components/Collection/Views/CardInfo/styles.js","Components/Collection/Views/CardInfo/index.js","Components/Collection/Views/CardTableView/CardRow/styles.js","Components/Collection/Views/CardTableView/CardRow/index.js","Components/Collection/Views/CardTableView/styles.js","Components/Collection/Views/CardTableView/index.js","Components/Collection/Views/CardGridView/styles.js","Components/Collection/Views/CardGridView/index.js","Components/Collection/FilterFields/utils.js","Components/Collection/FilterFields/FilterPopover/styles.js","Components/Collection/FilterFields/FilterPopover/index.js","Components/Collection/FilterFields/styles.js","Components/Collection/FilterFields/index.js","Components/Collection/CardPriceDataProvider/index.js","Components/Collection/FilteredDataProvider/index.js","Components/Collection/styles.js","Components/Collection/index.js","Components/MenuPopover/styles.js","Components/MenuPopover/index.js","Components/TopMenu/styles.js","Components/TopMenu/index.js","Components/CardImage/ImageOverlay/styles.js","Components/CardImage/ImageOverlay/index.js","Components/CardImage/styles.js","Components/CardImage/index.js","Components/Forms/BaseForm/styles.js","Components/Forms/BaseForm/index.js","Components/Forms/Login/styles.js","Components/Forms/Login/index.js","Components/Forms/Register/styles.js","Components/Forms/Register/index.js","index.js"],"names":["baseTheme","createTheme","getContrastText","palette","sharedOverrides","MuiCssBaseline","textAlign","a","textDecoration","display","cursor","maxWidth","spacing","padding","MuiListItemText","multiline","marginTop","marginBottom","MuiTextField","root","width","margin","MuiPaper","rounded","borderRadius","MuiListSubheader","alignItems","columnGap","MuiListItem","secondaryAction","paddingRight","darkPrimary","main","darkSecondary","darkThirdly","colors","purple","secondary","getDarkTheme","type","table","divider","primary","contrastText","thridly","background","grey","overrides","color","backgroundColor","MuiCircularProgress","circle","getLightTheme","default","paper","themeType","localStorage","getItem","accessToken","INITIAL_STATE","activeUser","username","collection","JSON","parse","theme","currentTheme","currentThemeType","topMenu","currentTab","accountReducers","setActiveUser","state","action","payload","setItem","removeItem","setCurrentCollection","stringify","updateCurrentCollection","cards","card","idx","findIndex","item","_id","push","themeReducers","toggleCurrentThemeType","topMenuReducers","setCurrentTab","tab","reducerSlice","combineReducers","account","createSlice","name","initialState","reducers","actions","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","useStyles","height","flexDirection","justifyContent","content","connect","dispatch","withStyles","props","classes","useEffect","Grid","container","className","component","Paper","xs","sm","md","lg","src","alt","Typography","variant","Utils","getAuthHeaders","token","Authorization","authHeadersDecorator","func","args","headers","catchErrors","error","response","console","request","message","fetchScryfallCardData","cardInfo","Scryfall","getSets","all_sets","setData","_","zipObjectDeep","map","set","id","card_ids","getCollection","cardData","set_data","set_id","API_URL","axios","defaults","common","ROUTE_URL","renameKeys","obj","keyMap","Object","keys","reduce","acc","key","Auth","login","password","post","then","data","register","put","populateCardData","Array","scryfall_id","scryfallData","isDfc","Boolean","card_faces","length","populatedCards","i","date_created","Date","is_dfc","mana_cost","Collections","getCards","page","per_page","params","get","catch","err","updateCards","deleteCards","delete","getAllCards","deleteAllCards","getCardById","card_id","updateCardById","deleteCardById","decoratedCollections","fromEntries","entries","k","v","leftRightPadding","paddingTop","paddingLeft","flexGrow","snackbarRef","createRef","_theme","assign","makeStyles","routes","Route","path","Home","exact","Collection","Login","Register","Redirect","to","MagicdexApi","res","current","enqueueSnackbar","ThemeProvider","CssBaseline","ref","autoHideDuration","maxSnack","toastId","Button","endIcon","Close","onClick","e","closeSnackbar","styles","mana","marginRight","fontSize","flavorText","fontStyle","fontFamily","whiteSpace","utils","addLeadingZero","date","textToManaFont","txt","replace","split","sym","toLowerCase","cost","style","clsx","transformStringArray","arr","searchStart","searchEnd","strTransformation","str","startIdx","search","endIdx","transformed","substring","splice","compact","renders","defaultRender","columnName","cardFace","value","undefined","renderName","renderStyle","renderOracleText","oracleText","align","words","match","transform","text","includes","line","renderPowerToughness","power","toughness","renderSet","rarity","parent_set_code","code","join","renderBoolean","toString","renderAmount","amount","renderPrice","price","currency","renderTag","tags","tag","Chip","onDelete","label","size","renderManaCost","manaCost","renderType","typeLine","renderDate","getFullYear","getMonth","getDate","year","month","day","renderFlavorText","flavor_text","renderCell","rest","position","topArrow","zIndex","top","border","transition","image","renderGameFields","artist","collectorNumber","powerToughness","Box","wrap","rootComponent","rootProps","topArrowProps","useTheme","Hidden","smDown","xl","elevation","lgUp","Divider","mdDown","flexItem","orientation","direction","borderBottom","checkbox","borderLeft","columns","onMouseEnter","selectable","onSelected","selectedCardIds","closeAllRows","closeSignal","setRef","useRef","scrollPosition","useScrollPosition","useState","isOpen","setIsOpen","showContent","setShowContent","isMouseOver","setIsMouseOver","floatingCss","getBoundingClientRect","x","y","left","handleIsOpenToggle","TableRow","TableCell","onMouseLeave","set_name","upperFirst","collector_number","IconButton","KeyboardArrowUp","KeyboardArrowDown","stopPropagation","Checkbox","checked","onChange","target","row","colSpan","Collapse","unmountOnExit","in","timeout","onEnter","isAppearing","onExited","borderTopColor","isEditable","currentHoveringCard","setCurrentHoveringCard","sortBy","setSortByCol","sortOrder","setSortOrder","sortedData","setSortedData","setCloseSignal","setSelectedCardIds","_sortBy","type_line","orderBy","handleRowSelected","filter","cardId","origin","tiltEnabled","TableContainer","Table","TableHead","tableHead","columnDisplayName","sortDirection","TableSortLabel","active","event","colName","handleHeaderClick","iconCell","TableBody","handleRowHover","cardWidth","containerRef","useSize","containerWidth","cardsPerRow","setCardsPerRow","selectedCard","setSelectedCard","Math","floor","handleCardClick","selectedCardData","targetCollapse","box","currentTarget","packTransformButton","tiltProps","tiltMaxAngleX","tiltMaxAngleY","imageProps","offsetLeft","RangeTextField","maxMin","stateHandler","clsInput","TextField","placeholder","pattern","onKeyDown","preventDefault","TextOption","RangeOptions","stateMin","stateMax","stateHandlerMin","stateHandlerMax","clsMinus","RadioOptions","RadioGroup","FormControlLabel","control","Radio","AutocompleteOptions","Autocomplete","multiple","disableCloseOnSelect","filterSelectedOptions","ChipProps","renderTags","getTagProps","option","index","Function","renderInput","InputProps","icon","popover","minWidth","MenuPopover","forwardRef","menuAnchor","setMenuAnchor","menuOpen","filterButtonRef","useImperativeHandle","openMenu","handleMenuOpen","closeMenu","handleMenuClose","menuAnnchor","Popover","open","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","ClickAwayListener","onClickAway","List","dense","disablePadding","children","minus","rangeInput","autocompleteInput","setFilters","filtersMenuRef","setsData","setSetsData","cardName","setCardName","setOracleText","setTypeLine","setTags","tagArray","setTagArray","selectedSets","setSelectedSets","allSets","chain","set_type","released_at","fetchSets","oracle_text","intersection","endAdornment","InputAdornment","FilterPopover","ListSubheader","ListItem","uniq","helperText","marginLeft","options","groupBy","getOptionLabel","getOptionSelected","CardPriceDataProvider","cardPriceData","setCardPriceData","prices","foil","Number","total_price","React","Children","child","cloneElement","FilteredDataProvider","filters","filteredData","setFilteredData","every","fontWeight","textTransform","filtersContainer","subheader","_currency","history","useHistory","menuRef","view","setView","setCurrency","tableEditable","setTableEditable","toggleTableEditable","toggleCurrency","FilterFields","MoreVert","listProps","ButtonGroup","ViewList","ViewModule","ViewCompact","MenuItem","ListItemText","toUpperCase","Skeleton","Icon","setIcon","iconButtonRef","iconButtonProps","popoverProps","mainSidesPadding","appBar","useSnackbar","handleMenuItemClick","goto","attributes","AppBar","Tabs","Tab","Menu","AccountCircle","Settings","paddingBottom","ListItemSecondaryAction","Switch","edge","base","overlay","baseSrc","baseProps","overlaySrc","overlayEnabled","overlayProps","_baseSrc","setBase","_overlaySrc","setOverlay","imageContainer","dfcSymbol","button","buttonThridly","buttonProps","flipped","setFlipped","setIsDfc","handleTransform","tiltEnable","glareEnable","glareBorderRadius","glarePosition","glareMaxOpacity","onLeave","image_uris","png","opacity","iconSize","header","alignSelf","divider1","bottom","divider2","validationRules","onSubmit","onError","formRef","Header","setHeader","Content","setContent","Actions","setActions","isLoading","setIsLoading","rules","forEach","ValidatorForm","hasValidationRule","addValidationRule","Dialog","DialogContent","CircularProgress","topBottomPadding","minHeight","errorMessages","setErrorMessages","usernameInput","setUsernameInput","passwordInput","setPasswordInput","handleClear","resetValidations","msg","msgs","finally","instantValidate","validators","autoComplete","values","slice","disabled","passwordRepeatInput","setPasswordRepeatInput","passwordInputRef","isPasswordMatch","ReactDOM","render","StrictMode","Helmet","href","rel","store","document","getElementById"],"mappings":"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","file":"static/js/main.8209149d.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\r\n\r\nimport { createTheme, colors } from \"@material-ui/core\"\r\nconst baseTheme = createTheme()\r\nconst getContrastText = baseTheme.palette.getContrastText\r\n\r\n/** SHARED VALUES **/\r\nconst sharedOverrides = {\r\n  MuiCssBaseline: {\r\n    \"@global\": {\r\n      \".alignLeft\": {\r\n        textAlign: \"left\",\r\n      },\r\n      \".alignRight\": {\r\n        textAlign: \"right\",\r\n      },\r\n      a: {\r\n        textDecoration: \"none\",\r\n      },\r\n      \"a:hover\": {\r\n        textDecoration: \"underline\",\r\n      },\r\n      \".hidden\": {\r\n        display: \"none\",\r\n      },\r\n      \".cursor-pointer\": {\r\n        cursor: \"pointer\",\r\n      },\r\n      '.floating': {\r\n        // position: 'absolute',\r\n        // zIndex: '999',\r\n        maxWidth: baseTheme.spacing(25),\r\n        padding: `${baseTheme.spacing(0.5)}px ${baseTheme.spacing(1.25)}px ${baseTheme.spacing(0.5)}px ${baseTheme.spacing(1.25)}px`,\r\n      },\r\n    },\r\n  },\r\n  MuiListItemText: {\r\n    multiline: {\r\n      marginTop: 0,\r\n      marginBottom: 0,\r\n    },\r\n  },\r\n  MuiTextField: {\r\n    root: {\r\n      width: \"100%\",\r\n      margin: \"0.4em\",\r\n    },\r\n  },\r\n  MuiPaper: {\r\n    rounded: {\r\n      borderRadius: \"12.5px\",\r\n    },\r\n  },\r\n  MuiListSubheader: {\r\n    root: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      columnGap: '0.6em',\r\n    },\r\n  },\r\n  MuiListItem: {\r\n    secondaryAction: {\r\n      paddingRight: baseTheme.spacing(8),\r\n    },\r\n  },\r\n}\r\n\r\n\r\n/** DARK THEME **/\r\nconst darkPrimary = {\r\n  main: '#2D5295',\r\n  // main: '#2D4583',\r\n  // main: '#404664',\r\n}\r\nconst darkSecondary = {\r\n  // main: colors.purple[500],\r\n  // main: '#731FA1',\r\n  // main: '#BF9EEE',\r\n  // main: '#8A8FEE',\r\n  main: '#DA7B08',\r\n  // main: '#F3533B',\r\n  // main: '#FA9F42',\r\n  // main: '#F56C40',\r\n  // main: colors.orange['900'],\r\n  // main: colors.deepPurple['200'],\r\n}\r\nconst darkThirdly = {\r\n  main: colors.purple[800],\r\n  secondary: colors.purple[700]\r\n  // main: '#DA7B08',\r\n  // main: '#731FA1',\r\n  // main: '#45155F',\r\n}\r\n\r\nconst getDarkTheme = () =>\r\n  createTheme({\r\n    palette:\r\n    {\r\n      type: 'dark',\r\n      table: {\r\n        divider: '#424242',\r\n      },\r\n      primary: {\r\n        ...darkPrimary,\r\n        contrastText: getContrastText(darkPrimary.main)\r\n      },\r\n      secondary: {\r\n        ...darkSecondary,\r\n        contrastText: getContrastText(darkSecondary.main)\r\n      },\r\n      thridly: {\r\n        ...darkThirdly,\r\n        contrastText: getContrastText(darkThirdly.main)\r\n      },\r\n      background: {\r\n        secondary: colors.grey['700'],\r\n      }\r\n    },\r\n\r\n    overrides:\r\n    {\r\n      ...sharedOverrides,\r\n      MuiCssBaseline: {\r\n        '@global': {\r\n          ...sharedOverrides.MuiCssBaseline,\r\n          a: {\r\n            color: darkSecondary.main,\r\n          },\r\n          '.floating': {\r\n            ...sharedOverrides.MuiCssBaseline['.floating'],\r\n            backgroundColor: colors.grey['700'],\r\n            color: getContrastText(colors.grey['700']),\r\n          },\r\n          '.buttonThridly-root': {\r\n            color: getContrastText(darkThirdly.main),\r\n            backgroundColor: darkThirdly.main,\r\n            '&:hover': {\r\n              backgroundColor: darkThirdly.secondary,\r\n            },\r\n          },\r\n        },\r\n      },\r\n      MuiCircularProgress: {\r\n        circle: {\r\n          color: 'white',\r\n        },\r\n      },\r\n    },\r\n  })\r\n\r\n\r\n/** LIGHT THEME **/\r\nconst getLightTheme = () =>\r\n  createTheme({\r\n    palette: {\r\n      type: 'light',\r\n      secondary: {\r\n        // main: colors.orange[900],\r\n        // main: colors.purple['A400'],\r\n        // main: '#9568AD',\r\n        // main: '#D695F9',\r\n        main: '#E3468C',\r\n        contrastText: getContrastText('#E3468C'),\r\n      },\r\n      table: {\r\n        divider: 'rgba(150, 150, 150, 0.75)'\r\n      },\r\n      background: {\r\n        default: '#D5D5D5',\r\n        paper: '#F0F0F0',\r\n        secondary: colors.grey['400'],\r\n      },\r\n      thridly: {\r\n        main: colors.purple[500],\r\n        secondary: colors.purple[700],\r\n        contrastText: getContrastText(colors.purple[500]),\r\n      },\r\n    },\r\n\r\n    overrides: {\r\n      ...sharedOverrides,\r\n      MuiCssBaseline: {\r\n        '@global': {\r\n          ...sharedOverrides.MuiCssBaseline,\r\n          '.floating': {\r\n            ...sharedOverrides.MuiCssBaseline['.floating'],\r\n            backgroundColor: colors.grey['A100'],\r\n            color: getContrastText(colors.grey['A100']),\r\n          },\r\n          '.buttonThridly-root': {\r\n            color: getContrastText(colors.purple[500]),\r\n            backgroundColor: colors.purple[500],\r\n            '&:hover': {\r\n              backgroundColor: colors.purple[700],\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  })\r\n\r\n\r\nexport { getDarkTheme, getLightTheme }\r\n","import { getDarkTheme, getLightTheme } from \"@/Themes\"\r\n\r\n/** LOCAL STORAGE **/\r\nlet themeType = localStorage.getItem(\"themeType\") ?? 'dark'\r\nlet accessToken = localStorage.getItem(\"accessToken\")\r\nlet username = localStorage.getItem(\"username\")\r\nlet collection = JSON.parse(localStorage.getItem(\"collection\")) ?? []\r\n\r\nthemeType = themeType ? themeType : \"dark\"\r\n\r\n\r\n/** STATE **/\r\nconst INITIAL_STATE = {\r\n  activeUser: {\r\n    username,\r\n    accessToken,\r\n    collection,\r\n  },\r\n  theme: {\r\n    currentTheme: themeType === 'dark' ? getDarkTheme() : getLightTheme(),\r\n    currentThemeType: themeType,\r\n  },\r\n  topMenu: {\r\n    currentTab: 'home',\r\n  }\r\n}\r\n\r\nexport default INITIAL_STATE\r\n","const accountReducers = {\r\n  setActiveUser: (state, action) => {\r\n    const { username, accessToken } = action.payload\r\n\r\n    if (!username && !accessToken) {\r\n      localStorage.removeItem('username')\r\n      localStorage.removeItem('accessToken')\r\n      localStorage.removeItem('collection')\r\n    }\r\n    else {\r\n      username && localStorage.setItem('username', username)\r\n      accessToken && localStorage.setItem('accessToken', accessToken)\r\n    }\r\n\r\n    state.activeUser = {\r\n      ...state.activeUser,\r\n      accessToken,\r\n      username,\r\n    }\r\n  },\r\n\r\n  setCurrentCollection: (state, action) => {\r\n    const { collection } = action.payload\r\n\r\n    if (collection)\r\n      localStorage.setItem('collection', JSON.stringify(collection ?? []))\r\n    else\r\n      localStorage.removeItem('collection')\r\n\r\n    state.activeUser.collection = collection\r\n  },\r\n\r\n  updateCurrentCollection: (state, action) => {\r\n    const { cards } = action.payload\r\n    let { collection } = state.activeUser\r\n\r\n    for (const card in cards) {\r\n      const idx = collection.findIndex(item => item._id === card._id)\r\n      if (idx !== -1)\r\n        collection[idx] = {\r\n          ...collection[idx],\r\n          ...card,\r\n        }\r\n      else\r\n        collection.push(card)\r\n    }\r\n\r\n    state.activeUser.collection = collection\r\n  },\r\n}\r\n\r\nexport default accountReducers","import { getDarkTheme, getLightTheme } from \"@/Themes\";\r\n\r\n\r\nconst themeReducers = {\r\n  toggleCurrentThemeType: (state, action) => {\r\n    const type = state.theme.currentThemeType === 'dark' ? 'light' : 'dark'; // toggle theme type\r\n    localStorage.setItem(\"themeType\", type);\r\n\r\n    state.theme = {\r\n      ...state.theme,\r\n      currentThemeType: type,\r\n      currentTheme: type === 'dark' ? getDarkTheme() : getLightTheme(),\r\n    }\r\n  },\r\n};\r\n\r\nexport default themeReducers;\r\n","const topMenuReducers = {\r\n  setCurrentTab: (state, action) => {\r\n    const { tab } = action.payload;\r\n    \r\n    state.topMenu = {\r\n      ...state.topMenu,\r\n      currentTab: tab,\r\n    };\r\n  },\r\n};\r\n\r\nexport default topMenuReducers;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport initialState from \"./initialState\";\r\nimport { accountReducers, themeReducers, topMenuReducers } from \"./reducers\"\r\n\r\n\r\nexport const reducerSlice = createSlice({\r\n  name: \"actions\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    ...accountReducers,\r\n    ...themeReducers,\r\n    ...topMenuReducers\r\n  },\r\n});\r\n\r\nexport const {\r\n  setActiveUser,\r\n  setCurrentTab,\r\n  toggleCurrentThemeType,\r\n  setCurrentCollection,\r\n  updateCurrentCollection,\r\n} = reducerSlice.actions;\r\n\r\nexport default reducerSlice.reducer;","import accountReducers from './accountReducers';\r\nimport themeReducers from './themeReducers';\r\nimport topMenuReducers from './topMenuReducers';\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport default combineReducers({\r\n    account: accountReducers,\r\n    theme: themeReducers,\r\n    topMenu: topMenuReducers\r\n});\r\n\r\nexport {\r\n    accountReducers,\r\n    themeReducers,\r\n    topMenuReducers,\r\n}","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport reducerSlice from \"./reducerSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: { actions: reducerSlice },\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({\r\n    serializableCheck: false\r\n  })\r\n});\r\n","\r\nconst useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  // const mainSidesPadding = theme.spacing(10)\r\n\r\n  return {\r\n    root: {\r\n      height: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    content: {\r\n      padding: `${theme.spacing(3)}px ${theme.spacing(5)}px ${theme.spacing(3)}px ${theme.spacing(5)}px`,\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { useEffect } from 'react'\r\nimport { Typography, Paper, Grid } from \"@material-ui/core\"\r\nimport { withStyles } from \"@material-ui/styles\"\r\nimport { connect } from \"react-redux\"\r\n// import useSize from '@react-hook/size'\r\n// import { useHistory } from \"react-router\";\r\n\r\n// import { MagicdexApi } from \"@/Api\"\r\nimport { setCurrentTab } from \"@/Logic/redux\"\r\nimport useStyles from \"./styles\"\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  currentTab: state.actions.topMenu.currentTab,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  'dispatch': {\r\n    setCurrentTab: (payload) => dispatch(setCurrentTab(payload)),\r\n  }\r\n})\r\n\r\nconst Home = (props) => {\r\n  //VARS\r\n  // const history = useHistory();\r\n  // const [width,] = useSize(document.body)\r\n  const {\r\n    classes,\r\n    dispatch,\r\n  } = props\r\n\r\n  //EFFECTS\r\n  useEffect(() => {\r\n    //onMount\r\n    dispatch.setCurrentTab({ tab: 'home' })\r\n  }, [])\r\n\r\n\r\n  //HANDLERS\r\n  // const handleTabChange = (event, value) => {\r\n  //   dispatch.setCurrentTab({tab:value});\r\n  //   history.push( '/' + value )\r\n  // }\r\n\r\n  //RENDER\r\n  return (\r\n    <Grid container justifyContent='center' className={classes.root}>\r\n      <Grid item component={Paper} xs={12} sm={10} md={9} lg={8} className={classes.content}>\r\n        <Grid item container justifyContent='center' xs={12}>\r\n          <Grid item xs={11} sm={10} md={9}>\r\n            <img src='/logo.png' width='100%' alt=\"home\" />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h2\">\r\n            Welcome to Magicdex\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h2\">\r\n            <span className=\"ss ss-fw ss-afr\" />\r\n            <span className=\"ss ss-fw ss-war\" />\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\n// EXPORT WITH HOOKS AND DECORATORS\r\nexport default\r\n  connect(mapStateToProps, mapDispatchToProps)(\r\n    withStyles(useStyles)(\r\n      Home\r\n    )\r\n  )","import Scryfall from \"scryfall-client\"\r\nimport _ from \"lodash\"\r\n\r\n\r\nconst Utils = {\r\n  getAuthHeaders: () => {\r\n    let token = localStorage.getItem(\"accessToken\")\r\n\r\n    return token ? { Authorization: `Bearer ${token}` } : {}\r\n  },\r\n\r\n  authHeadersDecorator: (func) => (\r\n    function (args) {\r\n      args = {\r\n        ...args,\r\n        headers: {\r\n          ...args?.headers,\r\n          ...getAuthHeaders(),\r\n        },\r\n      }\r\n      return func(args)\r\n    }\r\n  ),\r\n\r\n  catchErrors: (error) => {\r\n    if (error.response)\r\n      console.error('Request made and server responded', error.response)\r\n    else if (error.request)\r\n      console.error('Request was made but no response was recieved', error.request)\r\n    else\r\n      console.error(\"Something happened in setting up the request that triggered an error\", error.message)\r\n\r\n    return error\r\n  },\r\n\r\n  fetchScryfallCardData: async (cardInfo) => {\r\n    const all_sets = await Scryfall.getSets()\r\n    const setData = _.zipObjectDeep(all_sets.map(set => set.id), all_sets) // { 'M19': {...}, 'M20': {...}, ... }\r\n\r\n    const card_ids = cardInfo.map(card => ({ id: card.id }))\r\n    const cardData = await Scryfall.getCollection(card_ids)\r\n\r\n    return cardData.map((card) => ({\r\n      ...card,\r\n      set_data: setData[card.set_id],\r\n    }))\r\n  },\r\n}\r\n\r\nexport default Utils\r\n\r\nexport const {\r\n  getAuthHeaders,\r\n  authHeadersDecorator,\r\n  catchErrors,\r\n  fetchScryfallCardData,\r\n} = Utils\r\n","import axios from \"axios\";\r\n\r\nconst API_URL = 'https://magicdex-server.herokuapp.com';\r\n// const API_URL = 'http://localhost:5000';\r\n\r\naxios.defaults.headers.common['access-Control-Allow-Origin'] = \"*\";\r\naxios.defaults.headers.common['Access-Control-Allow-Credentials'] = true;\r\n\r\nexport {\r\n    API_URL,\r\n};","import axios from \"axios\"\r\n\r\nimport { authHeadersDecorator } from './utils'\r\nimport { API_URL } from \"@/Config\"\r\n\r\n\r\nconst ROUTE_URL = `${API_URL}/auth`\r\n\r\nconst renameKeys = (obj, keyMap) =>\r\n  Object.keys(obj)\r\n    .reduce((acc, key) => {\r\n      const newKey = keyMap[key] || key\r\n      acc[newKey] = obj[key]\r\n      return acc\r\n    }, {})\r\n\r\nconst Auth = {\r\n  /**\r\n   * Try to login with the given credentials.\r\n   * If credentials provided it will try to use the saved access token.\r\n   * @param {String?} username\r\n   * @param {String?} password\r\n   * @returns Response Object\r\n   */\r\n  login: authHeadersDecorator(({ username, password, headers }) => {\r\n    let payload = { username, password }\r\n\r\n    return axios\r\n      .post(ROUTE_URL, payload, { headers })\r\n      .then(response => renameKeys(response.data, { 'access-token': 'accessToken' }))\r\n    // .catch(err => catchErrors(err));\r\n  }),\r\n\r\n  /**\r\n   * Try to register a new user.\r\n   * @param {String?} username\r\n   * @param {String?} password\r\n   * @returns Response Object\r\n   */\r\n  register: ({ username, password }) => {\r\n    const payload = { username, password }\r\n\r\n    return axios\r\n      .put(ROUTE_URL, payload)\r\n      .then(response => renameKeys(response.data, { 'access-token': 'accessToken' }))\r\n    // .catch(err => catchErrors(err));\r\n  },\r\n}\r\n\r\nexport default Auth\r\n\r\nexport const {\r\n  login,\r\n  register,\r\n} = Auth\r\n","import axios from \"axios\"\r\n// import scryfall from \"scryfall-client\";\r\n\r\nimport { API_URL } from \"@/Config\"\r\nimport { authHeadersDecorator, catchErrors, fetchScryfallCardData } from \"./utils\"\r\n// import { fetchScryfallSymbolData, fetchScryfallSetData } from \"./utils\";\r\n\r\n\r\nconst ROUTE_URL = `${API_URL}/collections`\r\n// const zip = (a, b) => a.map((k, i) => [k, b[i]]);\r\n\r\nconst populateCardData = async (cards) => {\r\n  const cardInfo =\r\n    cards instanceof Array\r\n      ? cards.map(card => ({ id: card.scryfall_id, set_id: card.set }))\r\n      : [cards.scryfall_id, cards.set]\r\n\r\n  const scryfallData = await fetchScryfallCardData(cardInfo)\r\n  const isDfc = (card) => Boolean(card?.card_faces.length > 1)\r\n\r\n  const populatedCards =\r\n    cards.map((card, i) => ({\r\n      ...scryfallData[i],\r\n      ...card,\r\n      date_created: new Date(card.date_created),\r\n      is_dfc: isDfc(scryfallData[i]),\r\n      mana_cost: isDfc(scryfallData[i])\r\n        ? [scryfallData[i].card_faces[0].mana_cost, scryfallData[i].card_faces[1].mana_cost]\r\n        : scryfallData[i].mana_cost,\r\n    }))\r\n\r\n  return (cards instanceof Array)\r\n    ? populatedCards\r\n    : populatedCards[0]\r\n}\r\n\r\n\r\nconst Collections = {\r\n  /**\r\n   * Retrieve cards from active user's collection.\r\n   */\r\n  getCards: ({ page, per_page, cards, headers }) => {\r\n    // const headers = { ...getAuthHeaders() };\r\n    const params = { page, per_page, cards }\r\n\r\n    return axios\r\n      .get(ROUTE_URL, { params, headers })\r\n      .then(response => populateCardData(response.data.data))\r\n      .catch(err => catchErrors(err))\r\n  },\r\n\r\n  /**\r\n   * Insert or update cards from active user's collection.\r\n   */\r\n  updateCards: ({ cards, headers }) => {\r\n    // const headers = { ...getAuthHeaders() };\r\n\r\n    return axios\r\n      .post(ROUTE_URL, { cards }, { headers })\r\n      .then(response => response)\r\n      .catch(err => catchErrors(err))\r\n  },\r\n\r\n  /**\r\n   * Delete cards from active user's collection.\r\n   */\r\n  deleteCards: ({ cards, headers }) => {\r\n    // const headers = { ...getAuthHeaders() };\r\n\r\n    return axios\r\n      .delete(ROUTE_URL, { cards }, { headers })\r\n      .then(response => response)\r\n      .catch(err => catchErrors(err))\r\n  },\r\n\r\n\r\n  /**\r\n   * Retrieve all cards from active user's collection.\r\n   */\r\n  getAllCards: ({ cards, headers }) => {\r\n    // const headers = { ...getAuthHeaders() };\r\n    const params = { cards }\r\n\r\n    return axios\r\n      .get(`${ROUTE_URL}/all`, { params, headers })\r\n      .then(response => populateCardData(response.data.data))\r\n      .catch(err => catchErrors(err))\r\n  },\r\n\r\n  /**\r\n   * Clear active user's collection.\r\n   */\r\n  deleteAllCards: ({ headers }) => {\r\n    // const headers = { ...getAuthHeaders() };\r\n\r\n    return axios\r\n      .delete(`${ROUTE_URL}/all`, { headers })\r\n      .then(response => response)\r\n      .catch(err => catchErrors(err))\r\n  },\r\n\r\n  /**\r\n   * Retrieve a specific card from active user's collection.\r\n   */\r\n  getCardById: ({ card_id, headers }) => {\r\n    // const headers = { ...getAuthHeaders() };\r\n\r\n    return axios\r\n      .get(`${ROUTE_URL}/${card_id}`, { headers })\r\n      .then(response => populateCardData(response.data))\r\n      .catch(err => catchErrors(err))\r\n  },\r\n\r\n  /**\r\n   * Update a specific card from active user's collection.\r\n   */\r\n  updateCardById: ({ card_id, data, headers }) => {\r\n    // const headers = { ...getAuthHeaders() };\r\n\r\n    return axios\r\n      .post(`${ROUTE_URL}/${card_id}`, data, { headers })\r\n      .then(response => response)\r\n      .catch(err => catchErrors(err))\r\n  },\r\n\r\n  /**\r\n   * Delete a specific card from active user's collection.\r\n   */\r\n  deleteCardById: ({ card_id, headers }) => {\r\n    // const headers = { ...getAuthHeaders() };\r\n\r\n    return axios\r\n      .delete(`${ROUTE_URL}/${card_id}`, { headers })\r\n      .then(response => response)\r\n      .catch(err => catchErrors(err))\r\n  },\r\n\r\n  // /**\r\n  //  * Get all sets names and codes.\r\n  //  */\r\n  // getAllSets: async () => {\r\n  //   return await fetchScryfallSetData();\r\n  // },\r\n\r\n  // getAllSymbols: async () => {\r\n  //   return await fetchScryfallSymbolData();\r\n  // },\r\n}\r\n\r\n\r\n/** EXPORTS **/\r\nconst decoratedCollections =\r\n  Object.fromEntries(\r\n    Object\r\n      .entries(Collections)\r\n      .map(([k, v]) => [k, authHeadersDecorator(v)])\r\n  )\r\n\r\nexport default decoratedCollections\r\n// export default Collections;\r\n\r\nexport const {\r\n  getCards,\r\n  updateCards,\r\n  deleteCards,\r\n  getAllCards,\r\n  deleteAllCards,\r\n  getCardById,\r\n  updateCardById,\r\n  deleteCardById,\r\n  // getAllSets,\r\n  // getAllSymbols,\r\n} = decoratedCollections\r\n// } = Collections\r\n","const useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  const leftRightPadding = theme.spacing(10)\r\n  const topBottomPadding = theme.spacing(8)\r\n\r\n  return {\r\n    '@global': {\r\n      '#root': {\r\n        // display: 'flex',\r\n        // justifyContent: 'center',\r\n        // minHeight: '100vh',\r\n        // maxHeight: '100vh',\r\n        // height: '100vh',\r\n        // minWidth: '100wh',\r\n        maxWidth: '100wh',\r\n        width: '100wh',\r\n        // background: theme.palette.background.default,\r\n        // background: `linear-gradient(35deg, ${theme.palette.background.default} 20%, ${theme.palette.background.paper} 175%)`,\r\n        // background: `linear-gradient(35deg, ${theme.palette.background.paper} 10%, ${theme.palette.background.default} 225%)`,\r\n        paddingTop: topBottomPadding,\r\n        // paddingBottom: topBottomPadding,\r\n        paddingLeft: leftRightPadding,\r\n        paddingRight: leftRightPadding,\r\n      }\r\n    },\r\n\r\n    root: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      // minHeight: '100vh',\r\n      // maxHeight: '100vh',\r\n      // minWidth: '100wh',\r\n      // maxWidth: '100wh',\r\n      // background: theme.palette.background.default,\r\n      // background: `linear-gradient(35deg, ${theme.palette.background.default} 20%, ${theme.palette.background.paper} 175%)`,\r\n      // background: `linear-gradient(35deg, ${theme.palette.background.paper} 10%, ${theme.palette.background.default} 225%)`,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      // maxWidth: '100wh',\r\n      // maxWidth: '95%',\r\n      // minHeight: '100vh',\r\n      // maxHeight: `calc(100vh - ${topBottomPadding})`,\r\n      textAlign: '-webkit-center',\r\n      // display: 'flex',\r\n      // justifyContent: 'center',\r\n      // alignItems: 'center',\r\n      // paddingTop: topBottomPadding,\r\n      // paddingBottom: topBottomPadding,\r\n      // paddingLeft: leftRightPadding,\r\n      // paddingRight: leftRightPadding,\r\n      // boxShadow: theme.shadows[4]\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles;","/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { useEffect, createRef } from 'react'\r\nimport { Button, CssBaseline, ThemeProvider } from \"@material-ui/core\"\r\nimport { Close as CloseIcon } from '@material-ui/icons'\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\nimport { makeStyles } from \"@material-ui/styles\"\r\nimport { SnackbarProvider } from 'notistack'\r\n// import { useHistory } from 'react-router';\r\n\r\nimport { Collection, TopMenu, Login, Register, Home } from \"@/Components\"\r\nimport { MagicdexApi } from \"@/Api\"\r\nimport { setActiveUser } from \"@/Logic/redux\"\r\nimport useStyles from \"./styles\"\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  theme: state.actions.theme.currentTheme,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    setActiveUser: (payload) => dispatch(setActiveUser(payload)),\r\n  }\r\n})\r\n\r\n\r\nconst App = (props) => {\r\n  /** VARS **/\r\n  // const history = useHistory()\r\n  const snackbarRef = createRef()\r\n  const {\r\n    dispatch,\r\n    theme,\r\n    // accessToken,\r\n  } = props\r\n  const _theme = Object.assign({}, theme)\r\n  const classes = makeStyles(useStyles(_theme))()\r\n\r\n  const routes = [\r\n    {\r\n      component: Route,\r\n      props: {\r\n        path: '/',\r\n        component: Home,\r\n        exact: true,\r\n      }\r\n    },\r\n    {\r\n      component: Route,\r\n      props: {\r\n        path: '/collection',\r\n        component: Collection,\r\n        exact: true,\r\n      }\r\n    },\r\n    {\r\n      component: Route,\r\n      props: {\r\n        path: '/login',\r\n        component: Login,\r\n        exact: true,\r\n      }\r\n    },\r\n    {\r\n      component: Route,\r\n      props: {\r\n        path: '/register',\r\n        component: Register,\r\n        exact: true,\r\n      }\r\n    },\r\n    {\r\n      component: Redirect,\r\n      props: {\r\n        to: '/',\r\n        exact: false,\r\n      }\r\n    },\r\n  ]\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    // onMount\r\n    MagicdexApi.login() //try to login with `localStorage['accessToken']`\r\n      .then(res => {\r\n        dispatch.setActiveUser(res)\r\n        snackbarRef.current.enqueueSnackbar(`Welcome back ${res.username}`, { variant: 'info' })\r\n        // snackbarRef.current.enqueueSnackbar('Welcome back', { variant: 'info' })\r\n      })\r\n      .catch(err => dispatch.setActiveUser({ username: null }))\r\n  }, [])\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <ThemeProvider theme={_theme}>\r\n      <CssBaseline />\r\n      <SnackbarProvider\r\n        ref={snackbarRef}\r\n        autoHideDuration={3250}\r\n        maxSnack={3}\r\n        action={toastId => (\r\n          <Button\r\n            endIcon={<CloseIcon />}\r\n            onClick={e => snackbarRef.current.closeSnackbar(toastId)}\r\n            color=\"inherit\"\r\n          >\r\n            Dismiss\r\n          </Button>\r\n        )}\r\n      >\r\n        <div className={classes.root}>\r\n          <Router>\r\n            <TopMenu />\r\n            <div className={classes.content}>\r\n              <Switch>\r\n                {\r\n                  routes.map((item, i) => (\r\n                    <item.component\r\n                      key={i}\r\n                      {...item.props}\r\n                    />\r\n                  ))\r\n                }\r\n              </Switch>\r\n            </div>\r\n          </Router>\r\n        </div>\r\n      </SnackbarProvider>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","const styles = {\r\n  mana: {\r\n    marginRight: '0.25em',\r\n    fontSize: '0.85em',\r\n  },\r\n  set: {\r\n    fontSize: '1.25em',\r\n  },\r\n  flavorText: {\r\n    fontStyle: 'italic',\r\n    fontFamily: 'Georgia, fangsong, Times New Roman',\r\n    whiteSpace: 'pre-wrap',\r\n  },\r\n}\r\n\r\nexport default styles","import clsx from 'clsx'\r\nimport _ from 'lodash'\r\n\r\nimport styles from './styles'\r\n\r\n\r\nconst utils = {\r\n  addLeadingZero: (date) => (\r\n    date < 10\r\n      ? date = '0' + date\r\n      : date\r\n  ),\r\n\r\n  textToManaFont: (txt, props) => {\r\n    return txt\r\n      .replace(/(^{)|(\\/)|(}$)/g, '') // remove starting '{', trailing '}' and any '/'\r\n      .split('}{')\r\n      .map(sym => {\r\n        switch (sym) {\r\n          default:\r\n            return sym\r\n\r\n          case 'T':\r\n            return 'tap'\r\n        }\r\n      })\r\n      .map(sym => sym ? `ms-${sym.toLowerCase()}` : '')\r\n      .map(cost => (\r\n        <span\r\n          {...props}\r\n          style={{\r\n            ...styles.mana,\r\n            ...props?.style,\r\n          }}\r\n          className={clsx('ms', 'ms-cost', 'ms-shadow', 'ms-fw', cost)} />\r\n      ))\r\n  },\r\n\r\n  transformStringArray: (arr, searchStart, searchEnd, strTransformation) => {\r\n    for (let i = 0; i < arr.length; i++) {\r\n      let str = arr[i]\r\n      if (typeof str !== 'string')\r\n        continue\r\n\r\n      let startIdx = str.search(searchStart)\r\n      let endIdx = str.search(searchEnd)\r\n\r\n      if (startIdx === -1 || endIdx === -1)\r\n        continue\r\n\r\n      let substr = str.substring(startIdx, endIdx + 1) // include search characters\r\n      let transformed = strTransformation(substr)\r\n      transformed = transformed instanceof Array ? transformed : [transformed]\r\n      // replace element at index i with transformed string\r\n      arr.splice(i, 1,\r\n        str.substring(0, startIdx),\r\n        ...transformed,\r\n        str.substring(endIdx + 1)\r\n      )\r\n    }\r\n    return _.compact(arr) // remove any empty strings\r\n  }\r\n}\r\n\r\nexport default utils\r\n\r\nexport const {\r\n  addLeadingZero,\r\n  textToManaFont,\r\n  transformStringArray,\r\n} = utils","import { Paper, Chip } from '@material-ui/core'\r\nimport _ from 'lodash'\r\n\r\nimport styles from './styles'\r\nimport utils from './utils'\r\n\r\n\r\n/** Card render delegation helper function **/\r\nconst renderCell = ({ card, columnName, ...rest }) => {\r\n  switch (columnName) {\r\n    case 'name':\r\n      return renders.renderName({ card, columnName, ...rest })\r\n\r\n    case 'set':\r\n      return renders.renderSet({ card, columnName, ...rest })\r\n\r\n    case 'power_toughness':\r\n      return renders.renderPowerToughness({ card, columnName, ...rest })\r\n\r\n    case 'oracle':\r\n    case 'oracle_text':\r\n      return renders.renderOracleText({ card, columnName, ...rest })\r\n\r\n    case 'signed':\r\n    case 'altered':\r\n    case 'foil':\r\n      return renders.renderBoolean({ card, columnName, ...rest })\r\n\r\n    case 'amount':\r\n      return renders.renderAmount({ card, columnName, ...rest })\r\n\r\n    case 'total_price':\r\n    case 'price':\r\n      return renders.renderPrice({ card, columnName, ...rest })\r\n\r\n    case 'tag':\r\n      return renders.renderTag({ card, columnName, ...rest })\r\n\r\n    case 'mana_cost':\r\n      return renders.renderManaCost({ card, columnName, ...rest })\r\n\r\n    case 'type_line':\r\n    case 'type':\r\n      return renders.renderType({ card, columnName, ...rest })\r\n\r\n    case 'date':\r\n    case 'date_created':\r\n    case 'date_added':\r\n      return renders.renderDate({ card, columnName, ...rest })\r\n\r\n    case 'flavor':\r\n    case 'flavor_text':\r\n      return renders.renderFlavorText({ card, columnName, ...rest })\r\n\r\n    default:\r\n      return renders.defaultRender({ card, columnName, ...rest })\r\n  }\r\n}\r\n\r\n\r\n/** RENDERS **/\r\nconst renders = {\r\n  defaultRender: ({ card, columnName, cardFace }) => {\r\n    let { [columnName]: value } = cardFace !== undefined ? card.card_faces[cardFace] : card\r\n    value = value || card[columnName]\r\n    \r\n    return (\r\n      value &&\r\n      <span style={{ whiteSpace: 'pre-wrap' }}>\r\n        {value}\r\n      </span>\r\n    )\r\n  },\r\n\r\n  renderName: ({ card, cardFace, renderStyle = 'row' }) => {\r\n    const { name } = cardFace !== undefined ? card.card_faces[cardFace] : card\r\n\r\n    return renderStyle === 'row'\r\n      ? name\r\n      : <b>{name}</b>\r\n  },\r\n\r\n  renderOracleText: ({ card, columnName = 'oracle_text', cardFace }) => {\r\n    let { [columnName]: oracleText } = cardFace !== undefined ? card.card_faces[cardFace] : card\r\n    let align = _.words(oracleText).length > 2 ? 'left' : 'center'\r\n\r\n    if (oracleText) {\r\n      oracleText = [oracleText]\r\n\r\n      /* handle `{X}` symbols */\r\n      oracleText = utils.transformStringArray(\r\n        oracleText,\r\n        /\\{/g,\r\n        /\\}/g,\r\n        match => (\r\n          utils.textToManaFont(match, {\r\n            style: {\r\n              fontSize: '0.68em',\r\n              transform: 'translateY(-1px)'\r\n            }\r\n          })\r\n        )\r\n      )\r\n\r\n      /* handle `(...)` paragraphs */\r\n      oracleText = utils.transformStringArray(\r\n        oracleText,\r\n        /\\(/g,\r\n        /\\)/g,\r\n        match => (\r\n          <span style={{ fontStyle: 'italic', fontSize: '0.88em' }}>{match}</span>\r\n        )\r\n      )\r\n\r\n      /* handle `\\n` characters */\r\n      oracleText = oracleText\r\n        .map(text =>\r\n          typeof text === 'string' && text.includes('\\n')\r\n            ? text.split('\\n').map(line => <span>{line}<div style={{ height: '0.2rem' }} /></span>)\r\n            : text\r\n        )\r\n    }\r\n\r\n    return oracleText\r\n      ? <div align={align} style={{ whiteSpace: 'pre-wrap' }}>\r\n        {oracleText}\r\n      </div>\r\n      : ''\r\n  },\r\n\r\n  renderPowerToughness: ({ card, cardFace }) => {\r\n    const { power, toughness } = cardFace !== undefined ? card.card_faces[cardFace] : card\r\n\r\n    return power && toughness\r\n      ?\r\n      <div align='right'>\r\n        {`${power}/${toughness}`}\r\n      </div>\r\n      : ''\r\n  },\r\n\r\n  renderSet: ({ card, theme }) => {\r\n    const { set_data, rarity } = card\r\n    const set = set_data?.parent_set_code ? set_data.parent_set_code : set_data.code\r\n    return (\r\n      <span\r\n        className={['ss', 'ss-fw', `ss-${rarity}`, `ss-${set}`].join(' ')}\r\n        style={{\r\n          ...styles.set,\r\n          ...(rarity === 'common' && theme.palette.type === 'dark' ? { color: '#CCCCCC' } : {})\r\n        }}\r\n      />\r\n    )\r\n  },\r\n\r\n  renderBoolean: ({ card, columnName }) => (\r\n    card[columnName].toString() === 'true' ? '✔' : '✖'\r\n  ),\r\n\r\n  renderAmount: ({ card }) => (\r\n    <Paper component='span' className='floating'>\r\n      {'x' + card.amount}\r\n    </Paper>\r\n  ),\r\n\r\n  renderPrice: ({ card, columnName = 'price' }) => {\r\n    const { [columnName]: price, currency } = card\r\n    return (\r\n      price > 0\r\n        ? currency === 'usd'\r\n          ? '$' + price\r\n          : price + '€'\r\n        : '-'\r\n    )\r\n  },\r\n\r\n  renderTag: ({ card, columnName = 'tags' }) => {\r\n    let { [columnName]: tags } = card\r\n\r\n    return (\r\n      tags.length > 0\r\n        ? //tags.join('; ')\r\n        tags.map((tag, i) =>\r\n          <Chip\r\n            onDelete={() => {/*TODO: add delete functionality to tag chips */ }}\r\n            label={tag}\r\n            size='small'\r\n            key={i}\r\n          />\r\n        )\r\n        : '-'\r\n    )\r\n  },\r\n\r\n  renderManaCost: ({ card, columnName = 'mana_cost', cardFace, renderStyle = 'row' }) => {\r\n    let { [columnName]: manaCost } = cardFace !== undefined ? card.card_faces[cardFace] : card\r\n\r\n    if (!(manaCost instanceof Array))\r\n      manaCost = [manaCost]\r\n    manaCost = _.compact(manaCost)\r\n\r\n    if (manaCost.length === 0)\r\n      return renderStyle === 'row' ? '-' : ''\r\n\r\n    manaCost = manaCost.map(cost => utils.textToManaFont(cost))\r\n    if (manaCost.length > 1)\r\n      manaCost.splice(1, 0, ' // ') // add a separator between the two mana costs\r\n    return manaCost\r\n  },\r\n\r\n  renderType: ({ card, columnName = 'type_line', cardFace, renderStyle = 'content' }) => {\r\n    const { [columnName]: typeLine } = cardFace !== undefined ? card.card_faces[cardFace] : card\r\n\r\n    return renderStyle === 'content'\r\n      ? typeLine\r\n        .replace(/—/g, '-')\r\n      : typeLine\r\n        .replace(/—/g, '-')\r\n        .replace(/Legendary/g, 'Lgd.')\r\n  },\r\n\r\n  renderDate: ({ card, columnName = 'date_added' }) => {\r\n    const date = new Date(card[columnName])\r\n    let [year, month, day] = [date.getFullYear(), date.getMonth() + 1, date.getDate()]\r\n\r\n    return (\r\n      [utils.addLeadingZero(day), utils.addLeadingZero(month), year].join('/')\r\n    )\r\n  },\r\n\r\n  renderFlavorText: ({ card, cardFace }) => {\r\n    const { flavor_text } = cardFace !== undefined ? card.card_faces[cardFace] : card\r\n    let align = _.words(flavor_text).length > 2 ? 'left' : 'center'\r\n\r\n    return (\r\n      flavor_text &&\r\n      <div align={align} style={styles.flavorText}>\r\n        {flavor_text}\r\n      </div>\r\n    )\r\n  },\r\n}\r\n\r\n/** EXPORTS **/\r\nexport default renderCell\r\n\r\nexport const {\r\n  defaultRender,\r\n  renderName,\r\n  renderOracleText,\r\n  renderPowerToughness,\r\n  renderSet,\r\n  renderBoolean,\r\n  renderAmount,\r\n  renderPrice,\r\n  renderTag,\r\n  renderManaCost,\r\n  renderType,\r\n  renderDate,\r\n  renderFlavorText,\r\n} = renders\r\n","\r\nconst useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  // const mainSidesPadding = theme.spacing(10)\r\n\r\n  return {\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor: theme.palette.background.secondary,\r\n      position: 'relative',\r\n      marginTop: theme.spacing(1),\r\n      padding: `${theme.spacing(5)}px ${theme.spacing(5)}px ${theme.spacing(5)}px ${theme.spacing(4)}px`,\r\n      // display: 'flex',\r\n      // flexWrap: 'wrap',\r\n      // alignItems: 'baseline',\r\n      // flexDirection: 'column',\r\n      // justifyContent: 'center',\r\n      // alignContent: 'center',\r\n    },\r\n    topArrow: {\r\n      content: '\"\"',\r\n      zIndex: 1,\r\n      top: -0.5,\r\n      width: 0,\r\n      height: 0,\r\n      position: 'absolute',\r\n      backgroundColor: 'unset',\r\n      border: '2rem solid transparent',\r\n      transition: 'left 0.3s ease',\r\n    },\r\n    image: {\r\n      marginRight: -theme.spacing(1),\r\n      // width: 'fit-content',\r\n    },\r\n    content: {\r\n      padding: theme.spacing(2),\r\n      marginTop: 0,\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable no-lone-blocks */\r\n\r\nimport { Box, Grid, Paper, Hidden, Divider, Typography } from '@material-ui/core'\r\nimport { withStyles, useTheme } from '@material-ui/styles'\r\nimport { connect } from 'react-redux'\r\nimport clsx from 'clsx'\r\n\r\nimport { updateCurrentCollection } from '@/Logic/redux'\r\nimport { CardImage } from '@/Components'\r\nimport renderCell from '@/CardRenders'\r\nimport useStyles from './styles'\r\n\r\n\r\n/** UTILS **/\r\nconst mapStateToProps = (state) => ({})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    updateCurrentCollection: (collection) => dispatch(updateCurrentCollection(collection)),\r\n  }\r\n})\r\n\r\nconst renderGameFields = ({ card, renderStyle = 'content', ...rest }) => {\r\n  const [name, manaCost, typeLine, set, oracleText, flavorText, artist, collectorNumber, powerToughness] = [\r\n    renderCell({ card, columnName: 'name', renderStyle, ...rest }),\r\n    renderCell({ card, columnName: 'mana_cost', renderStyle, ...rest }),\r\n    renderCell({ card, columnName: 'type_line', renderStyle, ...rest }),\r\n    renderCell({ card, columnName: 'set', renderStyle, ...rest }),\r\n    renderCell({ card, columnName: 'oracle_text', renderStyle, ...rest }),\r\n    renderCell({ card, columnName: 'flavor_text', renderStyle, ...rest }),\r\n    renderCell({ card, columnName: 'artist', renderStyle, ...rest }),\r\n    renderCell({ card, columnName: 'collector_number', renderStyle, ...rest }),\r\n    renderCell({ card, columnName: 'power_toughness', renderStyle, ...rest }),\r\n  ]\r\n\r\n  return (\r\n    <Grid item container justifyContent='center'>\r\n      <Grid item container justifyContent='center' spacing={2} xs={12}>\r\n        <Grid item>\r\n          {name}\r\n        </Grid>\r\n        {manaCost && <Grid item>\r\n          {manaCost}\r\n        </Grid>}\r\n      </Grid>\r\n      <Grid item container justifyContent='center' spacing={1} xs={12}>\r\n        <Grid item>\r\n          {typeLine}\r\n        </Grid>\r\n        <Grid item>\r\n          {set}\r\n        </Grid>\r\n      </Grid>\r\n      {oracleText && <Grid component={Box} item xs={12} paddingTop={1}>\r\n        {oracleText}\r\n      </Grid>}\r\n      {flavorText && <Grid item xs={12} align='left'>\r\n        {flavorText}\r\n      </Grid>}\r\n      <Grid item container justifyContent='space-between' xs={12} wrap='nowrap' component={Typography} variant='overline'>\r\n        <Grid item container spacing={2}>\r\n          <Grid item>\r\n            #{collectorNumber}\r\n          </Grid>\r\n          <Grid item>\r\n            <span className='ms ms-shadow ms-artist-nib' />{artist}\r\n          </Grid>\r\n        </Grid>\r\n        {powerToughness && <Grid item>\r\n          {powerToughness}\r\n        </Grid>}\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\n\r\nconst CardInfo = (props) => {\r\n  /** VARS **/\r\n  const {\r\n    classes,\r\n    dispatch,\r\n    card,\r\n    rootComponent,\r\n    rootProps,\r\n    topArrowProps,\r\n  } = props\r\n  const theme = useTheme()\r\n\r\n\r\n  /** EFFECTS **/\r\n  { }\r\n\r\n\r\n  /** HANDLERS **/\r\n  { }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <div style={{ position: 'relative' }}>\r\n      <div\r\n        className={classes.topArrow}\r\n        {...topArrowProps}\r\n      />\r\n\r\n      <Grid container justifyContent='center' alignItems='flex-start'\r\n        component={rootComponent}\r\n        wrap='nowrap'\r\n        className={classes.root}\r\n        {...rootProps}\r\n      >\r\n\r\n        {/* CARD PREVIEW */}\r\n        <Hidden smDown>\r\n          <Grid item className={classes.image}>\r\n            <CardImage\r\n              card={card}\r\n            />\r\n          </Grid>\r\n        </Hidden>\r\n\r\n        {/* CARD INFO */}\r\n        <Grid item container xs={12} md={10} lg={8} xl={6} justifyContent='center' align='center' spacing={card.is_dfc ? 2 : 1} component={Paper} elevation={3} className={classes.content}>\r\n          {\r\n            card.is_dfc\r\n              ?\r\n              <>\r\n                {/* Front Face */}\r\n                <Grid item container justifyContent='center' xs={12} sm={11} lg={true}>\r\n                  {renderGameFields({ card, theme, cardFace: 0 })}\r\n                </Grid>\r\n\r\n                <Hidden lgUp>\r\n                  <Divider style={{ width: '100%' }} />\r\n                </Hidden>\r\n                <Hidden mdDown>\r\n                  <Divider flexItem orientation='vertical' />\r\n                </Hidden>\r\n\r\n                {/* Back Face */}\r\n                <Grid item container justifyContent='center' xs={12} sm={11} lg={true}>\r\n                  {renderGameFields({ card, theme, cardFace: 1 })}\r\n                </Grid>\r\n              </>\r\n\r\n              : /* Single faced card */\r\n              <Grid item container justifyContent='center' xs={12} md={10} lg={9} xl={8}>\r\n                {renderGameFields({ card, theme })}\r\n              </Grid>\r\n          }\r\n\r\n          <Divider variant='middle' style={{ width: '100%' }} />\r\n\r\n          {/* EDITABLE FIELDS */}\r\n          {/* TODO: render editable files & add edit button functionality */}\r\n          <Grid item container justifyContent='center' direction='column' xs={12}>\r\n            <Grid item>\r\n              {renderCell({ card, columnName: 'tag', renderStyle: 'content' })}\r\n            </Grid>\r\n            <Grid item>\r\n              {renderCell({ card, columnName: 'price', renderStyle: 'content' })}\r\n            </Grid>\r\n            <Grid item>\r\n              TBA\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    connect(mapStateToProps, mapDispatchToProps)(\r\n      CardInfo\r\n    )\r\n  )","\r\nconst useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  // const mainSidesPadding = theme.spacing(10)\r\n\r\n  return {\r\n    root: {\r\n      '& > *': {\r\n        borderBottom: 'unset',\r\n      },\r\n    },\r\n    checkbox: {\r\n      borderLeft: `1px solid ${theme.palette.divider}`,\r\n      paddingRight: '6px'\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { useState, useEffect, useRef } from 'react'\r\nimport { TableRow, TableCell, Collapse, IconButton, Checkbox, Paper } from '@material-ui/core'\r\nimport { withStyles, useTheme } from '@material-ui/styles'\r\nimport { connect } from 'react-redux'\r\nimport useScrollPosition from '@react-hook/window-scroll'\r\nimport _ from 'lodash'\r\nimport clsx from 'clsx'\r\nimport {\r\n  KeyboardArrowDown as KeyboardArrowDownIcon,\r\n  KeyboardArrowUp as KeyboardArrowUpIcon\r\n} from '@material-ui/icons'\r\n\r\nimport renderCell from '@/CardRenders'\r\nimport CardInfo from '../../CardInfo'\r\nimport useStyles from './styles'\r\n\r\n\r\nconst mapStateToProps = (state) => ({})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // dispatch: {}\r\n})\r\n\r\nconst CardRow = (props) => {\r\n  /** VARS **/\r\n  const {\r\n    classes,\r\n    columns,\r\n    card,\r\n    onMouseEnter,\r\n    selectable,\r\n    onSelected,\r\n    selectedCardIds,\r\n    closeAllRows,\r\n    closeSignal,\r\n    // dispatch,\r\n  } = props\r\n  const theme = useTheme()\r\n  const setRef = useRef()\r\n  const scrollPosition = useScrollPosition()\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [showContent, setShowContent] = useState(false)\r\n\r\n  const [isMouseOver, setIsMouseOver] = useState(false)\r\n\r\n\r\n  /** UTILS **/\r\n  const floatingCss = (ref, scrollPosition) => {\r\n    const { x, y, width, height } = ref.current?.getBoundingClientRect() ?? { x: 0, y: 0, width: 0, height: 0 }\r\n    return {\r\n      zIndex: 1,\r\n      position: 'absolute',\r\n      left: x + width,\r\n      top: y + (height / 8) + scrollPosition,\r\n      // display: isMouseOver ? 'block' : 'none',\r\n    }\r\n  }\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    if (closeSignal !== card._id)\r\n      setIsOpen(false)\r\n  }, [closeSignal])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleSelectChange = (e) => {\r\n    onSelected(card._id, e.target.checked)\r\n  }\r\n\r\n  const handleIsOpenToggle = () => {\r\n    if (!isOpen)\r\n      closeAllRows(card._id)\r\n\r\n    setIsOpen(!isOpen)\r\n  }\r\n\r\n  const onCollapseExited = (isAppearing) => {\r\n    setShowContent(false)\r\n  }\r\n\r\n  const onCollapseEnter = (isAppearing) => {\r\n    setShowContent(true)\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <>\r\n      <TableRow\r\n        className={clsx(classes.root, 'cursor-pointer')}\r\n        onClick={handleIsOpenToggle}\r\n        onMouseEnter={onMouseEnter}\r\n      // onContextMenu={e => {console.log(card.name);e.preventDefault()}} //TODO: add context menu\r\n      >\r\n        {\r\n          Object\r\n            .entries(columns)\r\n            .map(\r\n              ([columnName, columnDisplayName]) => (\r\n                <TableCell\r\n                  key={columnName}\r\n                  align='center'\r\n                  {\r\n                  ...( /* renderSet() setup */\r\n                    columnName === 'set'\r\n                      ? {\r\n                        ref: setRef,\r\n                        onMouseEnter: e => setIsMouseOver(true),\r\n                        onMouseLeave: e => setIsMouseOver(false),\r\n                      }\r\n                      : {}\r\n                  ) /* renderSet() setup */\r\n                  }\r\n                >\r\n                  {renderCell({ card, columnName, theme })}\r\n                  {\r\n                    columnName === 'set' && isMouseOver && (\r\n                      <Paper className='floating' style={floatingCss(setRef, scrollPosition)}>\r\n                        {[card.set_name, _.upperFirst(card.rarity), '#' + card.collector_number].join(' - ')}\r\n                      </Paper>\r\n                    )\r\n                  }\r\n                </TableCell>\r\n              )\r\n            )\r\n        }\r\n\r\n        {/* DROPDOWN ARROW */}\r\n        <TableCell>\r\n          <IconButton size='small' onClick={handleIsOpenToggle}>\r\n            {\r\n              isOpen\r\n                ? <KeyboardArrowUpIcon />\r\n                : <KeyboardArrowDownIcon />\r\n            }\r\n          </IconButton>\r\n        </TableCell>\r\n\r\n        {/* CHECKBOX */}\r\n        {\r\n          selectable &&\r\n          <>\r\n            <TableCell onClick={e => e.stopPropagation()} className={classes.checkbox}>\r\n              <Checkbox\r\n                size='small'\r\n                checked={selectedCardIds.includes(card._id)}\r\n                onChange={handleSelectChange}\r\n              />\r\n            </TableCell>\r\n          </>\r\n        }\r\n      </TableRow>\r\n\r\n      <TableRow onMouseEnter={onMouseEnter} className={classes.row} style={{ display: showContent ? 'table-row' : 'none' }}>\r\n        <TableCell colSpan={10} style={{ padding: 0 }}>\r\n          <Collapse unmountOnExit in={isOpen} timeout=\"auto\" onEnter={onCollapseEnter} onExited={onCollapseExited}>\r\n            <CardInfo\r\n              card={card}\r\n              topArrowProps={{\r\n                style: {\r\n                  borderTopColor: theme.palette.background.paper,\r\n                  left: theme.spacing(25),\r\n                },\r\n              }}\r\n            />\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    connect(mapStateToProps, mapDispatchToProps)(\r\n      CardRow\r\n    )\r\n  )","\r\nconst useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  // const mainSidesPadding = theme.spacing(10)\r\n\r\n  return {\r\n    root: {},\r\n    'card-image': {\r\n      position: 'sticky',\r\n      top: theme.spacing(8),\r\n      marginRight: theme.spacing(2),\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","import { useState, useEffect } from 'react'\r\nimport { Grid, Paper, Hidden, Table, TableContainer, TableRow, TableHead, TableBody, TableCell, TableSortLabel } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport { connect } from 'react-redux'\r\nimport _ from 'lodash'\r\n\r\nimport { CardImage } from '@/Components'\r\nimport CardRow from './CardRow'\r\nimport useStyles from './styles'\r\n\r\n\r\n// _.mixin({\r\n//   sortWith: (arr, key, comparator) => {\r\n//     const keyComparator = (key) => (a, b) => comparator(a[key], b[key])\r\n//     return _.map(arr).sort(keyComparator(key))\r\n//   }\r\n// })\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n\r\n  }\r\n})\r\n\r\nconst CardTableView = (props) => {\r\n  /** VARS **/\r\n  const {\r\n    classes,\r\n    data,\r\n    columns,\r\n    isEditable,\r\n    // dispatch,\r\n  } = props\r\n  const [currentHoveringCard, setCurrentHoveringCard] = useState()\r\n  const [sortBy, setSortByCol] = useState()\r\n  const [sortOrder, setSortOrder] = useState('desc')\r\n  const [sortedData, setSortedData] = useState(data)\r\n  const [closeSignal, setCloseSignal] = useState(false)\r\n  const [selectedCardIds, setSelectedCardIds] = useState([]) //will contain mongodb ids (`card._id`) of selected rows\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    let _sortBy //= sortBy === 'mana_cost' ? 'cmc' : sortBy\r\n    switch (sortBy) {\r\n      case 'mana_cost':\r\n      case 'mana_value':\r\n        _sortBy = ['cmc']\r\n        break\r\n\r\n      case 'total_price':\r\n      case 'prices':\r\n      case 'price':\r\n        _sortBy = ['price']\r\n        break\r\n\r\n      case 'type':\r\n      case 'type_line':\r\n        _sortBy = [(card) => card.type_line.replace('Legendary ', '')]\r\n        break\r\n\r\n      case 'set':\r\n      case 'rarity':\r\n        _sortBy = [\r\n          (card) => {\r\n            return card.set_data.parent_set_code ?? card.set\r\n          },\r\n          (card) => {\r\n            switch (card.rarity) {\r\n              default:\r\n                return 4\r\n              case 'common':\r\n                return 3\r\n              case 'uncommon':\r\n                return 2\r\n              case 'rare':\r\n                return 1\r\n              case 'mythic':\r\n                return 0\r\n            }\r\n          }\r\n        ]\r\n        break\r\n\r\n      default:\r\n        _sortBy = [sortBy]\r\n        break\r\n\r\n      /* if `sortBy` is not specified, then sort by `date_created` */\r\n      case null:\r\n      case undefined:\r\n      case '':\r\n        _sortBy = [(card) => new Date(card.date_created)]\r\n        break\r\n    }\r\n\r\n    setSortedData(\r\n      _.orderBy(data, [..._sortBy, 'name', 'collector_number'], sortOrder)\r\n    )\r\n  }, [data, sortOrder, sortBy])\r\n\r\n\r\n  useEffect(() => {\r\n    if (!isEditable)\r\n      setSelectedCardIds([])\r\n  }, [isEditable])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleRowSelected = (id, checked) => {\r\n    setSelectedCardIds(\r\n      checked\r\n        ? [...selectedCardIds, id]\r\n        : selectedCardIds.filter(cardId => cardId !== id)\r\n    )\r\n  }\r\n\r\n  const closeAllRows = (origin) => {\r\n    setCloseSignal(origin)\r\n  }\r\n\r\n  const handleRowHover = (card, i) => {\r\n    setCurrentHoveringCard(card)\r\n  }\r\n\r\n  const handleHeaderClick = (event, colName) => {\r\n    if (colName === sortBy) {\r\n      switch (sortOrder) {\r\n        case 'desc': //second click\r\n          setSortOrder('asc')\r\n          break\r\n\r\n        case 'asc': //third click, reset sorting\r\n        default:\r\n          setSortByCol('')\r\n          setSortOrder('desc')\r\n          break\r\n      }\r\n    }\r\n    else {\r\n      // first click\r\n      setSortByCol(colName)\r\n      setSortOrder('desc')\r\n    }\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <Grid item container spacing={1} xs={12}>\r\n      <Grid item container wrap='nowrap' justifyContent='center'>\r\n\r\n        {/** CARD PREVIEW **/}\r\n        <Hidden mdDown>\r\n          <Grid item>\r\n            <div className={classes['card-image']}>\r\n              <CardImage tiltEnabled\r\n                card={currentHoveringCard}\r\n              />\r\n            </div>\r\n          </Grid>\r\n        </Hidden>\r\n\r\n        {/** TABLE VIEW **/}\r\n        <Grid item justifyContent='center' style={{flexGrow:1}}>\r\n          <TableContainer component={Paper} className={classes.paper} elevation={5}>\r\n            <Table size=\"small\" >\r\n              <TableHead className={classes.tableHead}>\r\n                <TableRow>\r\n\r\n                  {Object.entries(columns).map(([columnName, columnDisplayName]) => (\r\n                    <TableCell\r\n                      style={{ paddingLeft: '16px' }}\r\n                      key={columnName}\r\n                      align=\"center\"\r\n                      sortDirection={sortBy === columnName ? sortOrder : false}\r\n                    >\r\n                      <TableSortLabel\r\n                        active={sortBy === columnName}\r\n                        direction={sortBy === columnName ? sortOrder : 'asc'}\r\n                        onClick={e => handleHeaderClick(e, columnName)}\r\n                      >\r\n                        {columnDisplayName}\r\n                      </TableSortLabel>\r\n                    </TableCell>\r\n                  ))}\r\n\r\n                  {/* Dropdown icon */}\r\n                  <TableCell className={classes.iconCell} />\r\n\r\n                  {/** Checkbox **/}\r\n                  {\r\n                    isEditable &&\r\n                    <TableCell className={classes.iconCell} />\r\n                  }\r\n\r\n                </TableRow>\r\n              </TableHead>\r\n\r\n              <TableBody>\r\n                {sortedData.map(card => (\r\n                  <CardRow\r\n                    onMouseEnter={e => handleRowHover(card)}\r\n                    key={card._id}\r\n                    columns={columns}\r\n                    card={card}\r\n                    selectable={isEditable}\r\n                    onSelected={handleRowSelected}\r\n                    selectedCardIds={selectedCardIds}\r\n\r\n                    closeAllRows={closeAllRows}\r\n                    closeSignal={closeSignal}\r\n                  />\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    connect(mapStateToProps, mapDispatchToProps)(\r\n      CardTableView\r\n    )\r\n  )","\r\nconst useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  // const mainSidesPadding = theme.spacing(10)\r\n\r\n  return {\r\n    root: {},\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable no-lone-blocks */\r\n\r\nimport { Fragment, useEffect, useState, useRef } from 'react'\r\nimport { Paper, Grid, Collapse } from '@material-ui/core'\r\nimport { withStyles, useTheme } from '@material-ui/styles'\r\nimport { connect } from 'react-redux'\r\nimport useSize from '@react-hook/size'\r\nimport _ from 'lodash'\r\n\r\nimport { CardImage } from '@/Components'\r\nimport CardInfo from '../CardInfo'\r\nimport useStyles from './styles'\r\n\r\n\r\n//TODO: all this\r\n\r\n\r\nconst mapStateToProps = (state) => ({})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // dispatch: {}\r\n})\r\n\r\nconst CardGridView = (props) => {\r\n  /** VARS **/\r\n  const {\r\n    classes,\r\n    data,\r\n    // dispatch,\r\n  } = props\r\n  const cardWidth = 209\r\n  const theme = useTheme()\r\n\r\n  const containerRef = useRef()\r\n  const [containerWidth, containerHeight] = useSize(containerRef)\r\n  const [cardsPerRow, setCardsPerRow] = useState(0)\r\n  const [selectedCard, setSelectedCard] = useState({})\r\n\r\n  const [sortedData, setSortedData] = useState([])\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    setSortedData(\r\n      _.sortBy(data, card => card.type_line.replace('Legendary', ''))\r\n    )\r\n  }, [data])\r\n\r\n  useEffect(() => {\r\n    setCardsPerRow(\r\n      Math.floor(containerWidth / (cardWidth + 16))\r\n    )\r\n  }, [containerWidth, cardWidth])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleCardClick = ({ card, key }) => (e) => {\r\n    const { data: selectedCardData, targetCollapse } = selectedCard\r\n\r\n    if (targetCollapse !== undefined && selectedCardData?._id === card._id) {\r\n      // a collapse is open & the same card is clicked -> close the collapse\r\n      setSelectedCard({\r\n        ...selectedCard,\r\n        targetCollapse: undefined,\r\n      })\r\n    }\r\n    else {\r\n      // a new card is clicked, open the collapse\r\n      setSelectedCard({\r\n        data: card,\r\n        targetCollapse: Math.floor(key / cardsPerRow),\r\n        box: e.currentTarget.getBoundingClientRect(),\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <Grid item container ref={containerRef} xs={12} lg={10} spacing={2} justifyContent='center'>\r\n      {\r\n        sortedData && sortedData.map((card, i) =>\r\n          <Fragment key={i}>\r\n            {\r\n              card &&\r\n              <Grid item xs='auto'>\r\n                <CardImage\r\n                  packTransformButton\r\n                  tiltEnabled\r\n                  tiltProps={{\r\n                    tiltMaxAngleX: 12.5,\r\n                    tiltMaxAngleY: 12.5,\r\n                  }}\r\n                  imageProps={{\r\n                    width: cardWidth,\r\n                    height: cardWidth * 1.4,\r\n                  }}\r\n                  rootProps={{\r\n                    onClick: handleCardClick({ card, key: i }),\r\n                  }}\r\n                  card={card}\r\n                />\r\n              </Grid>\r\n            }\r\n            {\r\n              (((i + 1) % cardsPerRow === 0) || (i === sortedData.length - 1)) &&\r\n              <Grid item xs={12}>\r\n                <Collapse unmountOnExit\r\n                  timeout=\"auto\"\r\n                  in={Math.floor(i / cardsPerRow) === selectedCard.targetCollapse}\r\n                >\r\n                  {\r\n                    selectedCard?.data &&\r\n                    <CardInfo\r\n                      rootComponent={Paper}\r\n                      card={selectedCard.data}\r\n                      rootProps={{\r\n                        elevation: 1,\r\n                      }}\r\n                      topArrowProps={{\r\n                        style: {\r\n                          borderTopColor: theme.palette.background.default,\r\n                          left: `calc(${selectedCard?.box?.left + (selectedCard?.box?.width * 0.5) - containerRef.current.offsetLeft}px - 2.5rem)`,\r\n                        },\r\n                      }}\r\n                    />\r\n                  }\r\n                </Collapse>\r\n              </Grid>\r\n            }\r\n          </Fragment>\r\n        )\r\n      }\r\n    </Grid>\r\n\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    connect(mapStateToProps, mapDispatchToProps)(\r\n      CardGridView\r\n    )\r\n  )","import { FormControlLabel, Grid, Radio, RadioGroup, TextField, Chip } from \"@material-ui/core\"\r\nimport { Autocomplete } from \"@material-ui/lab\"\r\n// import clsx from \"clsx\"\r\n// import _ from 'lodash'\r\n\r\n\r\nconst formatCode = (code) => {\r\n  code = code.toLowerCase()\r\n  if (code.charAt(0) !== \"{\") return code\r\n  return \"\"\r\n}\r\n\r\nconst RangeTextField = ({ name, maxMin, state, stateHandler, clsInput }) => (\r\n  <TextField\r\n    className={clsInput}\r\n    id={maxMin + \"-\" + name}\r\n    label={maxMin}\r\n    type=\"number\"\r\n    placeholder={maxMin}\r\n    size=\"small\"\r\n    value={state}\r\n    pattern=\"\"\r\n    onChange={(e) => stateHandler(e.target.value)}\r\n    onKeyDown={(e) => {\r\n      if (e.key === \"e\" || e.key === \"+\" || e.key === \"-\") e.preventDefault()\r\n    }}\r\n  />\r\n)\r\n\r\n\r\nconst Utils = {\r\n  TextOption: ({ label, value, onChange, ...rest }) => (\r\n    <TextField\r\n      margin='dense'\r\n      size='small'\r\n      variant='outlined'\r\n      // variant='standard'\r\n      color='secondary'\r\n      label={label}\r\n      value={value}\r\n      onChange={onChange}\r\n      {...rest}\r\n    />\r\n  ),\r\n\r\n  RangeOptions: ({ name, stateMin, stateMax, stateHandlerMin, stateHandlerMax, clsInput, clsMinus }) => (\r\n    <Grid container spacing={1}>\r\n      <Grid item>{name + \": \"}</Grid>\r\n      <Grid item>\r\n        <RangeTextField\r\n          name={name}\r\n          maxMin=\"Minimum\"\r\n          state={stateMin}\r\n          stateHandler={stateHandlerMin}\r\n          clsInput={clsInput}\r\n        />\r\n      </Grid>\r\n      <Grid item className={clsMinus}>\r\n        —\r\n      </Grid>\r\n      <Grid item>\r\n        <RangeTextField\r\n          name={name}\r\n          maxMin=\"Maximum\"\r\n          state={stateMax}\r\n          stateHandler={stateHandlerMax}\r\n          clsInput={clsInput}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  ),\r\n\r\n  RadioOptions: ({ name, state, stateHandler }) => (\r\n    <Grid container spacing={2}>\r\n      <Grid item>{name + \": \"}</Grid>\r\n      <Grid item>\r\n        <RadioGroup\r\n          row\r\n          aria-label={name.toLowerCase()}\r\n          name={\"row-radio-buttons-\" + name.toLowerCase()}\r\n          value={state}\r\n          onChange={(e) => stateHandler(e.target.value)}\r\n        >\r\n          <FormControlLabel\r\n            value=\"Both\"\r\n            control={<Radio />}\r\n            label=\"Both\"\r\n          />\r\n          <FormControlLabel value=\"No\" control={<Radio />} label=\"No\" />\r\n          <FormControlLabel value=\"Yes\" control={<Radio />} label=\"Yes\" />\r\n        </RadioGroup>\r\n      </Grid>\r\n    </Grid>\r\n  ),\r\n\r\n  AutocompleteOptions: ({ ...props }) => (\r\n    <Autocomplete multiple disableCloseOnSelect filterSelectedOptions\r\n      style={{\r\n        width: '95%',\r\n        ...props?.style\r\n      }}\r\n      color='secondary'\r\n      ChipProps={{\r\n        variant: \"outlined\",\r\n        size: \"small\",\r\n        ...props?.ChipProps,\r\n      }}\r\n      renderTags={(value, getTagProps) => (\r\n        value.map((option, index) => (\r\n          <Chip\r\n            {...getTagProps({ index })}\r\n            label={\r\n              props?.ChipProps?.label\r\n                ? props.ChipProps.label instanceof Function\r\n                  ? props.ChipProps.label(option)\r\n                  : props.ChipProps.label\r\n                : option\r\n            }\r\n          />\r\n        ))\r\n      )}\r\n      renderInput={params => (\r\n        <TextField\r\n          {...params}\r\n          color='secondary'\r\n          size='small'\r\n          margin='dense'\r\n          variant=\"outlined\"\r\n          label={props?.label}\r\n          {...props?.InputProps}\r\n        />\r\n      )}\r\n      {...props}\r\n    />\r\n  ),\r\n}\r\n\r\nexport default Utils\r\n\r\nexport const {\r\n  RadioOptions,\r\n  TextOption,\r\n  RangeOptions,\r\n  AutocompleteOptions,\r\n} = Utils\r\n","\r\nconst useStyles = (theme) => {\r\n    // const bottomBarHeight = '50px'\r\n    // const mainSidesPadding = theme.spacing(10)\r\n  \r\n    return {\r\n      icon: {\r\n      },\r\n      popover: {\r\n      },\r\n      paper: {\r\n        minWidth: theme.spacing(20),\r\n      },\r\n      // contentShift: {\r\n      //   transition: theme.transitions.create('margin', {\r\n      //     easing: theme.transitions.easing.easeOut,\r\n      //     duration: theme.transitions.duration.enteringScreen,\r\n      //   }),\r\n      //   marginLeft: 0,\r\n      // },\r\n      // listItemText: {\r\n      //   marginRight: theme.spacing(1),\r\n      // },\r\n      // ListItemIcon: {\r\n      //   marginRight: theme.spacing(2.5),\r\n      //   width: 'auto',\r\n      //   minWidth: 'auto',\r\n      // },\r\n    }\r\n  }\r\n  \r\n  export default useStyles","/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { useState, forwardRef, useImperativeHandle, useRef } from 'react'\r\nimport { ClickAwayListener, IconButton, List, Paper, Popover } from '@material-ui/core'\r\nimport { makeStyles, useTheme } from '@material-ui/styles'\r\nimport FilterListIcon from '@material-ui/icons/FilterList'\r\n// import { connect } from 'react-redux'\r\n\r\n// import { setCurrentTab } from '@/Logic/redux'\r\nimport useStyles from './styles'\r\n\r\n\r\nconst MenuPopover = forwardRef((props, ref) => {\r\n  /** VARS **/\r\n  const [menuAnchor, setMenuAnchor] = useState(null)\r\n  const menuOpen = Boolean(menuAnchor)\r\n  const filterButtonRef = useRef()\r\n  const classes = makeStyles(useStyles(useTheme()))()\r\n  // const {\r\n  //   icon,\r\n  // } = props\r\n\r\n\r\n  /** EFFECTS **/\r\n  useImperativeHandle(ref, () => ({\r\n    openMenu: () => { handleMenuOpen(filterButtonRef) },\r\n    closeMenu: () => { handleMenuClose(null) },\r\n  }))\r\n\r\n  // useEffect(() => {\r\n  //   //onMount\r\n  //   console.log(props.ref)\r\n  // }, [])\r\n\r\n  /** HANDLERS **/\r\n  const handleIconClick = (e) => {\r\n    handleMenuOpen(e.currentTarget)\r\n    e.stopPropagation()\r\n  }\r\n\r\n  const handleMenuOpen = (menuAnnchor) => {\r\n    setMenuAnchor(menuAnnchor)\r\n  }\r\n\r\n  const handleMenuClose = (e) => {\r\n    setMenuAnchor(null)\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <>\r\n      <IconButton\r\n        color=\"inherit\"\r\n        className={classes.icon}\r\n        ref={filterButtonRef}\r\n        onClick={handleIconClick}\r\n      >\r\n        <FilterListIcon />\r\n      </IconButton>\r\n\r\n      <Popover\r\n        className={classes.popover}\r\n        open={menuOpen}\r\n        anchorEl={menuAnchor}\r\n        onClose={handleMenuClose}\r\n        anchorOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"right\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"left\",\r\n        }}\r\n      >\r\n        <Paper className={classes.paper}>\r\n          <ClickAwayListener onClickAway={handleMenuClose}>\r\n            <List dense disablePadding>\r\n              {props.children}\r\n            </List>\r\n          </ClickAwayListener>\r\n        </Paper>\r\n      </Popover>\r\n    </>\r\n  )\r\n})\r\n\r\n/** EXPORT **/\r\nexport default MenuPopover\r\n","\r\nconst useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  // const mainSidesPadding = theme.spacing(10)\r\n\r\n  return {\r\n    root: {\r\n      // maxWidth: theme.spacing(200),\r\n      // display: 'flex',\r\n      // justifyContent: 'center',\r\n    },\r\n    search: {\r\n      // margin: \"0 auto\",\r\n      // marginBottom: theme.spacing(2),\r\n    },\r\n    minus: {\r\n      // marginLeft: \"10px\",\r\n    },\r\n    rangeInput: {\r\n      // marginTop: \"-10px\",\r\n    },\r\n    autocompleteInput: {\r\n      // maxWidth: \"450px\",\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-lone-blocks */\r\n\r\nimport React, { useEffect, useState, createRef } from \"react\"\r\nimport { Grid, InputAdornment, TextField, ListItem, ListSubheader, Divider } from \"@material-ui/core\"\r\nimport { withStyles } from \"@material-ui/styles\"\r\nimport { connect } from \"react-redux\"\r\nimport Scryfall from \"scryfall-client\"\r\nimport _ from \"lodash\"\r\n\r\nimport { RadioOptions, TextOption, RangeOptions, AutocompleteOptions } from \"./utils\"\r\nimport FilterPopover from \"./FilterPopover\"\r\nimport useStyles from \"./styles\"\r\n\r\n\r\nconst mapStateToProps = (state) => ({})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {},\r\n})\r\n\r\nconst FilterProvider = (props) => {\r\n  /** VARS **/\r\n  const {\r\n    // dispatch,\r\n    classes,\r\n    setFilters,\r\n  } = props\r\n  const filtersMenuRef = createRef()\r\n\r\n  const [setsData, setSetsData] = useState([])\r\n  const [cardName, setCardName] = useState('')\r\n\r\n  const [oracleText, setOracleText] = useState('')\r\n  const [typeLine, setTypeLine] = useState('')\r\n  const [tags, setTags] = useState('')\r\n  const [tagArray, setTagArray] = useState([])\r\n\r\n  // const [selectedColors, setSelectedColors] = useState([])\r\n  // const [selectedManaCosts, setSelectedManaCosts] = useState([])\r\n  const [selectedSets, setSelectedSets] = useState([])\r\n\r\n  // const [amountMin, setAmountMin] = useState(0)\r\n  // const [amountMax, setAmountMax] = useState(9999)\r\n  // const [priceMin, setPriceMin] = useState(0)\r\n  // const [priceMax, setPriceMax] = useState(9999)\r\n\r\n  // const [foil, setFoil] = useState(\"Both\")\r\n  // const [signed, setSigned] = useState(\"Both\")\r\n  // const [altered, setAltered] = useState(\"Both\")\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    const fetchSets = async () => {\r\n      const allSets = await Scryfall.getSets()\r\n      setSetsData(\r\n        _.chain(allSets)\r\n          // .filter(set =>\r\n          //   set.set_type === 'token'\r\n          // )\r\n          .map((set) => ({\r\n            ...set,\r\n            set_type: _.chain(set.set_type).replace(/[_]+/g, ' ').upperFirst().value(),\r\n            released_at: new Date(set.released_at),\r\n          }))\r\n          .sortBy(['set_type', 'released_at'])\r\n          .value()\r\n      )\r\n    }\r\n    fetchSets()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setFilters({\r\n      name: v => v.toLowerCase().includes(cardName.toLowerCase()),\r\n      oracle_text: v => v ? v.toLowerCase().includes(oracleText) : true,\r\n      type_line: v => v.toLowerCase().includes(typeLine),\r\n      tag: v => (\r\n        tagArray.length > 0\r\n          ? _.intersection(v, tagArray).length > 0\r\n          : true\r\n      ),\r\n      set: v => (\r\n        selectedSets.length > 0\r\n          ? _.includes(selectedSets.map(set => set.code), v)\r\n          : true\r\n      ),\r\n      // colors: selectedColors,\r\n      // mana_cost: selectedManaCosts,\r\n      // amount: (v) => v >= amountMin && v <= amountMax,\r\n      // price: (v, item) => item.amount * item.prices.usd >= priceMin && item.amount * item.prices.usd <= priceMax,\r\n      // foil: (v) => getRadioAsBoolean(v, foil),\r\n      // signed: (v) => getRadioAsBoolean(v, signed),\r\n      // altered: (v) => getRadioAsBoolean(v, altered),\r\n    })\r\n  }, [cardName, oracleText, typeLine, tags, selectedSets])\r\n  // }, [cardName, oracleText, type, selectedColors, selectedManaCosts, selectedSets, amountMin, amountMax, priceMin, priceMax, foil, signed, altered])\r\n\r\n\r\n  /** HANDLERS **/\r\n  { }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <Grid item container className={classes.root}>\r\n      <TextField\r\n        id=\"filled-search\"\r\n        label=\"Search Card Name\"\r\n        size='small'\r\n        type=\"search\"\r\n        color='secondary'\r\n        variant=\"filled\"\r\n        className={classes.search}\r\n        value={cardName}\r\n        onChange={(e) => setCardName(e.target.value)}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <FilterPopover ref={filtersMenuRef}>\r\n                <ListSubheader>\r\n                  Filters\r\n                </ListSubheader>\r\n                <ListItem>\r\n                  <TextOption\r\n                    label=\"Oracle Text\"\r\n                    value={oracleText}\r\n                    onChange={e => setOracleText(e.target.value)}\r\n                  />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <TextOption\r\n                    label=\"Type\"\r\n                    value={typeLine}\r\n                    onChange={e => setTypeLine(e.target.value)}\r\n                  />\r\n                </ListItem>\r\n\r\n                <ListItem>\r\n                  {/* <AutocompleteOptions freesolo\r\n                    open={false}\r\n                    popupIcon={null}\r\n                    options={[]}\r\n                    label=\"Tags\"\r\n                    value={tags}\r\n                    onKeyDown={e => console.log(e.key)}\r\n                    onChange={(e, v) => console.log('onChange', v)}\r\n                    onInputChange={(e, v) => console.log('onInputChange', v)}\r\n                  /> */}\r\n                  <TextOption\r\n                    label=\"Tags\"\r\n                    value={tags}\r\n                    onChange={e => {\r\n                      setTags(e.target.value)\r\n                      setTagArray(\r\n                        _.chain(e.target.value)\r\n                          .split(/[ ,;]+/g)\r\n                          .uniq()\r\n                          .compact()\r\n                          .value()\r\n                      )\r\n                    }}\r\n                    helperText={\r\n                      <>\r\n                        Separate tags with\r\n                        <code style={{\r\n                          padding: '2px',\r\n                          marginLeft: '0.25em',\r\n                          backgroundColor: 'rgba(255,255,255,0.1)',\r\n                          borderRadius: '12.5%',\r\n                        }}>\r\n                          [;, ]+\r\n                        </code>\r\n                      </>\r\n                    }\r\n                  />  \r\n                </ListItem>\r\n\r\n                <Divider />\r\n\r\n                <ListItem>\r\n                  <AutocompleteOptions\r\n                    label=\"Sets\"\r\n                    options={setsData}\r\n                    value={selectedSets}\r\n                    onChange={(e, v) => setSelectedSets(v)}\r\n                    className={classes.autocompleteInput}\r\n                    groupBy={option => option.set_type}\r\n                    getOptionLabel={option => option.name}\r\n                    getOptionSelected={(option, value) => (\r\n                      option.code === value.code\r\n                    )}\r\n                    ChipProps={{\r\n                      label: option => option.code,\r\n                    }}\r\n                  />\r\n                </ListItem>\r\n\r\n                {/* getAutocompleteOptions(\r\n                    \"Colors\",\r\n                    getAllColors(),\r\n                    selectedColors,\r\n                    setSelectedColors,\r\n                    classes.autocompleteInput\r\n                  ),\r\n                  getAutocompleteOptions(\r\n                    \"Mana Costs\",\r\n                    symbols,\r\n                    selectedManaCosts,\r\n                    setSelectedManaCosts,\r\n                    classes.autocompleteInput\r\n                  ),\r\n                  getRangeOptions(\r\n                    \"Price\",\r\n                    priceMin,\r\n                    priceMax,\r\n                    setPriceMin,\r\n                    setPriceMax,\r\n                    classes.rangeInput,\r\n                    classes.minus\r\n                  ),\r\n                  getRangeOptions(\r\n                    \"Amount\",\r\n                    amountMin,\r\n                    amountMax,\r\n                    setAmountMin,\r\n                    setAmountMax,\r\n                    classes.rangeInput,\r\n                    classes.minus\r\n                  ),\r\n                  getRadioOptions(\"Foil\", foil, setFoil),\r\n                  getRadioOptions(\"Signed\", signed, setSigned),\r\n                  getRadioOptions(\"Altered\", altered, setAltered), */}\r\n              </FilterPopover>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n    </Grid>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default withStyles(useStyles)(\r\n  connect(mapStateToProps, mapDispatchToProps)(\r\n    FilterProvider\r\n  )\r\n)\r\n","import React, { useState, useEffect } from 'react'\r\n// import _ from 'lodash'\r\n\r\nconst CardPriceDataProvider = (props) => {\r\n  /** VARS **/\r\n  const {\r\n    classes,\r\n    children,\r\n    data,\r\n    currency,\r\n    ...rest\r\n  } = props\r\n  const [cardPriceData, setCardPriceData] = useState(data)\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    setCardPriceData(\r\n      data.map(card => {\r\n        const { prices, foil, amount } = card\r\n        const price = Number(foil ? prices?.[`${currency}_foil`] : prices?.[currency])\r\n\r\n        return {\r\n          ...card,\r\n          currency,\r\n          price: price,\r\n          total_price: price * amount,\r\n        }\r\n      }))\r\n  }, [data, currency])\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    React.Children.map(children, child =>\r\n      React.cloneElement(child, {\r\n        data: cardPriceData,\r\n        ...rest,\r\n      })\r\n    )\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default CardPriceDataProvider","import React, { useState, useEffect } from 'react'\r\nimport _ from 'lodash'\r\n\r\nconst FilteredDataProvider = (props) => {\r\n  /** VARS **/\r\n  const {\r\n    classes,\r\n    children,\r\n    data,\r\n    filters,\r\n    ...rest\r\n  } = props\r\n  const [filteredData, setFilteredData] = useState(data)\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    setFilteredData(\r\n      _.filter(data ?? [],\r\n        row => (\r\n          _.every(Object.entries(filters ?? {}),\r\n            ([key, value]) => (\r\n              value && value !== [] && value !== {}\r\n                ? value instanceof Function\r\n                  ? value(row[key], row)\r\n                  : row[key] === value\r\n                : true\r\n            ))\r\n        ))\r\n    )\r\n  }, [filters, data])\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    React.Children.map(children, child =>\r\n      React.cloneElement(child, {\r\n        data: filteredData,\r\n        ...rest,\r\n      })\r\n    )\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default FilteredDataProvider","\r\nconst useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  // const mainSidesPadding = theme.spacing(10)\r\n\r\n  return {\r\n    '@global': {\r\n      '.MuiTableCell-head': {\r\n        fontWeight: 'bold',\r\n        textTransform: 'uppercase',\r\n      },\r\n      '.MuiTableCell-sizeSmall': {\r\n        padding: '0.3em',\r\n      },\r\n    },\r\n    root: {\r\n      marginBottom: theme.spacing(3),\r\n    },\r\n    filtersContainer: {\r\n      marginBottom: theme.spacing(4.5),\r\n    },\r\n    subheader: {\r\n      justifyContent: 'center',\r\n      fontWeight: 600,\r\n      height: '2.5rem',\r\n      alignItems: 'baseline',\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable no-lone-blocks */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { useEffect, useState, createRef } from 'react'\r\nimport { Grid, ListItemText, MenuItem, ListItem, ListSubheader, Divider, ButtonGroup, IconButton } from '@material-ui/core'\r\nimport { Skeleton } from '@material-ui/lab'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory, Prompt } from 'react-router'\r\nimport {\r\n  MoreVert as MoreVertIcon,\r\n  ViewList as ViewListIcon,\r\n  ViewModule as ViewModuleIcon,\r\n  ViewCompact as ViewCompactIcon,\r\n} from '@material-ui/icons'\r\nimport _ from 'lodash'\r\n// import useMouse from '@react-hook/mouse-position'\r\n// import clsx from 'clsx'\r\n\r\nimport { setCurrentTab, setCurrentCollection } from '@/Logic/redux'\r\nimport { MenuPopover } from '@/Components'\r\nimport { MagicdexApi } from '@/Api'\r\nimport { CardTableView, CardGridView } from './Views'\r\nimport FilterFields from './FilterFields'\r\nimport CardPriceDataProvider from './CardPriceDataProvider'\r\nimport FilteredDataProvider from './FilteredDataProvider'\r\nimport useStyles from './styles'\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  username: state.actions.activeUser.username,\r\n  collection: state.actions.activeUser.collection,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    setCurrentTab: (payload) => dispatch(setCurrentTab(payload)),\r\n    setCurrentCollection: (payload) => dispatch(setCurrentCollection(payload)),\r\n  }\r\n})\r\n\r\nconst Collection = (props) => {\r\n  /** VARS **/\r\n  const {\r\n    classes,\r\n    dispatch,\r\n    username,\r\n    collection,\r\n    currency: _currency,\r\n  } = props\r\n  const history = useHistory()\r\n  const menuRef = createRef()\r\n  const [view, setView] = useState('table') // one of ['table', 'grid', 'compact']\r\n  const [filters, setFilters] = useState()\r\n  const [currency, setCurrency] = useState(_currency ?? 'usd') // one of ['usd', 'eur']\r\n  const [tableEditable, setTableEditable] = useState(false)\r\n  const columns = {\r\n    amount: 'amount',\r\n    name: 'name',\r\n    set: 'set',\r\n    mana_cost: 'mana cost',\r\n    type_line: 'type',\r\n    foil: 'foil',\r\n    total_price: `price (${currency})`,\r\n    date_created: 'date added',\r\n  }\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    //onMount\r\n    dispatch.setCurrentTab({ tab: 'collection' })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (!username)\r\n      return history.push('/login')\r\n\r\n    dispatch.setCurrentCollection({ collection: JSON.parse(localStorage.getItem('collection')) })\r\n    MagicdexApi\r\n      .getAllCards()\r\n      .then(res => dispatch.setCurrentCollection({ collection: res }))\r\n  }, [username])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const toggleTableEditable = () => {\r\n    setTableEditable(!tableEditable)\r\n  }\r\n\r\n  const toggleCurrency = () => {\r\n    setCurrency(currency === 'usd' ? 'eur' : 'usd')\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <>\r\n      {/* <Prompt\r\n        when={true}\r\n        message=\"Are you sure you want to leave?\"\r\n      /> */}\r\n\r\n      <div className={classes.root}>\r\n        {\r\n          !collection\r\n            ?\r\n            // SHOW SKELETON\r\n            <Grid container justifyContent='center'>\r\n              <Grid item container xs={12} sm={11} md={10} spacing={2}>\r\n                <Grid item xs={2}>\r\n                  <Skeleton variant='rect' height='100%' />\r\n                </Grid>\r\n                <Grid item container xs={10}>\r\n                  <Grid item xs={2}>\r\n                    <Skeleton variant='circle' width={75} height={75} />\r\n                  </Grid>\r\n                  <Grid item xs={10}>\r\n                    <Skeleton variant='rect' height={32} />\r\n                    <Skeleton variant='text' />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    {[...Array(10).keys()].map(i => <Skeleton key={i} variant='text' />)}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            :\r\n            // SHOW ACTUAL DATA VIEW\r\n            <Grid container justifyContent='center'>\r\n              <Grid item container xs={12} lg={10} wrap='nowrap' justifyContent='center' alignItems='center' className={classes.filtersContainer}>\r\n                <Grid item container xs={11}>\r\n                  <FilterFields\r\n                    setFilters={setFilters}\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <MenuPopover\r\n                    ref={menuRef}\r\n                    icon={<MoreVertIcon />}\r\n                    listProps={{ dense: true }}\r\n                  >\r\n                    <ListItem>\r\n                      <ButtonGroup variant='text' size='small'>\r\n                        <IconButton onClick={() => setView('table')} color={view === 'table' && 'secondary'}>\r\n                          <ViewListIcon />\r\n                        </IconButton>\r\n                        <IconButton onClick={() => setView('grid')} color={view === 'grid' && 'secondary'}>\r\n                          <ViewModuleIcon />\r\n                        </IconButton>\r\n                        <IconButton onClick={() => setView('compact')} color={view === 'compact' && 'secondary'}>\r\n                          <ViewCompactIcon />\r\n                        </IconButton>\r\n                      </ButtonGroup>\r\n                    </ListItem>\r\n\r\n                    <Divider />\r\n\r\n                    <ListSubheader className={classes.subheader}>\r\n                      {`${_.upperFirst(view)} View`}\r\n                    </ListSubheader>\r\n                    {(() => {\r\n                      switch (view) {\r\n                        default:\r\n                        case 'table':\r\n                          return (\r\n                            <>\r\n                              <MenuItem onClick={toggleCurrency}>\r\n                                <ListItemText\r\n                                  primary={'Change Currency'}\r\n                                  secondary={`Viewing ${currency.toUpperCase()}`}\r\n                                />\r\n                              </MenuItem>\r\n                              <MenuItem onClick={toggleTableEditable}>\r\n                                {\r\n                                  tableEditable\r\n                                    ? 'Disable Edit'\r\n                                    : 'Enable Edit'\r\n                                }\r\n                              </MenuItem>\r\n                              <MenuItem>\r\n                                Reset Changes\r\n                              </MenuItem>\r\n                            </>\r\n                          )\r\n                        case 'grid':\r\n                          return (\r\n                            <>\r\n                              <MenuItem>\r\n                                Something here\r\n                              </MenuItem>\r\n                            </>\r\n                          )\r\n                        case 'compact':\r\n                          return (\r\n                            <>\r\n                              <MenuItem>\r\n                                TBD\r\n                              </MenuItem>\r\n                            </>\r\n                          )\r\n                      }\r\n                    })()}\r\n                  </MenuPopover>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container wrap='nowrap' justifyContent='center' xs={12}>\r\n                <CardPriceDataProvider\r\n                  data={collection}\r\n                  currency={currency}\r\n                >\r\n                  <FilteredDataProvider\r\n                    filters={filters}\r\n                  // data = passed from parent\r\n                  >\r\n                    {\r\n                      (() => {\r\n                        switch (view) {\r\n                          default:\r\n                          case 'table':\r\n                            return <CardTableView\r\n                              columns={columns}\r\n                              setCurrency={setCurrency}\r\n                              currency={currency}\r\n                              isEditable={tableEditable}\r\n                            // data = {passed from parent}\r\n                            />\r\n                          case 'grid':\r\n                            return <CardGridView\r\n                            // data = {passed from parent}\r\n                            />\r\n                          case 'compact':\r\n                            return <div>TBD</div>\r\n                        }\r\n                      })()\r\n                    }\r\n                  </FilteredDataProvider>\r\n                </CardPriceDataProvider>\r\n              </Grid>\r\n            </Grid>\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    connect(mapStateToProps, mapDispatchToProps)(\r\n      Collection\r\n    )\r\n  )","\r\nconst useStyles = (theme) => {\r\n    // const bottomBarHeight = '50px'\r\n    // const mainSidesPadding = theme.spacing(10)\r\n  \r\n    return {\r\n      icon: {\r\n      },\r\n      popover: {\r\n      },\r\n      paper: {\r\n        minWidth: theme.spacing(20),\r\n      },\r\n      // contentShift: {\r\n      //   transition: theme.transitions.create('margin', {\r\n      //     easing: theme.transitions.easing.easeOut,\r\n      //     duration: theme.transitions.duration.enteringScreen,\r\n      //   }),\r\n      //   marginLeft: 0,\r\n      // },\r\n      // listItemText: {\r\n      //   marginRight: theme.spacing(1),\r\n      // },\r\n      // ListItemIcon: {\r\n      //   marginRight: theme.spacing(2.5),\r\n      //   width: 'auto',\r\n      //   minWidth: 'auto',\r\n      // },\r\n    }\r\n  }\r\n  \r\n  export default useStyles","/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { forwardRef, useImperativeHandle, useRef } from 'react'\r\nimport { ClickAwayListener, IconButton, List, Paper, Popover } from '@material-ui/core'\r\nimport { useState, useEffect } from 'react'\r\nimport { makeStyles, useTheme } from '@material-ui/styles'\r\n// import { connect } from 'react-redux'\r\n\r\n// import { setCurrentTab } from '@/Logic/redux'\r\nimport useStyles from './styles'\r\n\r\n\r\nconst MenuPopover = forwardRef((props, ref) => {\r\n  /** VARS **/\r\n  const [Icon, setIcon] = useState(() => { })\r\n  const [menuAnchor, setMenuAnchor] = useState(null)\r\n  const menuOpen = Boolean(menuAnchor)\r\n  const iconButtonRef = useRef()\r\n  const classes = makeStyles(useStyles(useTheme()))()\r\n  const {\r\n    icon,\r\n    iconButtonProps,\r\n    popoverProps,\r\n    listProps,\r\n  } = props\r\n\r\n\r\n  /** EFFECTS **/\r\n  useImperativeHandle(ref, () => ({\r\n    openMenu: () => { handleMenuOpen(iconButtonRef) },\r\n    closeMenu: () => { handleMenuClose(null) },\r\n  }))\r\n\r\n  // useEffect(() => {\r\n  //   //onMount\r\n  //   console.log(props.ref)\r\n  // }, [])\r\n\r\n  useEffect(() => {\r\n    setIcon(icon)\r\n  }, [icon])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleIconClick = (e) => {\r\n    handleMenuOpen(e.currentTarget)\r\n    e.stopPropagation()\r\n  }\r\n\r\n  const handleMenuOpen = (menuAnnchor) => {\r\n    setMenuAnchor(menuAnnchor)\r\n  }\r\n\r\n  const handleMenuClose = (e) => {\r\n    setMenuAnchor(null)\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <>\r\n      <IconButton\r\n        color=\"inherit\"\r\n        className={classes.icon}\r\n        ref={iconButtonRef}\r\n        onClick={handleIconClick}\r\n        {...iconButtonProps}\r\n      >\r\n        {Icon}\r\n      </IconButton>\r\n\r\n      <Popover\r\n        className={classes.popover}\r\n        open={menuOpen}\r\n        anchorEl={menuAnchor}\r\n        onClose={handleMenuClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n        {...popoverProps}\r\n      >\r\n        <Paper className={classes.paper}>\r\n          <ClickAwayListener onClickAway={handleMenuClose}>\r\n            <List {...listProps}>\r\n              {props.children}\r\n            </List>\r\n          </ClickAwayListener>\r\n        </Paper>\r\n      </Popover>\r\n    </>\r\n  )\r\n})\r\n\r\n/** EXPORT **/\r\nexport default MenuPopover\r\n","\r\nconst useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  const mainSidesPadding = theme.spacing(10)\r\n\r\n  return {\r\n    root: {\r\n      position: 'absolute',\r\n    },\r\n    appBar: {\r\n      // position: \"inherit\",\r\n      paddingLeft: mainSidesPadding,\r\n      paddingRight: mainSidesPadding,\r\n      // backgroundColor: theme.palette.type === 'dark' ? 'rgba(0,0,0,0.25)' : theme.palette.primary,\r\n      // backgroundColor: theme.palette.type === 'dark' ? theme.palette.primary : theme.palette.primary,\r\n      // color: theme.palette.text.primary,\r\n      // transition: theme.transitions.create(['margin', 'width'], {\r\n      //   easing: theme.transitions.easing.sharp,\r\n      //   duration: theme.transitions.duration.leavingScreen,\r\n      // }),\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable no-unused-vars */\r\n\r\nimport { createRef } from \"react\"\r\nimport { AppBar, Tabs, Tab, Grid, MenuItem, Divider, ListSubheader, ListItem, ListItemText, ListItemSecondaryAction, Switch, ListItemIcon } from \"@material-ui/core\"\r\nimport { withStyles } from \"@material-ui/styles\"\r\nimport {\r\n  Menu as MenuIcon,\r\n  AccountCircle as AccountCircleIcon,\r\n  Settings as SettingsIcon,\r\n  Brightness3 as DarkmodeIcon,\r\n  BrightnessHigh as LightmodeIcon,\r\n} from '@material-ui/icons'\r\nimport { connect } from \"react-redux\"\r\nimport { useHistory } from \"react-router\"\r\nimport { useSnackbar } from \"notistack\"\r\n\r\nimport { MenuPopover } from '@/Components'\r\nimport { setActiveUser, toggleCurrentThemeType } from \"@/Logic/redux\"\r\nimport useStyles from \"./styles\"\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  themeType: state.actions.theme.currentThemeType,\r\n  username: state.actions.activeUser.username,\r\n  currentTab: state.actions.topMenu.currentTab,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  'dispatch': {\r\n    toggleCurrentThemeType: (payload) => dispatch(toggleCurrentThemeType(payload)),\r\n    setActiveUser: (payload) => dispatch(setActiveUser(payload)),\r\n  }\r\n})\r\n\r\nconst TopMenu = (props) => {\r\n  //VARS\r\n  const history = useHistory()\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  const {\r\n    classes,\r\n    dispatch,\r\n    currentTab,\r\n    themeType,\r\n    username,\r\n  } = props\r\n  const menuRef = createRef()\r\n\r\n\r\n  //HANDLERS\r\n  const handleTabChange = (event, value) => {\r\n    // dispatch.setCurrentTab({tab:value});\r\n    history.push('/' + value)\r\n  }\r\n\r\n  const handleMenuItemClick = (e) => {\r\n    let goto = e.currentTarget.attributes.goto?.value\r\n    let id = e.currentTarget.attributes.id?.value\r\n\r\n    switch (id) {\r\n      default:\r\n        menuRef.current?.closeMenu()\r\n        break\r\n\r\n      case 'login':\r\n      case 'register':\r\n        menuRef.current?.closeMenu()\r\n        history.push(goto)\r\n        break\r\n\r\n      case 'logout':\r\n        // menuRef.current?.closeMenu()\r\n        dispatch.setActiveUser({ username: null })\r\n        enqueueSnackbar('Logged out', { variant: \"info\" })\r\n        break\r\n\r\n      case 'mode':\r\n        dispatch.toggleCurrentThemeType()\r\n        break\r\n    }\r\n  }\r\n\r\n\r\n  //RENDER\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar className={classes.appBar}>\r\n        <Grid container wrap='nowrap' justifyContent='space-between'>\r\n          <Grid item>\r\n            <Tabs variant='scrollable' value={currentTab} onChange={handleTabChange}>\r\n              <Tab value='home' label='Home' />\r\n              <Tab value='collection' label='Collection' />\r\n              <Tab value='login' className='hidden' />\r\n              <Tab value='register' className='hidden' />\r\n            </Tabs>\r\n          </Grid>\r\n          <Grid item>\r\n            <MenuPopover ref={menuRef} icon={() => <MenuIcon />}>\r\n              <ListSubheader>\r\n                <AccountCircleIcon />\r\n                {username ?? 'Account'}\r\n              </ListSubheader>\r\n              {\r\n                username\r\n                  ?\r\n                  <MenuItem onClick={handleMenuItemClick} id='logout'>Logout</MenuItem>\r\n                  :\r\n                  <>\r\n                    <MenuItem onClick={handleMenuItemClick} id='login' goto='/login'>Login</MenuItem>\r\n                    <MenuItem onClick={handleMenuItemClick} id='register' goto='/register'>Register</MenuItem>\r\n                  </>\r\n              }\r\n\r\n              <Divider />\r\n\r\n              <ListSubheader>\r\n                <SettingsIcon />\r\n                Settings\r\n              </ListSubheader>\r\n              <ListItem style={{ paddingTop: 0, paddingBottom: 0 }}>\r\n                <ListItemText primary='Toggle Theme' secondary={themeType} />\r\n                {/* <ListItemIcon style={{justifyContent:'center'}}>\r\n                {\r\n                  themeType === 'dark'\r\n                    ? <DarkmodeIcon />\r\n                    : <LightmodeIcon />\r\n                }\r\n                </ListItemIcon> */}\r\n                <ListItemSecondaryAction>\r\n                  <Switch\r\n                    // color='primary'\r\n                    edge='end'\r\n                    checked={themeType === 'dark'}\r\n                    onChange={handleMenuItemClick}\r\n                    id='mode'\r\n                  />\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            </MenuPopover>\r\n          </Grid>\r\n        </Grid>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n\r\n// EXPORT WITH HOOKS AND DECORATORS\r\nexport default\r\n  connect(mapStateToProps, mapDispatchToProps)(\r\n    withStyles(useStyles)(\r\n      TopMenu\r\n    )\r\n  )","\r\nconst useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  // const mainSidesPadding = theme.spacing(10)\r\n\r\n  return {\r\n    root: {\r\n      position: 'relative',\r\n      borderRadius: '4.75% / 3.5%',\r\n    },\r\n    base: {\r\n      borderRadius: '4.75% / 3.5%',\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n    },\r\n    overlay: {\r\n      borderRadius: '4.75% / 3.5%',\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable no-lone-blocks */\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport clsx from 'clsx'\r\n\r\nimport useStyles from './styles'\r\n\r\n\r\nconst ImageOverlay = (props) => {\r\n  /** VARS **/\r\n  const {\r\n    classes,\r\n    baseSrc,\r\n    baseProps,\r\n    overlaySrc,\r\n    overlayEnabled,\r\n    overlayProps,\r\n    width,\r\n    height,\r\n    ...rest\r\n  } = props\r\n  const [_baseSrc, setBase] = useState()\r\n  const [_overlaySrc, setOverlay] = useState()\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    if (baseSrc && baseSrc !== '')\r\n      setBase(baseSrc)\r\n\r\n    if (overlaySrc && overlaySrc !== '')\r\n      setOverlay(overlaySrc)\r\n  }, [baseSrc, overlaySrc])\r\n\r\n\r\n  /** HANDLERS **/\r\n  { }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <div\r\n      className={classes.root}\r\n      style={{ width: width, height: height }}\r\n      {...rest}\r\n    >\r\n      <img\r\n        width={width}\r\n        height={height}\r\n        src={_baseSrc}\r\n        alt='base'\r\n        {...baseProps}\r\n        className={clsx(classes.base, baseProps?.className)}\r\n      />\r\n      {\r\n        overlayEnabled\r\n        && <img\r\n          width={width}\r\n          height={height}\r\n          src={_overlaySrc}\r\n          alt='overlay'\r\n          {...overlayProps}\r\n          className={clsx(classes.overlay, overlayProps?.className)}\r\n        />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    ImageOverlay\r\n  )","\r\nconst useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  // const mainSidesPadding = theme.spacing(10)\r\n\r\n  return {\r\n    imageContainer: {\r\n      position: 'relative',\r\n    },\r\n    dfcSymbol: {\r\n      position: 'absolute',\r\n      top: theme.spacing(1),\r\n      left: theme.spacing(0.9),\r\n    },\r\n    button: {\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    buttonThridly: {\r\n      color: '#fff',\r\n      backgroundColor: '#9c27b0',\r\n      '&:hover': {\r\n        backgroundColor: '#7b1fa2',\r\n      },\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport { Button, Grid } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport Tilt from 'react-parallax-tilt'\r\nimport clsx from 'clsx'\r\n\r\nimport ImageOverlay from './ImageOverlay'\r\nimport useStyles from './styles'\r\n\r\n\r\nconst CardImage = (props) => {\r\n  /** VARS **/\r\n  const {\r\n    classes,\r\n    card,\r\n    rootProps,\r\n    imageProps,\r\n    buttonProps,\r\n    tiltProps,\r\n    tiltEnabled,\r\n    packTransformButton,\r\n  } = props\r\n  const [flipped, setFlipped] = useState(false)\r\n  const [isDfc, setIsDfc] = useState(false)\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    setFlipped(false)\r\n    setIsDfc(card?.card_faces && card?.card_faces.length > 1)\r\n  }, [card])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleRootClick = e => {\r\n    rootProps?.onClick && rootProps.onClick(e)\r\n\r\n    // e.preventDefault()\r\n    // e.stopPropagation()\r\n  }\r\n\r\n  const handleTransform = e => {\r\n    setFlipped(!flipped)\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <Grid container direction=\"column\" {...rootProps} onClick={handleRootClick}>\r\n      <Grid item className={classes.imageContainer}>\r\n        <Tilt\r\n          tiltEnable={tiltEnabled ?? false}\r\n          glareEnable={tiltEnabled ?? false}\r\n          tiltMaxAngleX={10}\r\n          tiltMaxAngleY={10}\r\n          glareBorderRadius={'4.75% / 3.5%'}\r\n          glarePosition='all'\r\n          // glareColor='#E1D6AA'\r\n          // glareColor='#F4F3A8'\r\n          // glareMaxOpacity={0.35}\r\n          glareMaxOpacity={0.13}\r\n          onEnter={packTransformButton ? () => setFlipped(true) : null}\r\n          onLeave={packTransformButton ? () => setFlipped(false) : null}\r\n          {...tiltProps}\r\n        >\r\n          <ImageOverlay\r\n            overlayEnabled={card?.foil}\r\n            baseSrc={\r\n              card\r\n                ? card.card_faces?.length > 1\r\n                  ? card.card_faces[flipped ? 1 : 0].image_uris.png\r\n                  : card.image_uris.png\r\n                : '/cardback.png'\r\n            }\r\n            overlaySrc='/foil-overlay.png'\r\n            overlayProps={{ style: { opacity: 0.65 } }}\r\n            width={250}\r\n            height={350}\r\n            {...imageProps}\r\n          />\r\n          <span\r\n            onClick={packTransformButton && handleTransform}\r\n            style={{\r\n              display: packTransformButton && isDfc ? 'unset' : 'none',\r\n              fontSize: '1.5em'\r\n            }}\r\n            className={clsx(\r\n              classes.dfcSymbol,\r\n              'ms', 'ms-fw', 'ms-cost', 'ms-shadow', 'ms-duo', 'ms-duo-color',\r\n              { 'ms-dfc-modal-face': !flipped },\r\n              { 'ms-dfc-modal-back': flipped },\r\n            )}\r\n          />\r\n        </Tilt>\r\n      </Grid>\r\n      {\r\n        isDfc && !packTransformButton && (\r\n          <Grid item align='center' className={classes.button}>\r\n            <Button\r\n              // classes={{ root: 'buttonThridly-root' }}\r\n              className={classes.buttonThridly}\r\n              variant='contained'\r\n              // color='primary'\r\n              // color='thridly'\r\n              size='small'\r\n              onClick={handleTransform}\r\n              {...buttonProps}\r\n            >\r\n              {\r\n                'Transform' + (flipped ? ' ↪' : ' ↩')\r\n              }\r\n            </Button>\r\n          </Grid>\r\n        )\r\n      }\r\n    </Grid >\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    CardImage\r\n  )","const useStyles = (theme) => {\r\n  const iconSize = \"4.5em\"\r\n\r\n  return {\r\n    root: {\r\n      padding: theme.spacing(3),\r\n      paddingBottom: 0,\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      flexDirection: \"column\",\r\n      \r\n      // minHeight: '80vh',\r\n    },\r\n    header: {\r\n      alignSelf: \"flex-end\",\r\n      textTransform: \"uppercase\",\r\n    },\r\n    icon: {\r\n      fontSize: iconSize,\r\n      alignSelf: \"flex-start\",\r\n      position: \"relative\",\r\n      // color: theme.palette.primary.light,\r\n      zIndex: 1,\r\n    },\r\n    divider1: {\r\n      bottom: `calc(${iconSize} - 0.55em)`,\r\n      marginBottom: theme.spacing(3),\r\n      width: `calc(100% + 2*${theme.spacing(3)}px)`,\r\n      position: \"relative\",\r\n      zIndex: 0,\r\n    },\r\n    divider2: {\r\n      marginBottom: theme.spacing(3),\r\n      width: `calc(100% + 2*${theme.spacing(3)}px)`,\r\n      position: \"relative\",\r\n      zIndex: 0,\r\n    },\r\n    bottom: {\r\n      position: \"relative\",\r\n      bottom: \"2em\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      flexDirection: \"column\",\r\n    },\r\n    content: {\r\n      paddingBottom: theme.spacing(2),\r\n    },\r\n    actions: {\r\n      alignSelf: \"flex-end\",\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles\r\n","import { useEffect, useState } from 'react'\r\nimport { Paper, Divider, Typography, Dialog, DialogContent, CircularProgress } from '@material-ui/core'\r\nimport { withStyles } from \"@material-ui/styles\"\r\nimport { ValidatorForm } from 'react-material-ui-form-validator'\r\n\r\n// import { setCurrentTab } from \"@/Logic/redux\"\r\nimport useStyles from './styles'\r\n\r\n\r\n// function toTitleCase(str) {\r\n//   return str.replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});\r\n// }\r\n\r\nconst BaseForm = (props) => {\r\n  /** VARS **/\r\n  const {\r\n    classes,\r\n    validationRules,\r\n    // dispatch,\r\n    header,\r\n    icon,\r\n    content,\r\n    actions,\r\n    onSubmit,\r\n    onError,\r\n    formRef,\r\n    ...rest\r\n  } = props\r\n  const [Header, setHeader] = useState([])\r\n  const [Icon, setIcon] = useState([])\r\n  const [Content, setContent] = useState([])\r\n  const [Actions, setActions] = useState([])\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    const rules = validationRules ? validationRules : {}\r\n\r\n    Object.entries(rules).forEach(item => {\r\n      const [key, value] = item\r\n      if (!ValidatorForm.hasValidationRule(key))\r\n        ValidatorForm.addValidationRule(key, value)\r\n    })\r\n  }, [validationRules])\r\n\r\n  useEffect(() => {\r\n    setHeader(header)\r\n    setIcon(icon)\r\n    setContent(content)\r\n    setActions(actions)\r\n  }, [header, icon, content, actions])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleSubmit = (e) => {\r\n    // console.log('BaseForm submit started')\r\n    setIsLoading(true)\r\n    onSubmit(e)\r\n    setIsLoading(false)\r\n    // console.log('BaseForm submit ended')\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <>\r\n      <Paper component={ValidatorForm} ref={formRef}\r\n        className={classes.root} elevation={8}\r\n        onSubmit={handleSubmit} onError={onError} {...rest}\r\n      >\r\n        <Typography variant='h4' className={classes.header}>\r\n          <b>{Header}</b>\r\n        </Typography>\r\n\r\n        <div className={classes.icon}>\r\n          {Icon}\r\n        </div>\r\n        <Divider className={classes.divider1} />\r\n\r\n        <div className={classes.bottom}>\r\n          <div className={classes.content}>\r\n            {Content}\r\n          </div>\r\n          <div className={classes.actions}>\r\n            {Actions}\r\n          </div>\r\n        </div>\r\n      </Paper>\r\n\r\n      <Dialog open={isLoading}>\r\n        <DialogContent>\r\n          <CircularProgress />\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    BaseForm\r\n  )","const useStyles = (theme) => {\r\n  const topBottomPadding = theme.spacing(8)\r\n\r\n  return {\r\n    root: {\r\n      minHeight: `calc(100vh - 2*${topBottomPadding}px)`,\r\n      // width: '40vw',\r\n      // flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      alignItems: 'center',\r\n      display: 'flex',\r\n      flexGrow: 1,\r\n    },\r\n    errorMessages: {\r\n      color: theme.palette.error.main,\r\n      fontSize: '0.75rem',\r\n    },\r\n    // paper: {\r\n    //   padding: theme.spacing(3),\r\n    //   display: 'flex',\r\n    //   justifyContent: \"center\",\r\n    //   alignItems: 'center',\r\n    //   // flexDirection: \"column\",\r\n    //   // flexGrow: 0.1,\r\n    // },\r\n  }\r\n}\r\n\r\nexport default useStyles;","/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport { Box, Button, Grid } from '@material-ui/core';\r\n// import { AccountCircle as AccountCircleIcon } from '@material-ui/icons';\r\nimport { withStyles } from \"@material-ui/styles\"\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { TextValidator } from 'react-material-ui-form-validator';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nimport { MagicdexApi } from '@/Api'\r\nimport { setActiveUser, setCurrentTab } from '@/Logic/redux'\r\nimport { BaseForm } from './..'\r\nimport useStyles from './styles'\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  username: state.actions.activeUser.username,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    setActiveUser: (payload) => dispatch(setActiveUser(payload)),\r\n    setCurrentTab: (payload) => dispatch(setCurrentTab(payload)),\r\n  }\r\n})\r\n\r\nconst Login = (props) => {\r\n  /** VARS **/\r\n  const history = useHistory()\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [errorMessages, setErrorMessages] = useState([])\r\n  const [usernameInput, setUsernameInput] = useState('')\r\n  const [passwordInput, setPasswordInput] = useState('')\r\n  const formRef = useRef()\r\n  const {\r\n    classes,\r\n    dispatch,\r\n    username,\r\n  } = props\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    //onMount\r\n    dispatch.setCurrentTab({tab:'login'})\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (username)\r\n      history.push('/')\r\n  }, [username])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleSubmit = (e) => {\r\n    setIsLoading(true)\r\n    setPasswordInput('')\r\n    setErrorMessages([])\r\n\r\n    MagicdexApi\r\n      .login({ username: usernameInput, password: passwordInput })\r\n      .then(res => {\r\n        dispatch.setActiveUser(res)\r\n        enqueueSnackbar('Login successful', { variant: 'success' })\r\n      })\r\n      .catch(err => {\r\n        const msg = err.response.data.msg ?? err.response.data.message\r\n        let msgs = (msg instanceof Array) ? msg : [msg]\r\n\r\n        // console.log(msgs)\r\n        msgs = msgs.map(msg =>\r\n          msg.toLowerCase() === 'username and password combination not found'\r\n            ? 'Bad credentials'\r\n            : msg\r\n        )\r\n\r\n        setErrorMessages(msgs)\r\n        enqueueSnackbar('Login failed', { variant: 'error' })\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false)\r\n      })\r\n  }\r\n\r\n  const handleError = (e) => {\r\n    setErrorMessages([])\r\n  }\r\n\r\n  const handleClear = (e) => {\r\n    setErrorMessages([])\r\n    setUsernameInput('')\r\n    setPasswordInput('')\r\n    formRef.current.resetValidations()\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <Grid container className={classes.root}>\r\n      <BaseForm\r\n        formRef={formRef}\r\n        onSubmit={handleSubmit}\r\n        onError={handleError}\r\n        instantValidate={false}\r\n\r\n        header='Login'\r\n        // icon     = {() => <AccountCircleIcon fontSize='inherit' />}\r\n        icon={() => <Box marginBottom={2}>💩</Box>}\r\n        content={() => (\r\n          <>\r\n            <TextValidator\r\n              id='username'\r\n              type='text'\r\n              label='Username'\r\n              variant='outlined'\r\n              size='small'\r\n              color='secondary'\r\n              value={usernameInput}\r\n              onChange={(e) => setUsernameInput(e.target.value)}\r\n              validators={['required', `matchRegexp:^([A-Za-z0-9]|[-_.'])*$`]}\r\n              errorMessages={['Field is required', 'Special characters are not allowed']}\r\n              autoComplete='current-username'\r\n            />\r\n            <TextValidator\r\n              id='password'\r\n              type='password'\r\n              label='Password'\r\n              variant='outlined'\r\n              size='small'\r\n              color='secondary'\r\n              value={passwordInput}\r\n              onChange={(e) => setPasswordInput(e.target.value)}\r\n              validators={['required']}\r\n              errorMessages={['Field is required']}\r\n              autoComplete='current-password'\r\n            />\r\n            <Grid container direction='column'>\r\n              {\r\n                Object.values(errorMessages).map((value, i) => (\r\n                  <Grid item key={i} className={classes.errorMessages}>\r\n                    {value[0].toUpperCase() + value.slice(1)} {/* capitalize first letter */}\r\n                  </Grid>\r\n                ))\r\n              }\r\n            </Grid>\r\n          </>\r\n        )}\r\n        actions={() => (\r\n          <Grid container spacing={1}>\r\n            <Grid item>\r\n              <Button\r\n                size=\"medium\"\r\n                variant=\"outlined\"\r\n                onClick={handleClear}\r\n                disabled={isLoading}\r\n              >\r\n                Clear\r\n              </Button>\r\n            </Grid>\r\n            <Grid item style={{ paddingRight: 0 }}>\r\n              <Button\r\n                type=\"submit\"\r\n                size=\"medium\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disabled={isLoading}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      />\r\n    </Grid>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    connect(mapStateToProps, mapDispatchToProps)(\r\n      Login\r\n    )\r\n  )","const useStyles = (theme) => {\r\n  const topBottomPadding = theme.spacing(8)\r\n\r\n  return {\r\n    root: {\r\n      minHeight: `calc(100vh - 2*${topBottomPadding}px)`,\r\n      // width: '40vw',\r\n      // flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      alignItems: 'center',\r\n      display: 'flex',\r\n      flexGrow: 1,\r\n    },\r\n    errorMessages: {\r\n      color: theme.palette.error.main,\r\n      fontSize: '0.75rem',\r\n    },\r\n    // paper: {\r\n    //   padding: theme.spacing(3),\r\n    //   display: 'flex',\r\n    //   justifyContent: \"center\",\r\n    //   alignItems: 'center',\r\n    //   // flexDirection: \"column\",\r\n    //   // flexGrow: 0.1,\r\n    // },\r\n  }\r\n}\r\n\r\nexport default useStyles;","/* eslint-disable no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { useEffect, useState, useRef } from 'react'\r\nimport { Box, Button, Grid, Typography } from '@material-ui/core'\r\nimport { AccountCircle as AccountCircleIcon } from '@material-ui/icons'\r\nimport { withStyles } from \"@material-ui/styles\"\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router'\r\nimport { TextValidator } from 'react-material-ui-form-validator'\r\nimport { useSnackbar } from 'notistack'\r\nimport _ from 'lodash'\r\n\r\nimport { MagicdexApi } from \"@/Api\"\r\nimport { setActiveUser, setCurrentTab } from '@/Logic/redux'\r\nimport { BaseForm } from './..'\r\nimport useStyles from './styles'\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  username: state.actions.activeUser.username,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    setActiveUser: (payload) => dispatch(setActiveUser(payload)),\r\n    setCurrentTab: (payload) => dispatch(setCurrentTab(payload)),\r\n  }\r\n})\r\n\r\nconst Register = (props) => {\r\n  /** VARS **/\r\n  const history = useHistory()\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [errorMessages, setErrorMessages] = useState([])\r\n  const [usernameInput, setUsernameInput] = useState('')\r\n  const [passwordInput, setPasswordInput] = useState('')\r\n  const [passwordRepeatInput, setPasswordRepeatInput] = useState('')\r\n  const passwordInputRef = useRef()\r\n  const formRef = useRef()\r\n  const {\r\n    classes,\r\n    dispatch,\r\n    username,\r\n  } = props\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    //onMount\r\n    dispatch.setCurrentTab({ tab: 'register' })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (username)\r\n      history.push('/')\r\n  }, [username])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleSubmit = (e) => {\r\n    setErrorMessages([])\r\n    setPasswordInput('')\r\n    setPasswordRepeatInput('')\r\n    setIsLoading(true)\r\n\r\n    MagicdexApi\r\n      .register({ username: usernameInput, password: passwordInput })\r\n      .then(res => {\r\n        dispatch.setActiveUser(res)\r\n        enqueueSnackbar('Successfully registered', { variant: 'success' })\r\n      })\r\n      .catch(err => {\r\n        const { msg } = err.response.data\r\n        const msgs = (msg instanceof Array) ? msg : [msg]\r\n\r\n        setErrorMessages(msgs)\r\n        enqueueSnackbar('Error registering', { variant: 'error' })\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false)\r\n      })\r\n  }\r\n\r\n  const handleError = (e) => {\r\n    setErrorMessages([])\r\n  }\r\n\r\n  const handleClear = (e) => {\r\n    setErrorMessages([])\r\n    setUsernameInput('')\r\n    setPasswordInput('')\r\n    setPasswordRepeatInput('')\r\n    formRef.current.resetValidations()\r\n  }\r\n\r\n\r\n  /** VALIDATORS **/\r\n  const isPasswordMatch = (value) => (\r\n    value === passwordInputRef.current.props.value\r\n  )\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <Grid container className={classes.root}>\r\n      <BaseForm\r\n        formRef={formRef}\r\n        validationRules={{ isPasswordMatch }}\r\n        onSubmit={handleSubmit}\r\n        onError={handleError}\r\n        instantValidate={false}\r\n\r\n        header='Signup'\r\n        // icon={() => <AccountCircleIcon fontSize='inherit' />}\r\n        icon={() => <Box marginBottom={2}>💁</Box>}\r\n        content={() => (\r\n          <>\r\n            <TextValidator\r\n              error={_.join(errorMessages, ';').includes('username')}\r\n              id='username'\r\n              name='username'\r\n              type='text'\r\n              label='Username'\r\n              variant='outlined'\r\n              size='small'\r\n              color='secondary'\r\n              value={usernameInput}\r\n              onChange={(e) => setUsernameInput(e.target.value)}\r\n              validators={['required', `matchRegexp:^[A-Za-z][A-Za-z0-9-_.]*$`]}\r\n              errorMessages={['Field is required', 'Special characters are not allowed']}\r\n              autoComplete='new-username'\r\n            />\r\n            <TextValidator\r\n              ref={passwordInputRef}\r\n              id='password'\r\n              name='password'\r\n              type='password'\r\n              label='Password'\r\n              variant='outlined'\r\n              size='small'\r\n              color='secondary'\r\n              value={passwordInput}\r\n              onChange={(e) => setPasswordInput(e.target.value)}\r\n              validators={['required', 'minStringLength:5']}\r\n              errorMessages={['Field is required', 'Password is too short']}\r\n              autoComplete='new-password'\r\n            />\r\n            <TextValidator\r\n              id='password_repeat'\r\n              name='password_repeat'\r\n              type='password'\r\n              label='Repeat Password'\r\n              variant='outlined'\r\n              size='small'\r\n              color='secondary'\r\n              value={passwordRepeatInput}\r\n              onChange={(e) => setPasswordRepeatInput(e.target.value)}\r\n              validators={['required', 'minStringLength:5', 'isPasswordMatch']}\r\n              errorMessages={['Field is required', 'Password is too short', 'Passwords does not match']}\r\n              autoComplete='new-password2'\r\n            />\r\n            <Grid container direction='column'>\r\n              {\r\n                Object.values(errorMessages).map((value, i) => (\r\n                  <Grid item key={i} className={classes.errorMessages}>\r\n                    {value[0].toUpperCase() + value.slice(1)} {/* capitalize first letter */}\r\n                  </Grid>\r\n                ))\r\n              }\r\n            </Grid>\r\n          </>\r\n        )}\r\n        actions={() => (\r\n          <Grid container spacing={1}>\r\n            <Grid item>\r\n              <Button\r\n                size=\"medium\"\r\n                variant=\"outlined\"\r\n                onClick={handleClear}\r\n                disabled={isLoading}\r\n              >\r\n                Clear\r\n              </Button>\r\n            </Grid>\r\n            <Grid item style={{ paddingRight: 0 }}>\r\n              <Button\r\n                type=\"submit\"\r\n                size=\"medium\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disabled={isLoading}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      />\r\n    </Grid>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default withStyles(useStyles)(\r\n  connect(mapStateToProps, mapDispatchToProps)(\r\n    Register\r\n  )\r\n)\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { Helmet } from 'react-helmet'\r\n\r\nimport { store } from \"@/Logic/redux\";\r\nimport { App } from \"@/Components\";\r\nimport './index.css';\r\nimport 'fontsource-roboto';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Helmet>\r\n      <title>Magicdex</title>\r\n      <link href=\"//cdn.jsdelivr.net/npm/keyrune@latest/css/keyrune.css\" rel=\"stylesheet\" type=\"text/css\" /> {/* keyrune */}\r\n      <link href=\"//cdn.jsdelivr.net/npm/mana-font@latest/css/mana.css\" rel=\"stylesheet\" type=\"text/css\" /> {/* mana */}\r\n      {/* <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" /> material-icons */}\r\n    </Helmet>\r\n\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}