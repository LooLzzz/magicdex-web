{"version":3,"sources":["Themes/index.js","Config/index.js","Logic/redux/initialState.js","Logic/redux/reducers/appReducers.js","Logic/redux/reducers/accountReducers.js","Logic/redux/reducers/themeReducers.js","Logic/redux/reducerSlice.js","Logic/redux/reducers/index.js","Logic/redux/store.js","Logic/redux/index.js","Components/Home/styles.js","Components/Home/index.js","Providers/CardPriceDataProvider/index.js","Providers/FilteredDataProvider/index.js","Providers/index.js","Api/MagicdexApi/utils.js","Api/MagicdexApi/auth.js","Api/MagicdexApi/collection.js","Api/MagicdexApi/index.js","Api/index.js","CardRenders/utils.js","CardRenders/styles.js","CardRenders/index.js","Components/Collection/Views/CardInfo/FieldsPanel/index.js","Components/Collection/Views/CardInfo/EditPanel/styles.js","Components/Collection/Views/CardInfo/EditPanel/index.js","Components/Collection/Views/CardInfo/styles.js","Components/Collection/Views/CardInfo/index.js","Components/Collection/Views/CardTableView/CardRow/styles.js","Components/Collection/Views/CardTableView/CardRow/index.js","Components/Collection/Views/CardTableView/styles.js","Components/Collection/Views/CardTableView/index.js","Components/Collection/Views/CardGridView/styles.js","Components/Collection/Views/CardGridView/index.js","Components/Collection/Views/ContextMenu/styles.js","Components/Collection/Views/ContextMenu/index.js","Components/Collection/FilterFields/utils.js","Components/Collection/FilterFields/FilterPopover/styles.js","Components/Collection/FilterFields/FilterPopover/index.js","Components/Collection/FilterFields/styles.js","Components/Collection/FilterFields/index.js","Components/Collection/MyFabs/index.js","Components/Collection/.Import/ImportWizard/styles.js","Components/Collection/.Import/ImportWizard/index.js","Components/Collection/.Import/BulkImport/index.js","Components/Collection/.Import/styles.js","Components/Collection/.Import/index.js","Components/Collection/.Export/styles.js","Components/Collection/.Export/index.js","Components/Collection/styles.js","Components/Collection/index.js","Components/App/styles.js","Components/App/index.js","Components/MenuPopover/styles.js","Components/MenuPopover/index.js","Components/TopMenu/styles.js","Components/TopMenu/index.js","Components/CardImage/ImageOverlay/styles.js","Components/CardImage/ImageOverlay/index.js","Components/CardImage/TransformableCard/styles.js","Components/CardImage/TransformableCard/index.js","Components/CardImage/styles.js","Components/CardImage/index.js","Components/BottomBar/styles.js","Components/BottomBar/index.js","Components/Decks/styles.js","Components/Decks/index.js","Components/Profile/styles.js","Components/Profile/index.js","Components/Forms/BaseForm/styles.js","Components/Forms/BaseForm/index.js","Components/Forms/Login/styles.js","Components/Forms/Login/index.js","Components/Forms/Register/styles.js","Components/Forms/Register/index.js","index.js"],"names":["baseTheme","createTheme","getContrastText","palette","sharedOverrides","MuiCssBaseline","padding","fontFamily","borderRadius","textAlign","a","textDecoration","cursor","maxWidth","spacing","MuiListItemText","multiline","marginTop","marginBottom","MuiTextField","root","width","margin","MuiPaper","rounded","MuiListSubheader","display","alignItems","columnGap","MuiListItem","secondaryAction","paddingRight","darkPrimary","main","darkSecondary","darkThirdly","colors","purple","secondary","getDarkTheme","type","table","divider","primary","contrastText","thridly","background","grey","overrides","code","backgroundColor","color","MuiCircularProgress","circle","getLightTheme","default","paper","axios","defaults","headers","common","Config","MODIFY_DB_ALLOWED","API_URL","PER_PAGE","CONDITIONS","BREAKPOINTS","xs","sm","md","lg","xl","themeType","localStorage","getItem","accessToken","INITIAL_STATE","activeUser","username","collection","JSON","parse","theme","currentTheme","app","currency","topMenu","currentTab","view","pageNumber","perPage","currentOpenCardId","undefined","cardsSelectableEnabled","selectedCardIds","filters","cardInfo","viewIndex","editEnabled","tableView","columns","gridView","tiltEnabled","transform3dEnabled","appReducers","setCurrency","state","action","payload","toggleCurrency","toLowerCase","setCurrentTab","tab","setView","setCurrentOpenCardId","id","setSelectedCardIds","Array","isArray","Error","Object","prototype","toString","call","_","uniq","addSelectedCardIds","concat","removeSelectedCardIds","difference","setFilters","addFilters","assign","removeFilters","omit","setCardsSelectableEnabled","enabled","toggleCardsSelectableEnabled","setPageNumber","setPerPage","setViewIndex_CardInfo","index","setEditEnabled_CardInfo","setColumns_TableView","setTiltEnabled_GridView","toggleTiltEnabled_GridView","setTransform3dEnabled_GridView","toggleTransform3dEnabled_GridView","accountReducers","setActiveUser","setItem","removeItem","setCurrentCollection","stringify","updateCollection","cards","item","_id","card","idx","push","findIndex","splice","themeReducers","toggleThemeType","reducerSlice","combineReducers","account","createSlice","name","initialState","reducers","actions","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","useStyles","height","flexDirection","justifyContent","content","connect","dispatch","withStyles","props","classes","useEffect","Grid","container","className","component","Paper","src","alt","Typography","variant","varinat","Divider","password","slice","trim","split","map","i","addCardPrice","prices","foil","amount","price","Number","total_price","children","data","rest","useState","cardPriceData","setCardPriceData","React","Children","child","cloneElement","filteredData","setFilteredData","filter","row","every","entries","key","value","Function","length","intersection","includes","addLayoutKeywords","arrayContains","array","values","intersectionWith","b","is_transform","layout","is_split","is_flip","Utils","getAuthHeaders","token","Authorization","authHeadersDecorator","func","args","catchErrors","error","response","console","request","message","fetchScryfallCardData","Scryfall","getSets","all_sets","setData","zipObjectDeep","set","card_ids","getCollection","cardData","set_data","set_id","populateCardData","scryfall_id","scryfallData","Promise","all","date_created","Date","mana_cost","card_faces","populatedCards","pickCardFields","fields","_pick","c","pick","hasOwnProperty","ROUTE_URL","renameKeys","obj","keyMap","keys","reduce","acc","Auth","login","post","then","register","put","Collections","getCards","page","per_page","params","get","catch","err","updateCards","deleteCards","delete","getAllCards","deleteAllCards","getCardById","card_id","updateCardById","deleteCardById","MagicdexApi","getCardPrints","oracle_id","collector_number","res","getLangs","search","unique","include_multilingual","include_extras","order","dir","include_variations","lang","utils","addLeadingZero","date","toManaFont","txt","replace","sym","cost","style","clsx","toColorIndicator","compact","ci","transformStringArray","arr","searchStart","searchEnd","strTransformation","str","startIdx","endIdx","transformed","substring","limitPrecision","num","precision","Math","round","chip","boxShadow","shadows","preWrap","whiteSpace","mana","marginRight","fontSize","colorIndicator","flavorText","fontStyle","lineBreak","condition","widthLimit","breakpoints","down","renders","DefaultRender","memo","columnName","cardFace","RenderName","renderStyle","lgDown","useMediaQuery","v","noWrap","title","Hidden","mdDown","RenderOracleText","oracleText","align","words","match","transform","href","text","RenderPowerToughness","power","toughness","RenderSet","useTheme","rarity","parent_set_code","upperFirst","RenderBoolean","Chip","label","size","RenderCondition","cond","toUpperCase","rgb","NM","LP","MP","HP","DAMAGED","condStyles","RenderAmount","RenderPrice","RenderTag","tags","tag","RenderManaCost","manaCost","cmc","RenderType","typeLine","color_indicator","RenderDate","getFullYear","getMonth","getDate","year","month","day","join","RenderFlavorText","flavor_text","RenderCell","FieldsPanel","artist","collectorNumber","powerToughness","direction","Box","flexGrow","paddingTop","wrap","accordion","paddingBottom","listing","editButtonContainer","tagFilters","setEditEnabled","_updateHeight","updateHeight","onMenuHover","enqueueSnackbar","useSnackbar","smDown","setTimeout","modalOpen","setModalOpen","newCard","setNewCard","printsSet","setPrintsSet","printsLang","setPrintsLang","rulings","setRulings","resetNewCard","signed","altered","misprint","fetch","rulings_uri","json","lodash","chain","reverse","published_at","sortBy","handleChipClick","e","handleDeleteButtonClick","confirm","clonedCard","handleCardInfoChange","field","min","max","clampInt","uniqBy","selectedSet","selectedCollectorNumber","find","_rest","Button","onClick","cardClone","cloneDeep","Zoom","in","transformOrigin","IconButton","Delete","TextField","inputProps","inputMode","onChange","target","marginLeft","select","MenuItem","FormControlLabel","control","Checkbox","checked","disabled","SelectProps","onClose","InputProps","startAdornment","InputAdornment","position","CircularProgress","onMouseEnter","onMouseLeave","set_name","Autocomplete","multiple","freeSolo","disableClearable","limitTags","options","newValue","onInputChange","newInputValue","renderInput","helperText","borderSpacing","verticalAlign","colSpan","Tooltip","arrow","placement","enterDelay","paddingLeft","Accordion","expanded","TransitionProps","onEntering","onEntered","onExiting","onExited","AccordionSummary","expandIcon","ExpandMore","AccordionDetails","rule","oracle_text","comment","Modal","closeAfterTransition","open","BackdropProps","timeout","Fade","baseContainer","topArrow","zIndex","top","border","borderWidth","left","transition","image","setViewIndex","refs","rootComponent","rootProps","topArrowProps","swipeableViewsRef","useRef","menuHoverItem","setMenuHoverItem","useImperativeHandle","current","handleViewIndexChange","showPrice","mdUp","elevation","ignoreNativeScroll","ref","animateHeight","onChangeIndex","slideStyle","overflow","lgUp","alignSelf","flexItem","orientation","ChevronRight","ChevronLeft","hoverItem","floatingBackgroundColor","borderBottom","floating","checkboxCell","checkbox","addSelectedCardId","removeSelectedCardId","selectable","setRef","cardInfoRef","checkboxRef","isOpen","setIsOpen","showContent","setShowContent","clearSelectedCardsOnExit","contextMenuState","setContextMenuState","isMouseOver","setIsMouseOver","mouseY","mouseX","handleIsOpenToggle","collapseUpdate","isAppearing","setState","TableRow","onContextMenu","preventDefault","clientX","clientY","onMouseDown","button","selected","TableCell","stopPropagation","KeyboardArrowUp","KeyboardArrowDown","Collapse","mountOnEnter","unmountOnExit","onEnter","borderTopColor","tableContainer","tableFooter","borderTop","currentHoveringCard","setCurrentHoveringCard","setSortByCol","sortOrder","setSortOrder","sortedData","setSortedData","paginatedData","setPaginatedData","_sortBy","type_line","orderBy","TableContainer","Table","TableHead","tableHead","columnDisplayName","sortDirection","TableSortLabel","active","event","colName","handleHeaderClick","indeterminate","iconCell","TableBody","handleRowHover","TableFooter","TablePagination","rowsPerPageOptions","labelRowsPerPage","count","rowsPerPage","labelDisplayedRows","from","to","onPageChange","onRowsPerPageChange","parseInt","native","ActionsComponent","FirstPage","ceil","LastPage","toggleTiltEnabled","toggleTransform3dEnabled","menuItemRef","cardWidth","containerRef","setRefs","useSize","containerWidth","cardsPerRow","setCardsPerRow","selectedCard","setSelectedCard","targetCollapse","box","n","floor","times","collapse","createRef","handleCardClick","selectedCardData","targetCollapseIdx","getBoundingClientRect","handleMiddleMouseClick","handleContextMenu","persist","onEditClick","Portal","ListItemText","packTransformButton","showCheckbox","tiltProps","tiltMaxAngleX","tiltMaxAngleY","imageProps","offsetLeft","modal","ids","clearSelectedCards","tagArray","setTagArray","closeMenu","handleTagChange","handleMenuItemClick","confirmAction","len","clonedArr","countBy","flatMap","Menu","keepMounted","disableAutoFocusItem","Boolean","anchorReference","anchorPosition","MenuListProps","dense","ListItemIcon","minWidth","Edit","onKeyDown","TextOption","AutocompleteOptions","disableCloseOnSelect","filterSelectedOptions","ChipProps","renderTags","getTagProps","option","icon","popover","MenuPopover","forwardRef","menuAnchor","setMenuAnchor","menuOpen","filterButtonRef","makeStyles","openMenu","handleMenuOpen","handleMenuClose","menuAnnchor","currentTarget","Popover","anchorEl","anchorOrigin","vertical","horizontal","ClickAwayListener","onClickAway","List","disablePadding","minus","rangeInput","autocompleteInput","filtersMenuRef","setsData","setSetsData","cardName","setCardName","setOracleText","setTypeLine","selectedSets","setSelectedSets","allSets","set_type","released_at","fetchSets","endAdornment","FilterPopover","ListSubheader","ListItem","Fragment","groupBy","getOptionLabel","getOptionSelected","MyFabs","history","useHistory","handleFabClick","Fab","Add","CloudDownload","autocomplete","input","listbox","setCard","newCards","setNewCards","cardNames","setCardNames","listboxOpen","setListboxOpen","handleSubmit","reset","handleReset","focus","handleFocus","resetCard","getCardNamed","resolve","reject","source","closeModal","handleAddToNewCards","startsWith","handleCardNameChange","clearOnEscape","handleHomeEndKeys","onOpen","inputRef","disableFocusListener","disableHoverListener","disableTouchListener","gutterBottom","cardListText","setCardListText","errorMessages","setErrorMessages","bulkToCards","errors","lines","line","getCard","setPrints","flag","setLangs","sort","fullWidth","rows","placeholder","InputLabelProps","shrink","topBottomPadding","minHeight","hoverHighlight","hover","view1Container","view2Container","viewRef","wizardRef","bulkRef","currentViewIndex","_setCurrentViewIndex","wizardBackdrop","setWizardBackdrop","setCurrentViewIndex","handleImportTypeClick","formRef","onSubmit","instantValidate","header","headerProps","ImportExport","contentProps","disableBackdrop","textfieldInputRef","selectedExportType","setSelectedExportType","textfieldHelperText","setTextfieldHelperText","handleTextFocus","navigator","clipboard","writeText","onFocus","readOnly","FileCopy","fontWeight","textTransform","fab","bottom","right","filtersContainer","subheader","setColumns","location","useLocation","menuRef","viewParam","URLSearchParams","handleViewChange","FilterFields","MoreVert","listProps","ToggleButtonGroup","exclusive","ToggleButton","ViewList","ViewModule","ViewCompact","Skeleton","leftRightPadding","bottomBar","dark","_theme","snackbarRef","routes","Route","path","Home","exact","Collection","Import","Export","Decks","Login","Register","Profile","Redirect","ThemeProvider","CssBaseline","autoHideDuration","maxSnack","toastId","endIcon","Close","closeSnackbar","basename","TopMenu","iconButtonProps","popoverProps","iconButtonRef","Icon","setIcon","mainSidesPadding","appBar","iconButton","dropdown_tab","goto","attributes","AppBar","Tabs","Tab","AccountCircle","Settings","ListItemSecondaryAction","Switch","edge","loading","opacity","backgroundSize","base","overlay","baseSrc","baseProps","overlaySrc","overlayEnabled","overlayProps","isLoaded","setLoaded","labelPlacement","onLoad","face","front","back","_flipped","flipped","setFlipped","scaleX","setScaleX","image_uris","png","imageContainer","dfcSymbol","checkboxContainer","priceContainer","buttonContainer","buttonThridly","MyTooltip","tooltip","typography","pxToRem","buttonProps","handleTransform","setValueTo","tiltEnable","glareEnable","glareBorderRadius","glarePosition","glareMaxOpacity","_isDoublesided","onLeave","large","normal","handleCheckboxChange","Link","rel","LooLzzz","Bedopear","ScryfallClient","alignContent","iconSize","divider1","divider2","validationRules","iconProps","actionsProps","onError","Header","setHeader","Content","setContent","Actions","setActions","isLoading","setIsLoading","rules","forEach","ValidatorForm","hasValidationRule","addValidationRule","Dialog","DialogContent","usernameInput","setUsernameInput","passwordInput","setPasswordInput","user","msg","msgs","handleClear","resetValidations","validators","autoComplete","passwordRepeatInput","setPasswordRepeatInput","passwordInputRef","isPasswordMatch","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.1dfa13d2.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\r\n\r\nimport { createTheme, colors } from \"@material-ui/core\"\r\n\r\n\r\nconst baseTheme = createTheme()\r\nconst getContrastText = baseTheme.palette.getContrastText\r\n// console.log({ baseTheme })\r\n\r\n\r\n/** SHARED VALUES **/\r\nconst sharedOverrides = {\r\n  MuiCssBaseline: {\r\n    \"@global\": {\r\n      \"code\": {\r\n        padding: '2px',\r\n        // marginLeft: '0.25em',\r\n        // backgroundColor: 'rgba(255,255,255,0.1)',\r\n        fontFamily: '\"Red Hat Mono\", Consolas, monospace',\r\n        // fontSize: '0.93em',\r\n        borderRadius: '0.5em',\r\n      },\r\n      \".alignLeft\": {\r\n        textAlign: \"left\",\r\n      },\r\n      \".alignRight\": {\r\n        textAlign: \"right\",\r\n      },\r\n      a: {\r\n        textDecoration: \"none\",\r\n      },\r\n      \"a:hover\": {\r\n        textDecoration: \"underline\",\r\n      },\r\n      \".cursor-pointer\": {\r\n        cursor: \"pointer\",\r\n      },\r\n      '.floating': {\r\n        // position: 'absolute',\r\n        // zIndex: '999',\r\n        maxWidth: baseTheme.spacing(25),\r\n        padding: `${baseTheme.spacing(0.5)}px ${baseTheme.spacing(1.25)}px ${baseTheme.spacing(0.5)}px ${baseTheme.spacing(1.25)}px`,\r\n      },\r\n    },\r\n  },\r\n  MuiListItemText: {\r\n    multiline: {\r\n      marginTop: 0,\r\n      marginBottom: 0,\r\n    },\r\n  },\r\n  MuiTextField: {\r\n    root: {\r\n      width: \"100%\",\r\n      margin: \"0.4em\",\r\n    },\r\n  },\r\n  MuiPaper: {\r\n    rounded: {\r\n      borderRadius: \"12.5px\",\r\n    },\r\n  },\r\n  MuiListSubheader: {\r\n    root: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      columnGap: '0.6em',\r\n    },\r\n  },\r\n  MuiListItem: {\r\n    secondaryAction: {\r\n      paddingRight: baseTheme.spacing(8),\r\n    },\r\n  },\r\n}\r\n\r\n\r\n/** DARK THEME **/\r\nconst darkPrimary = {\r\n  main: '#2D5295',\r\n  // main: '#2D4583',\r\n  // main: '#404664',\r\n}\r\nconst darkSecondary = {\r\n  // main: colors.purple[500],\r\n  // main: '#731FA1',\r\n  // main: '#BF9EEE',\r\n  // main: '#8A8FEE',\r\n  main: '#DA7B08',\r\n  // main: '#F3533B',\r\n  // main: '#FA9F42',\r\n  // main: '#F56C40',\r\n  // main: colors.orange['900'],\r\n  // main: colors.deepPurple['200'],\r\n}\r\nconst darkThirdly = {\r\n  main: colors.purple[800],\r\n  secondary: colors.purple[700]\r\n  // main: '#DA7B08',\r\n  // main: '#731FA1',\r\n  // main: '#45155F',\r\n}\r\n\r\nconst getDarkTheme = () =>\r\n  createTheme({\r\n    palette:\r\n    {\r\n      type: 'dark',\r\n      table: {\r\n        divider: '#424242',\r\n      },\r\n      primary: {\r\n        ...darkPrimary,\r\n        contrastText: getContrastText(darkPrimary.main)\r\n      },\r\n      secondary: {\r\n        ...darkSecondary,\r\n        contrastText: getContrastText(darkSecondary.main)\r\n      },\r\n      thridly: {\r\n        ...darkThirdly,\r\n        contrastText: getContrastText(darkThirdly.main)\r\n      },\r\n      background: {\r\n        secondary: colors.grey['700'],\r\n      }\r\n    },\r\n\r\n    overrides:\r\n    {\r\n      ...sharedOverrides,\r\n      MuiCssBaseline: {\r\n        '@global': {\r\n          ...sharedOverrides.MuiCssBaseline,\r\n          code: {\r\n            ...sharedOverrides.MuiCssBaseline.code,\r\n            backgroundColor: 'rgba(255,255,255,0.1)',\r\n          },\r\n          a: {\r\n            color: darkSecondary.main,\r\n          },\r\n          '.floating': {\r\n            ...sharedOverrides.MuiCssBaseline['.floating'],\r\n            backgroundColor: colors.grey['700'],\r\n            color: getContrastText(colors.grey['700']),\r\n          },\r\n          '.buttonThridly-root': {\r\n            color: getContrastText(darkThirdly.main),\r\n            backgroundColor: darkThirdly.main,\r\n            '&:hover': {\r\n              backgroundColor: darkThirdly.secondary,\r\n            },\r\n          },\r\n        },\r\n      },\r\n      MuiCircularProgress: {\r\n        circle: {\r\n          color: 'white',\r\n        },\r\n      },\r\n    },\r\n  })\r\n\r\n\r\n/** LIGHT THEME **/\r\nconst getLightTheme = () =>\r\n  createTheme({\r\n    palette: {\r\n      type: 'light',\r\n      secondary: {\r\n        // main: colors.orange[900],\r\n        // main: colors.purple['A400'],\r\n        // main: '#9568AD',\r\n        // main: '#D695F9',\r\n        main: '#E3468C',\r\n        contrastText: getContrastText('#E3468C'),\r\n      },\r\n      table: {\r\n        divider: 'rgba(150, 150, 150, 0.75)'\r\n      },\r\n      background: {\r\n        default: '#D5D5D5',\r\n        paper: '#F0F0F0',\r\n        secondary: colors.grey['400'],\r\n      },\r\n      thridly: {\r\n        main: colors.purple[500],\r\n        secondary: colors.purple[700],\r\n        contrastText: getContrastText(colors.purple[500]),\r\n      },\r\n    },\r\n\r\n    overrides: {\r\n      ...sharedOverrides,\r\n      MuiCssBaseline: {\r\n        '@global': {\r\n          ...sharedOverrides.MuiCssBaseline,\r\n          code: {\r\n            ...sharedOverrides.MuiCssBaseline.code,\r\n            backgroundColor: 'rgba(0,0,0,0.1)',\r\n          },\r\n          a: {\r\n            // color: '#4f6ce2',\r\n            color: '#bf9eee',\r\n          },\r\n          '.floating': {\r\n            ...sharedOverrides.MuiCssBaseline['.floating'],\r\n            backgroundColor: colors.grey['A100'],\r\n            color: getContrastText(colors.grey['A100']),\r\n          },\r\n          '.buttonThridly-root': {\r\n            color: getContrastText(colors.purple[500]),\r\n            backgroundColor: colors.purple[500],\r\n            '&:hover': {\r\n              backgroundColor: colors.purple[700],\r\n            },\r\n          },\r\n        },\r\n      },\r\n      MuiCircularProgress: {\r\n        circle: {\r\n          color: 'currentColor',\r\n        },\r\n      },\r\n    },\r\n  })\r\n\r\n\r\nexport { getDarkTheme, getLightTheme }\r\n","import axios from 'axios'\r\n\r\naxios.defaults.headers.common['access-Control-Allow-Origin'] = '*'\r\naxios.defaults.headers.common['access-Control-Allow-Credentials'] = true\r\n\r\nconst Config = {\r\n  // MODIFY_DB_ALLOWED: false,\r\n  MODIFY_DB_ALLOWED: true,\r\n\r\n  // API_URL: 'https://magicdex-server.herokuapp.com',\r\n  API_URL: 'https://magicdex-server.deta.dev',\r\n  // API_URL: 'https://magicdex-server-test.herokuapp.com',\r\n  // API_URL: 'http://localhost:5000',\r\n\r\n  PER_PAGE: 25,\r\n  CONDITIONS: [\r\n    'NM',\r\n    'LP',\r\n    'MP',\r\n    'HP',\r\n    'DAMAGED',\r\n  ],\r\n\r\n  BREAKPOINTS: {\r\n    xs: 0,\r\n    sm: 600,\r\n    md: 900,\r\n    lg: 1200,\r\n    xl: 1536,\r\n  },\r\n}\r\n\r\nexport default Config\r\n\r\nexport const {\r\n  MODIFY_DB_ALLOWED,\r\n  API_URL,\r\n  CONDITIONS,\r\n  BREAKPOINTS,\r\n  PER_PAGE,\r\n} = Config","import { getDarkTheme, getLightTheme } from \"@/Themes\"\r\nimport { PER_PAGE } from '@/Config'\r\n\r\n\r\n/** LOCAL STORAGE **/\r\nlet themeType = localStorage.getItem(\"themeType\") ?? 'dark'\r\nlet accessToken = localStorage.getItem(\"accessToken\")\r\nlet username = localStorage.getItem(\"username\")\r\nlet collection = JSON.parse(localStorage.getItem(\"collection\")) ?? []\r\n\r\nthemeType = themeType ? themeType : \"dark\"\r\n\r\n\r\n/** STATE **/\r\nconst INITIAL_STATE = {\r\n  activeUser: {\r\n    username,\r\n    accessToken,\r\n    collection,\r\n  },\r\n\r\n\r\n  theme: {\r\n    currentTheme: themeType === 'dark' ? getDarkTheme() : getLightTheme(),\r\n    themeType: themeType,\r\n  },\r\n\r\n\r\n  app: {\r\n    currency: 'usd',\r\n    topMenu: {\r\n      currentTab: 'home',\r\n    },\r\n\r\n    collection: {\r\n      view: 'table',\r\n      pageNumber: 0,\r\n      perPage: PER_PAGE,\r\n      currentOpenCardId: undefined,\r\n      cardsSelectableEnabled: false,\r\n      selectedCardIds: [],\r\n      filters: {},\r\n\r\n      cardInfo: {\r\n        viewIndex: 0,\r\n        editEnabled: false,\r\n      },\r\n      tableView: {\r\n        columns: {},\r\n      },\r\n      gridView: {\r\n        tiltEnabled: false,\r\n        transform3dEnabled: false,\r\n      },\r\n    },\r\n  },\r\n}\r\n\r\nexport default INITIAL_STATE\r\n","import _ from 'lodash'\r\n\r\n\r\nconst appReducers = {\r\n  /** GENERAL APP **/\r\n  setCurrency: (state, action) => {\r\n    state.app.currency = action.payload.currency\r\n  },\r\n\r\n  toggleCurrency: (state, action) => {\r\n    const currency = state.app.currency.toLowerCase()\r\n    state.app.currency = currency === 'usd' ? 'eur' : 'usd'\r\n  },\r\n\r\n\r\n  /** TOP-MENU **/\r\n  setCurrentTab: (state, action) => {\r\n    state.app.topMenu.currentTab = action.payload.tab\r\n  },\r\n\r\n\r\n  /** COLLECTION **/\r\n  setView: (state, action) => {\r\n    state.app.collection.view = action.payload.view\r\n    state.app.collection.currentOpenCardId = null\r\n  },\r\n\r\n  setCurrentOpenCardId: (state, action) => {\r\n    state.app.collection.currentOpenCardId = action.payload.id\r\n  },\r\n\r\n  setSelectedCardIds: (state, action) => {\r\n    const { selectedCardIds } = action.payload\r\n\r\n    if (Array.isArray(selectedCardIds))\r\n      state.app.collection.selectedCardIds = _.uniq(selectedCardIds)\r\n    else\r\n      throw new Error(`Parameter ${Object.prototype.toString.call(selectedCardIds)} is not an Array`)\r\n  },\r\n\r\n  addSelectedCardIds: (state, action) => {\r\n    const { selectedCardIds, id } = action.payload\r\n\r\n    state.app.collection.selectedCardIds = _.uniq(\r\n      state.app.collection.selectedCardIds.concat(id || selectedCardIds)\r\n    )\r\n  },\r\n\r\n  removeSelectedCardIds: (state, action) => {\r\n    const { selectedCardIds, id } = action.payload\r\n\r\n    state.app.collection.selectedCardIds = _.difference(\r\n      state.app.collection.selectedCardIds,\r\n      id ? [id] : selectedCardIds\r\n    )\r\n  },\r\n\r\n  setFilters: (state, action) => {\r\n    state.app.collection.filters = action.payload.filters\r\n  },\r\n\r\n  addFilters: (state, action) => {\r\n    Object.assign(\r\n      state.app.collection.filters,\r\n      action.payload.filters // object with key-value pairs // { [key]: value }\r\n    )\r\n  },\r\n\r\n  removeFilters: (state, action) => {\r\n    state.app.collection.filters = _.omit(\r\n      state.app.collection.filters,\r\n      action.payload.filters //list of keys to remove // [keys]\r\n    )\r\n  },\r\n\r\n  setCardsSelectableEnabled: (state, action) => {\r\n    state.app.collection.cardsSelectableEnabled = action.payload.enabled\r\n\r\n    if (!state.app.collection.cardsSelectableEnabled)\r\n      state.app.collection.selectedCardIds = []\r\n  },\r\n\r\n  toggleCardsSelectableEnabled: (state, action) => {\r\n    state.app.collection.cardsSelectableEnabled = !state.app.collection.cardsSelectableEnabled\r\n\r\n    if (!state.app.collection.cardsSelectableEnabled)\r\n      state.app.collection.selectedCardIds = []\r\n  },\r\n\r\n  setPageNumber: (state, action) => {\r\n    state.app.collection.pageNumber = action.payload.pageNumber\r\n  },\r\n\r\n  setPerPage: (state, action) => {\r\n    state.app.collection.perPage = action.payload.perPage\r\n    state.app.collection.pageNumber = 0\r\n  },\r\n\r\n  //collection.cardInfo\r\n  setViewIndex_CardInfo: (state, action) => {\r\n    state.app.collection.cardInfo.viewIndex = action.payload.index\r\n  },\r\n\r\n  setEditEnabled_CardInfo: (state, action) => {\r\n    state.app.collection.cardInfo.editEnabled = action.payload.enabled\r\n  },\r\n\r\n  //collection.tableView\r\n  setColumns_TableView: (state, action) => {\r\n    state.app.collection.tableView.columns = action.payload.columns\r\n  },\r\n\r\n  //collection.gridView\r\n  setTiltEnabled_GridView: (state, action) => {\r\n    state.app.collection.gridView.tiltEnabled = action.payload.enabled\r\n  },\r\n\r\n  toggleTiltEnabled_GridView: (state, action) => {\r\n    state.app.collection.gridView.tiltEnabled = !state.app.collection.gridView.tiltEnabled\r\n  },\r\n\r\n  setTransform3dEnabled_GridView: (state, action) => {\r\n    state.app.collection.gridView.transform3dEnabled = action.payload.enabled\r\n  },\r\n\r\n  toggleTransform3dEnabled_GridView: (state, action) => {\r\n    state.app.collection.gridView.transform3dEnabled = !state.app.collection.gridView.transform3dEnabled\r\n  },\r\n}\r\n\r\nexport default appReducers\r\n","\r\nconst accountReducers = {\r\n  setActiveUser: (state, action) => {\r\n    const { username, accessToken } = action.payload\r\n\r\n    if (!username && !accessToken) {\r\n      localStorage.removeItem('username')\r\n      localStorage.removeItem('accessToken')\r\n      localStorage.removeItem('collection')\r\n    }\r\n    else {\r\n      username && localStorage.setItem('username', username)\r\n      accessToken && localStorage.setItem('accessToken', accessToken)\r\n    }\r\n\r\n    state.activeUser = {\r\n      ...state.activeUser,\r\n      accessToken,\r\n      username,\r\n    }\r\n  },\r\n\r\n  setCurrentCollection: (state, action) => {\r\n    const { collection } = action.payload\r\n\r\n    if (collection)\r\n      localStorage.setItem('collection', JSON.stringify(collection || []))\r\n    else\r\n      localStorage.removeItem('collection')\r\n\r\n    state.activeUser.collection = collection\r\n  },\r\n\r\n  updateCollection: (state, action) => {\r\n    const { cards } = action.payload\r\n    const { collection } = state.activeUser\r\n\r\n    for (const item of cards) {\r\n      const { _id, action, card } = item\r\n      let idx = -1\r\n\r\n      switch (action) {\r\n        case 'CREATED':\r\n          collection.push(card)\r\n          break\r\n\r\n        case 'UPDATED':\r\n          idx = collection.findIndex(item => item._id === _id)\r\n          if (idx !== -1)\r\n            Object.assign(collection[idx], card)\r\n          break\r\n\r\n        case 'DELETED':\r\n          idx = collection.findIndex(item => item._id === _id)\r\n          if (idx !== -1)\r\n            collection.splice(idx, 1)\r\n          break\r\n\r\n        case 'NOP':\r\n        default:\r\n          break\r\n      }\r\n    }\r\n\r\n    state.activeUser.collection = collection\r\n    localStorage.setItem('collection', JSON.stringify(collection || []))\r\n  },\r\n}\r\n\r\nexport default accountReducers","import { getDarkTheme, getLightTheme } from \"@/Themes\"\r\n\r\n\r\nconst themeReducers = {\r\n  toggleThemeType: (state, action) => {\r\n    const type = state.theme.themeType === 'dark' ? 'light' : 'dark' // toggle theme type\r\n    localStorage.setItem(\"themeType\", type)\r\n\r\n    state.theme = {\r\n      ...state.theme,\r\n      themeType: type,\r\n      currentTheme: type === 'dark' ? getDarkTheme() : getLightTheme(),\r\n    }\r\n  },\r\n}\r\n\r\nexport default themeReducers\r\n","import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nimport initialState from \"./initialState\"\r\nimport { appReducers, accountReducers, themeReducers } from \"./reducers\"\r\n\r\n\r\nexport const reducerSlice = createSlice({\r\n  name: \"actions\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    ...appReducers,\r\n    ...accountReducers,\r\n    ...themeReducers,\r\n  },\r\n})\r\n\r\nexport default reducerSlice.reducer\r\n\r\nexport const {\r\n  actions\r\n} = reducerSlice","import appReducers from './appReducers'\r\nimport accountReducers from './accountReducers'\r\nimport themeReducers from './themeReducers'\r\n\r\nimport { combineReducers } from \"redux\"\r\n\r\nexport default combineReducers({\r\n  app: appReducers,\r\n  account: accountReducers,\r\n  theme: themeReducers,\r\n})\r\n\r\nexport {\r\n  appReducers,\r\n  accountReducers,\r\n  themeReducers,\r\n}","import { configureStore } from \"@reduxjs/toolkit\"\r\nimport reducerSlice from \"./reducerSlice\"\r\n\r\nexport default configureStore({\r\n  reducer: { actions: reducerSlice },\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({\r\n    serializableCheck: false\r\n  })\r\n})\r\n","import store from \"./store\"\r\nimport reducer, { actions } from './reducerSlice'\r\n\r\nexport default reducer\r\nexport { store }\r\n\r\nexport const {\r\n  /** .activeUser **/\r\n  setActiveUser,\r\n  setCurrentCollection,\r\n  updateCollection,\r\n\r\n  /** .theme **/\r\n  toggleThemeType,\r\n\r\n  /** .app **/\r\n  setCurrency,\r\n  toggleCurrency, // toggles between 'usd' and 'eur'\r\n  \r\n  /** .app.topMenu **/\r\n  setCurrentTab,\r\n\r\n  /** .app.collection **/\r\n  setView,\r\n  setCurrentOpenCardId,\r\n  setSelectedCardIds,\r\n  removeSelectedCardIds,\r\n  addSelectedCardIds,\r\n  setFilters,\r\n  addFilters,\r\n  removeFilters,\r\n  setCardsSelectableEnabled,\r\n  toggleCardsSelectableEnabled,\r\n  setPageNumber,\r\n  setPerPage,\r\n  \r\n  /** .app.collection.cardInfo **/\r\n  setViewIndex_CardInfo,\r\n  setEditEnabled_CardInfo,\r\n\r\n  /** .app.collection.tableView **/\r\n  setColumns_TableView,\r\n  \r\n  /** .app.collection.gridView **/\r\n  setTiltEnabled_GridView,\r\n  toggleTiltEnabled_GridView,\r\n  setTransform3dEnabled_GridView,\r\n  toggleTransform3dEnabled_GridView,\r\n\r\n} = actions","\r\nconst useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  // const mainSidesPadding = theme.spacing(10)\r\n\r\n  return {\r\n    root: {\r\n      height: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    content: {\r\n      padding: `${theme.spacing(3)}px ${theme.spacing(5)}px ${theme.spacing(3)}px ${theme.spacing(5)}px`,\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { useEffect } from 'react'\r\nimport { Typography, Paper, Grid, Divider } from \"@material-ui/core\"\r\nimport { withStyles } from \"@material-ui/styles\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport Config from '@/Config'\r\nimport { setCurrentTab } from \"@/Logic/redux\"\r\nimport useStyles from \"./styles\"\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  'dispatch': {\r\n    setCurrentTab: (payload) => dispatch(setCurrentTab(payload)),\r\n  }\r\n})\r\n\r\n\r\nconst Home = ({\r\n  /** VARS **/\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n    dispatch,\r\n  } = props\r\n\r\n\r\n  //EFFECTS\r\n  useEffect(() => {\r\n    //onMount\r\n    dispatch.setCurrentTab({ tab: 'home' })\r\n  }, [])\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <Grid container justifyContent='center' className={classes.root}>\r\n      <Grid item container component={Paper} xs={12} sm={10} md={9} lg={8} className={classes.content} spacing={1}>\r\n        <Grid item container justifyContent='center' xs={12}>\r\n          <Grid item xs={11} sm={10} md={9}>\r\n            <img src='https://i.imgur.com/vQvr7OG.png' width='100%' alt=\"home\" />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} component={Typography} variant='h6'>\r\n          Welcome to Magicdex\r\n        </Grid>\r\n        <Grid item xs={12} component={Typography} varinat='body2'>\r\n          This is webapp is still in development, feel free to explore and report any bug you encounter.\r\n        </Grid>\r\n        <Grid item>\r\n          <Divider />\r\n        </Grid>\r\n        <Grid item xs={12} component={Typography} variant='body2'>\r\n          Active Config:\r\n          {\r\n            JSON.stringify({\r\n              MODIFY_DB_ALLOWED: Config.MODIFY_DB_ALLOWED,\r\n              API_URL: Config.API_URL,\r\n              username: 'test',\r\n              password: 'test',\r\n            }, null, 2)\r\n              .slice(2, -1)\r\n              .trim()\r\n              .split('\\n')\r\n              .map((item, i) => (\r\n                <div key={i}>\r\n                  <code>\r\n                    {item}\r\n                  </code>\r\n                </div>\r\n              ))\r\n          }\r\n        </Grid>\r\n        <Grid item xs={12} component={Typography} variant='h2'>\r\n          <span className=\"ss ss-fw ss-afr\" />\r\n          <span className=\"ss ss-fw ss-war\" />\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  connect(mapStateToProps, mapDispatchToProps)(\r\n    withStyles(useStyles)(\r\n      Home\r\n    )\r\n  )","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  currency: state.actions.app.currency,\r\n})\r\n\r\n\r\n/** UTILS **/\r\nconst addCardPrice = (card, currency = 'usd') => {\r\n  const { prices, foil, amount } = card\r\n  const price = Number(foil ? prices?.[`${currency}_foil`] : prices?.[currency])\r\n\r\n  return {\r\n    ...card,\r\n    currency,\r\n    price,\r\n    total_price: price * amount,\r\n  }\r\n}\r\n\r\n\r\n/** COMPONENT **/\r\nconst CardPriceDataProvider = ({\r\n  /** VARS **/\r\n  children,\r\n  data = [],\r\n  ...props\r\n}) => {\r\n  const {\r\n    currency,\r\n    ...rest\r\n  } = props\r\n  const [cardPriceData, setCardPriceData] = useState(data)\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    setCardPriceData(\r\n      data instanceof Array && data.map(card => addCardPrice(card, currency)))\r\n  }, [data, currency])\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    React.Children.map(children, child =>\r\n      React.cloneElement(child, {\r\n        data: cardPriceData,\r\n        ...rest,\r\n      })\r\n    )\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  connect(mapStateToProps)(\r\n    CardPriceDataProvider\r\n  )\r\n\r\nexport { addCardPrice }","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport _ from 'lodash'\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  filters: state.actions.app.collection.filters,\r\n})\r\n\r\n\r\n/** COMPONENT **/\r\nconst FilteredDataProvider = ({\r\n  /** VARS **/\r\n  children,\r\n  data = [],\r\n  ...props\r\n}) => {\r\n  const {\r\n    filters,\r\n    ...rest\r\n  } = props\r\n  const [filteredData, setFilteredData] = useState(data)\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    setFilteredData(\r\n      _.filter(data ?? [],\r\n        row => (\r\n          _.every(Object.entries(filters ?? {}),\r\n            ([key, value]) => {\r\n              if (typeof value === 'boolean')\r\n                return value\r\n\r\n              if (value instanceof Function)\r\n                return value(row[key], row)\r\n\r\n              if (Array.isArray(value)) {\r\n                if (value.length > 0) {\r\n                  if (Array.isArray(row[key]))\r\n                    return _.intersection(value, row[key]).length > 0\r\n                  return value.includes(row[key])\r\n                }\r\n                return true\r\n              }\r\n\r\n              // default\r\n              return row[key] === value\r\n            })\r\n        ))\r\n    )\r\n  }, [filters, data])\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    React.Children.map(children, child =>\r\n      React.cloneElement(child, {\r\n        data: filteredData,\r\n        ...rest,\r\n      })\r\n    )\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  connect(mapStateToProps)(\r\n    FilteredDataProvider\r\n  )","import CardPriceDataProvider, { addCardPrice } from './CardPriceDataProvider'\r\nimport FilteredDataProvider from './FilteredDataProvider'\r\nimport intersectionWith from 'lodash/intersectionWith'\r\n\r\n\r\nconst addLayoutKeywords = (card) => {\r\n  const arrayContains = (array, values, type = 'some') => {\r\n    array = array\r\n      ? array instanceof Array\r\n        ? array\r\n        : [array]\r\n      : []\r\n    values = values\r\n      ? values instanceof Array\r\n        ? values\r\n        : [values]\r\n      : []\r\n\r\n    const intersection = intersectionWith(array, values,\r\n      (a, b) => a.includes(b)\r\n    )\r\n    switch (type) {\r\n      case 'some':\r\n        return intersection.length > 0\r\n      case 'every':\r\n        return intersection.length === values.length\r\n      default:\r\n        return false\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...card,\r\n    is_transform: arrayContains(card.layout, ['modal', 'transform']),\r\n    is_split: arrayContains(card.layout, ['split', 'fuse']),\r\n    is_flip: arrayContains(card.layout, ['flip']),\r\n  }\r\n}\r\n\r\nexport {\r\n  CardPriceDataProvider,\r\n  FilteredDataProvider,\r\n  addCardPrice,\r\n  addLayoutKeywords,\r\n}","import Scryfall from \"scryfall-client\"\r\nimport pick from 'lodash/pick'\r\nimport zipObjectDeep from \"lodash/zipObjectDeep\"\r\nimport intersectionWith from 'lodash/intersectionWith'\r\n\r\n\r\nconst Utils = {\r\n  getAuthHeaders: () => {\r\n    let token = localStorage.getItem(\"accessToken\")\r\n\r\n    return token ? { Authorization: `Bearer ${token}` } : {}\r\n  },\r\n\r\n  authHeadersDecorator: (func) => (\r\n    function (args) {\r\n      args = {\r\n        ...args,\r\n        headers: {\r\n          ...args?.headers,\r\n          ...getAuthHeaders(),\r\n        },\r\n      }\r\n      return func(args)\r\n    }\r\n  ),\r\n\r\n  catchErrors: (error) => {\r\n    if (error.response)\r\n      console.error('Request made and server responded', error.response)\r\n    else if (error.request)\r\n      console.error('Request was made but no response was recieved', error.request)\r\n    else\r\n      console.error(\"Something happened in setting up the request that triggered an error\", error.message)\r\n\r\n    throw error\r\n  },\r\n\r\n  fetchScryfallCardData: async (cardInfo) => {\r\n    const all_sets = await Scryfall.getSets()\r\n    const setData = zipObjectDeep(all_sets.map(set => set.id), all_sets) // { 'M19': {...}, 'M20': {...}, ... }\r\n\r\n    const card_ids = cardInfo.map(card => ({ id: card.id }))\r\n    const cardData = await Scryfall.getCollection(card_ids)\r\n\r\n    return cardData.map((card) => ({\r\n      ...card,\r\n      set_data: setData[card.set_id],\r\n    }))\r\n  },\r\n\r\n  arrayContains: (array, values, type = 'some') => {\r\n    array = array instanceof Array ? array : [array]\r\n    values = values instanceof Array ? values : [values]\r\n\r\n    const intersection = intersectionWith(array, values,\r\n      (a, b) => a.includes(b)\r\n    )\r\n    switch (type) {\r\n      case 'some':\r\n        return intersection.length > 0\r\n      case 'every':\r\n        return intersection.length === values.length\r\n      default:\r\n        return false\r\n    }\r\n  },\r\n\r\n  populateCardData: async (cards) => {\r\n    const cardInfo =\r\n      (Array.isArray(cards) ? cards : [cards])\r\n        .map(card => {\r\n          card.id = card.scryfall_id\r\n          delete card.scryfall_id\r\n          return card\r\n        })\r\n\r\n    const scryfallData = await fetchScryfallCardData(cardInfo)\r\n\r\n    const populatedCards = await Promise.all(\r\n      cardInfo.map(async (card, i) => {\r\n        const { is_transform, is_split, is_flip } = {\r\n          is_transform: arrayContains(scryfallData[i].layout, ['modal', 'transform']),\r\n          is_split: arrayContains(scryfallData[i].layout, ['split', 'fuse']),\r\n          is_flip: arrayContains(scryfallData[i].layout, ['flip']),\r\n        }\r\n\r\n        return Object.assign(scryfallData[i], {\r\n          ...card,\r\n          is_transform,\r\n          is_split,\r\n          is_flip,\r\n          // rulings: await scryfallData[i].getRulings(),\r\n          date_created: new Date(card.date_created),\r\n          mana_cost: is_transform\r\n            ? [scryfallData[i].card_faces[0].mana_cost, scryfallData[i].card_faces[1].mana_cost]\r\n            : scryfallData[i].mana_cost,\r\n        })\r\n      })\r\n    )\r\n\r\n    return Array.isArray(cards)\r\n      ? populatedCards\r\n      : populatedCards[0]\r\n  },\r\n\r\n  pickCardFields: (cards, fields = ['_id', 'id', 'amount', 'tag', 'foil', 'condition', 'signed', 'altered', 'misprint']) => {\r\n    const _pick = (card) => {\r\n      const c = pick(card, fields)\r\n      \r\n      if (c.hasOwnProperty('id')) {\r\n        c.scryfall_id = c.id\r\n        delete c.id\r\n      }\r\n      \r\n      return c\r\n    }\r\n\r\n    if (Array.isArray(cards))\r\n      return cards\r\n        .map(_pick)\r\n\r\n    // else\r\n    return _pick(cards)\r\n  }\r\n}\r\n\r\nexport default Utils\r\n\r\nexport const {\r\n  getAuthHeaders,\r\n  authHeadersDecorator,\r\n  catchErrors,\r\n  fetchScryfallCardData,\r\n  arrayContains,\r\n  populateCardData,\r\n  pickCardFields,\r\n} = Utils\r\n","import axios from \"axios\"\r\n\r\nimport { authHeadersDecorator } from './utils'\r\nimport { API_URL } from \"@/Config\"\r\n\r\n\r\nconst ROUTE_URL = `${API_URL}/auth`\r\n\r\nconst renameKeys = (obj, keyMap) =>\r\n  Object.keys(obj)\r\n    .reduce((acc, key) => {\r\n      const newKey = keyMap[key] || key\r\n      acc[newKey] = obj[key]\r\n      return acc\r\n    }, {})\r\n\r\nconst Auth = {\r\n  /**\r\n   * Try to login with the given credentials.\r\n   * If credentials provided it will try to use the saved access token.\r\n   * @param {String?} username\r\n   * @param {String?} password\r\n   * @returns Response Object\r\n   */\r\n  login: authHeadersDecorator(({ username, password, headers }) => {\r\n    let payload = { username, password }\r\n\r\n    return axios\r\n      .post(ROUTE_URL, payload, { headers })\r\n      .then(response => renameKeys(response.data, { 'access-token': 'accessToken' }))\r\n    // .catch(err => catchErrors(err));\r\n  }),\r\n\r\n  /**\r\n   * Try to register a new user.\r\n   * @param {String?} username\r\n   * @param {String?} password\r\n   * @returns Response Object\r\n   */\r\n  register: ({ username, password }) => {\r\n    const payload = { username, password }\r\n\r\n    return axios\r\n      .put(ROUTE_URL, payload)\r\n      .then(response => renameKeys(response.data, { 'access-token': 'accessToken' }))\r\n    // .catch(err => catchErrors(err));\r\n  },\r\n}\r\n\r\nexport default Auth\r\n\r\nexport const {\r\n  login,\r\n  register,\r\n} = Auth\r\n","import axios from 'axios'\r\n\r\nimport { API_URL } from '@/Config'\r\nimport { getAuthHeaders, catchErrors, populateCardData, pickCardFields } from './utils'\r\n\r\n\r\nconst ROUTE_URL = `${API_URL}/collections`\r\n\r\n\r\nconst Collections = {\r\n  /**\r\n   * Retrieve cards from active user's collection.\r\n   */\r\n  getCards: (page, per_page, cards) => {\r\n    const headers = getAuthHeaders()\r\n    const params = { page, per_page, cards }\r\n\r\n    return axios\r\n      .get(ROUTE_URL, { params, headers })\r\n      .then(response => populateCardData(response.data.data))\r\n      .catch(err => catchErrors(err))\r\n  },\r\n\r\n  /**\r\n   * Insert or update cards from active user's collection.\r\n   */\r\n  updateCards: async (cards) => {\r\n    const headers = getAuthHeaders()\r\n\r\n    // keep only relevant data\r\n    cards = pickCardFields(cards)\r\n\r\n    try {\r\n      let response = await axios.post(ROUTE_URL, { cards }, { headers })\r\n\r\n      response = await Promise.all(response.data.map(async (item, i) => ({\r\n        ...item,\r\n        card: item.card\r\n          ? {\r\n            ...await populateCardData(item.card),\r\n            ...item.card,\r\n          }\r\n          : cards[i]\r\n      })))\r\n\r\n      return response\r\n    }\r\n    catch (error) {\r\n      catchErrors(error)\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Delete cards from active user's collection.\r\n   */\r\n  deleteCards: (cards) => {\r\n    const headers = getAuthHeaders()\r\n\r\n    return axios\r\n      .delete(ROUTE_URL, { cards }, { headers })\r\n      .then(response => response)\r\n      .catch(err => catchErrors(err))\r\n  },\r\n\r\n\r\n  /**\r\n   * Retrieve all cards from active user's collection.\r\n   */\r\n  getAllCards: (cards) => {\r\n    const headers = getAuthHeaders()\r\n    const params = { cards }\r\n\r\n    return axios\r\n      .get(`${ROUTE_URL}/all`, { params, headers })\r\n      .then(response => populateCardData(response.data.data))\r\n      .catch(err => catchErrors(err))\r\n  },\r\n\r\n  /**\r\n   * Clear active user's collection.\r\n   */\r\n  deleteAllCards: () => {\r\n    const headers = getAuthHeaders()\r\n\r\n    return axios\r\n      .delete(`${ROUTE_URL}/all`, { headers })\r\n      .then(response => response)\r\n      .catch(err => catchErrors(err))\r\n  },\r\n\r\n  /**\r\n   * Retrieve a specific card from active user's collection.\r\n   */\r\n  getCardById: (card_id) => {\r\n    const headers = getAuthHeaders()\r\n\r\n    return axios\r\n      .get(`${ROUTE_URL}/${card_id}`, { headers })\r\n      .then(response => populateCardData(response.data))\r\n      .catch(err => catchErrors(err))\r\n  },\r\n\r\n  /**\r\n   * Update a specific card from active user's collection.\r\n   */\r\n  updateCardById: (card_id, data) => {\r\n    const headers = getAuthHeaders()\r\n\r\n    return axios\r\n      .post(`${ROUTE_URL}/${card_id}`, data, { headers })\r\n      .then(response => response)\r\n      .catch(err => catchErrors(err))\r\n  },\r\n\r\n  /**\r\n   * Delete a specific card from active user's collection.\r\n   */\r\n  deleteCardById: (card_id) => {\r\n    const headers = getAuthHeaders()\r\n\r\n    return axios\r\n      .delete(`${ROUTE_URL}/${card_id}`, { headers })\r\n      .then(response => response)\r\n      .catch(err => catchErrors(err))\r\n  },\r\n}\r\n\r\n\r\n/** EXPORTS **/\r\n// const decoratedCollections =\r\n//   Object.fromEntries(\r\n//     Object\r\n//       .entries(Collections)\r\n//       .map(([k, v]) => [k, authHeadersDecorator(v)])\r\n//   )\r\n\r\n// export default decoratedCollections\r\nexport default Collections\r\n\r\nexport const {\r\n  getCards,\r\n  updateCards,\r\n  deleteCards,\r\n  getAllCards,\r\n  deleteAllCards,\r\n  getCardById,\r\n  updateCardById,\r\n  deleteCardById,\r\n  // } = decoratedCollections\r\n} = Collections\r\n","import { login, register } from \"./auth\"\r\nimport {\r\n  getAllCards,\r\n  deleteAllCards,\r\n  getCards,\r\n  updateCards,\r\n  deleteCards,\r\n  getCardById,\r\n  updateCardById,\r\n  deleteCardById,\r\n} from \"./collection\"\r\n\r\n\r\nconst MagicdexApi = {\r\n  login,\r\n  register,\r\n  getCards,\r\n  updateCards,\r\n  deleteCards,\r\n  getAllCards,\r\n  deleteAllCards,\r\n  getCardById,\r\n  updateCardById,\r\n  deleteCardById,\r\n}\r\n\r\nexport default MagicdexApi","import Scryfall from 'scryfall-client'\r\nimport filter from 'lodash/filter'\r\n\r\nimport MagicdexApi from \"./MagicdexApi\"\r\nimport { fetchScryfallCardData } from './MagicdexApi/utils'\r\n\r\n\r\n/**\r\n * get card print information from scryfall.\r\n * @param {object} card - should include {'oracle_id', 'set', 'collector_number'}\r\n * @param {string} type - search type, one of ['set', 'lang', 'both'], default 'set'\r\n */\r\nconst getCardPrints = async (card, type = 'set') => {\r\n  const { oracle_id, set, collector_number } = card\r\n  let res = []\r\n\r\n  /** METHODS **/\r\n  const getLangs = async () => {\r\n    res = await Scryfall.search(`oracleid:${oracle_id}+set:${set}+lang:any`, {\r\n      unique: 'prints',\r\n      include_multilingual: true,\r\n      include_extras: true,\r\n    })\r\n    res = filter(res, { collector_number })\r\n    return res\r\n  }\r\n\r\n  const getSets = async () => {\r\n    res = await Scryfall.search(`oracleid:${oracle_id}`, {\r\n      unique: 'prints',\r\n      order: 'released',\r\n      dir: 'desc',\r\n      include_variations: true,\r\n      include_extras: true,\r\n    })\r\n    return res\r\n  }\r\n\r\n  /** FUNCTION MAPPING **/\r\n  switch (type) {\r\n    case 'both':\r\n      try {\r\n        res = {\r\n          lang: await getLangs(),\r\n          set: await getSets(),\r\n        }\r\n      }\r\n      catch (err) {\r\n        console.error({ error: err })\r\n      }\r\n      break\r\n\r\n    case 'lang':\r\n      try {\r\n        res = await getLangs()\r\n      }\r\n      catch (err) {\r\n        console.error({ error: err })\r\n      }\r\n      break\r\n\r\n    default:\r\n    case 'set':\r\n      try {\r\n        res = await getSets()\r\n      }\r\n      catch (err) {\r\n        console.error({ error: err })\r\n      }\r\n      break\r\n  }\r\n\r\n  /** RETURN VALUE **/\r\n  res = await fetchScryfallCardData(res)\r\n  return res\r\n}\r\n\r\nexport {\r\n  MagicdexApi,\r\n  getCardPrints,\r\n}","import clsx from 'clsx'\r\nimport compact from 'lodash/compact'\r\n\r\n\r\nconst utils = {\r\n  addLeadingZero: (date) => (\r\n    date < 10\r\n      ? date = '0' + date\r\n      : date\r\n  ),\r\n\r\n  toManaFont: (txt, props) => {\r\n    if (typeof txt === 'string')\r\n      txt = txt\r\n        .replace(/(^{)|(\\/)|(}$)/g, '') // remove starting '{', trailing '}' and any '/'\r\n        .split('}{')\r\n    return txt\r\n      .map(sym => {\r\n        switch (sym) {\r\n          default:\r\n            return sym\r\n\r\n          case 'T':\r\n            return 'tap'\r\n        }\r\n      })\r\n      .map(sym => sym ? `ms-${sym.toLowerCase()}` : '')\r\n      .map((cost, i) => (\r\n        <span\r\n          key={i}\r\n          {...props}\r\n          style={props?.style}\r\n          className={clsx('ms', 'ms-cost', 'ms-shadow', 'ms-fw', cost, ...props?.className)} />\r\n      ))\r\n  },\r\n\r\n  toColorIndicator: (txt, props) => {\r\n    if (typeof txt === 'string')\r\n      txt = txt\r\n        .replace(/(^{)|(\\/)|(}$)/g, '') // remove starting '{', trailing '}' and any '/'\r\n        .split('}{')\r\n    txt = compact(txt) // remove empty strings\r\n\r\n    return txt\r\n      .map((ci, i) => (\r\n        <span\r\n          key={i}\r\n          {...props}\r\n          style={props?.style}\r\n          className={clsx('ms', 'ms-ci', `ms-ci-${ci.length}`, `ms-ci-${ci.toLowerCase()}`)} />\r\n      ))\r\n  },\r\n\r\n  transformStringArray: (arr, searchStart, searchEnd, strTransformation) => {\r\n    for (let i = 0; i < arr.length; i++) {\r\n      let str = arr[i]\r\n      if (typeof str !== 'string')\r\n        continue\r\n\r\n      let startIdx = str.search(searchStart)\r\n      let endIdx = str.search(searchEnd)\r\n\r\n      if (startIdx === -1 || endIdx === -1)\r\n        continue\r\n\r\n      let substr = str.substring(startIdx, endIdx + 1) // include search characters\r\n      let transformed = strTransformation(substr)\r\n      transformed = transformed instanceof Array ? transformed : [transformed]\r\n      // replace element at index i with transformed string\r\n      arr.splice(i, 1,\r\n        str.substring(0, startIdx),\r\n        ...transformed,\r\n        str.substring(endIdx + 1)\r\n      )\r\n    }\r\n    return compact(arr) // remove any empty strings\r\n  },\r\n\r\n  limitPrecision: (num, precision = 2) => {\r\n    precision = 10 ** precision\r\n  \r\n    return Math.round(Number(num) * precision) / precision\r\n  }\r\n}\r\n\r\nexport default utils\r\n\r\nexport const {\r\n  addLeadingZero,\r\n  toManaFont,\r\n  toColorIndicator,\r\n  transformStringArray,\r\n  limitPrecision,\r\n} = utils","const useStyles = (theme) => {\r\n  return {\r\n    chip: {\r\n      boxShadow: theme.shadows[1],\r\n    },\r\n    preWrap: {\r\n      whiteSpace: 'pre-wrap',\r\n    },\r\n    mana: {\r\n      marginRight: '0.25em',\r\n      fontSize: '0.85em',\r\n    },\r\n    colorIndicator: {\r\n      marginRight: '0.25em',\r\n      fontSize: '0.9em',\r\n    },\r\n    set: {\r\n      fontSize: '1.25em',\r\n    },\r\n    flavorText: {\r\n      // marginTop: '0.2em',\r\n      fontStyle: 'italic',\r\n      fontFamily: 'Georgia, fangsong, Times New Roman',\r\n      whiteSpace: 'pre-wrap',\r\n      '&[lang=\"ph\"]': {\r\n        fontFamily: 'PhyrexianHorizontal',\r\n        lineBreak: 'anywhere',\r\n      }\r\n    },\r\n    condition: {\r\n      padding: '3px 8px 3px 8px',\r\n      borderRadius: 12,\r\n      boxShadow: theme.shadows[1],\r\n      fontFamily: '\"Red Hat Mono\", Consolas, monospace',\r\n      fontSize: '0.93em',\r\n    },\r\n    widthLimit: {\r\n      maxWidth: '22 em',\r\n      [theme.breakpoints.down('lg')]: {\r\n        maxWidth: '17em',\r\n      },\r\n      [theme.breakpoints.down(1400)]: {\r\n        maxWidth: '10em',\r\n      },\r\n      [theme.breakpoints.down('sm')]: {\r\n        maxWidth: '7em',\r\n      },\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","import { Fragment, memo } from 'react'\r\nimport { useTheme, useMediaQuery, Chip, Hidden, Typography } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport clsx from 'clsx'\r\nimport _ from 'lodash'\r\n\r\n// import { EllipsisText } from '@/Components'\r\nimport utils from './utils'\r\nimport useStyles from './styles'\r\n\r\n\r\n/** Card render delegation helper function **/\r\nconst RenderCell = ({ card, columnName, ...rest }) => {\r\n  columnName = columnName.replace(/[ ]+/g, '_')\r\n  const props = { card, columnName, ...rest }\r\n\r\n  switch (columnName) {\r\n    case 'name':\r\n      return <renders.RenderName {...props} />\r\n\r\n    case 'set':\r\n      return <renders.RenderSet {...props} />\r\n\r\n    case 'condition':\r\n      return <renders.RenderCondition {...props} />\r\n\r\n    case 'power_toughness':\r\n      return <renders.RenderPowerToughness {...props} />\r\n\r\n    case 'oracle':\r\n    case 'oracle_text':\r\n      return <renders.RenderOracleText {...props} />\r\n\r\n    case 'signed':\r\n    case 'altered':\r\n    case 'misprint':\r\n    case 'foil':\r\n      return <renders.RenderBoolean {...props} />\r\n\r\n    case 'amount':\r\n      return <renders.RenderAmount {...props} />\r\n\r\n    case 'total_price':\r\n    case 'price':\r\n      return <renders.RenderPrice {...props} />\r\n\r\n    case 'tag':\r\n      return <renders.RenderTag {...props} />\r\n\r\n    case 'mana_cost':\r\n      return <renders.RenderManaCost {...props} />\r\n\r\n    case 'type_line':\r\n    case 'type':\r\n      return <renders.RenderType {...props} />\r\n\r\n    case 'date':\r\n    case 'date_created':\r\n    case 'date_added':\r\n      return <renders.RenderDate {...props} />\r\n\r\n    case 'flavor':\r\n    case 'flavor_text':\r\n      return <renders.RenderFlavorText {...props} />\r\n\r\n    default:\r\n      return <renders.DefaultRender {...props} />\r\n  }\r\n}\r\n\r\n\r\n/** RENDERS **/\r\nconst renders = {\r\n  DefaultRender: withStyles(useStyles)(memo(\r\n    ({ classes, card, columnName, cardFace }) => {\r\n      let { [columnName]: value } = cardFace !== undefined ? card.card_faces[cardFace] : card\r\n      value = value || card[columnName]\r\n\r\n      return (\r\n        value\r\n          ? <span className={classes.preWrap}>\r\n            {value}\r\n          </span>\r\n          : ''\r\n      )\r\n    }\r\n  )),\r\n\r\n  RenderName: withStyles(useStyles)(memo(\r\n    ({ classes, card, cardFace, renderStyle = 'row' }) => {\r\n      let { name } = cardFace !== undefined ? card.card_faces[cardFace] : card\r\n      const lgDown = useMediaQuery(theme => theme.breakpoints.down('md'))\r\n\r\n      switch (renderStyle) {\r\n        default:\r\n        case 'row':\r\n          name = name\r\n            .replace(/—/g, '-')\r\n            .replace(/Legendary/g, 'Lgd.')\r\n          const arr = name\r\n            .split('//')\r\n            .map(v => v.trim())\r\n          return (\r\n            <Typography noWrap variant='body2' className={classes.widthLimit} title={lgDown ? name : ''}>\r\n              {arr[0]}\r\n              {\r\n                arr.length > 1 &&\r\n                <Hidden mdDown>{' // ' + arr[1]}</Hidden>\r\n              }\r\n            </Typography>\r\n          )\r\n\r\n        case 'content':\r\n          return <b>{name}</b>\r\n      }\r\n    }\r\n  )),\r\n\r\n  RenderOracleText: withStyles(useStyles)(memo(\r\n    ({ classes, card, columnName = 'oracle_text', cardFace }) => {\r\n      let { [columnName]: oracleText } = cardFace !== undefined ? card.card_faces[cardFace] : card\r\n      let align = _.words(oracleText).length > 2 ? 'left' : 'center'\r\n\r\n      if (oracleText) {\r\n        oracleText = [oracleText]\r\n\r\n        /* handle `{X}` symbols */\r\n        oracleText = utils.transformStringArray(\r\n          oracleText,\r\n          /\\{/g,\r\n          /\\}/g,\r\n          match => (\r\n            utils.toManaFont(match, {\r\n              className: classes.mana,\r\n              style: {\r\n                fontSize: '0.68em',\r\n                transform: 'translateY(-1px)'\r\n              }\r\n            })\r\n          )\r\n        )\r\n\r\n        /* handle `(http://...)` paragraphs */\r\n        oracleText = utils.transformStringArray(\r\n          oracleText,\r\n          /\\(http/g,\r\n          /\\)/g,\r\n          match => {\r\n            match = match.slice(1, -1)\r\n            return (\r\n              <span style={{ fontStyle: 'italic', fontSize: '0.88em', lineBreak: 'anywhere' }}>\r\n                {'('}\r\n                <a href={match}>{match}</a>\r\n                {')'}\r\n              </span>\r\n            )\r\n          }\r\n        )\r\n\r\n        /* handle `(...)` paragraphs */\r\n        oracleText = utils.transformStringArray(\r\n          oracleText,\r\n          /\\(/g,\r\n          /\\)/g,\r\n          match => (\r\n            <span style={{ fontStyle: 'italic', fontSize: '0.88em' }}>{match}</span>\r\n          )\r\n        )\r\n      }\r\n\r\n      return (\r\n        oracleText\r\n          ?\r\n          <div align={align} className={classes.preWrap}>\r\n            {\r\n              oracleText.map((text, i) =>\r\n                <Fragment key={i}>\r\n                  {text}\r\n                </Fragment>\r\n              )\r\n            }\r\n          </div>\r\n          : ''\r\n      )\r\n    }\r\n  )),\r\n\r\n  RenderPowerToughness: withStyles(useStyles)(memo(\r\n    ({ classes, card, cardFace }) => {\r\n      const { power, toughness } = cardFace !== undefined ? card.card_faces[cardFace] : card\r\n\r\n      return power && toughness\r\n        ?\r\n        <span align='right' style={{ fontSize: '1rem' }}>\r\n          {`${power}/${toughness}`}\r\n        </span>\r\n        : ''\r\n    }\r\n  )),\r\n\r\n  RenderSet: withStyles(useStyles)(memo(\r\n    ({ classes, card, renderStyle = 'row' }) => {\r\n      const theme = useTheme()\r\n      const { set_data, rarity, foil } = card\r\n      const set = set_data?.parent_set_code ? set_data.parent_set_code : set_data.code\r\n      return (\r\n        <span\r\n          className={`${classes.set} ss ss-fw ss-${rarity} ss-${set}`}\r\n          title={renderStyle === 'content' ? `${set_data.name} - ${_.upperFirst(rarity)}${foil ? ' [F]' : ''}` : null}\r\n          style={{\r\n            ...(rarity === 'common' && theme.palette.type === 'dark' ? { color: '#CCCCCC' } : {})\r\n          }}\r\n        />\r\n      )\r\n    }\r\n  )),\r\n\r\n  RenderBoolean: withStyles(useStyles)(memo(\r\n    ({ classes, card, columnName, renderStyle = 'row' }) => {\r\n      const { [columnName]: value } = card\r\n\r\n      switch (renderStyle) {\r\n        default:\r\n        case 'row':\r\n          return value.toString() === 'true'\r\n            ? <Chip className={classes.chip} label='✔' size='small' />\r\n            : <Chip className={classes.chip} label='✖' size='small' />\r\n\r\n        case 'content':\r\n          return value.toString() === 'true'\r\n            ? <Chip className={classes.chip} label='Yes' size='small' color='secondary' />\r\n            : <Chip className={classes.chip} label='No' size='small' />\r\n      }\r\n    }\r\n  )),\r\n\r\n  RenderCondition: withStyles(useStyles)(memo(\r\n    ({ classes, card }) => {\r\n      const theme = useTheme()\r\n      const cond = card.condition.toUpperCase()\r\n\r\n      const condStyles = (cond) => {\r\n        const toStyle = (rgb) => ({\r\n          backgroundColor: rgb,\r\n          color: theme.palette.getContrastText(rgb),\r\n        })\r\n        const colors = {\r\n          NM: '#ffce10',\r\n          LP: '#ff9f10',\r\n          MP: '#ff9010',\r\n          HP: '#e84c10',\r\n          DAMAGED: '#c41313',\r\n        }\r\n\r\n        return toStyle(colors[cond])\r\n      }\r\n\r\n      return (\r\n        <code className={`${classes.condition}`} style={condStyles(cond)}>\r\n          {cond}\r\n        </code>\r\n      )\r\n    }\r\n  )),\r\n\r\n  RenderAmount: withStyles(useStyles)(memo(\r\n    ({ classes, card }) => (\r\n      <Chip\r\n        className={classes.chip}\r\n        label={'x' + card.amount}\r\n        size='small'\r\n      />\r\n    )\r\n  )),\r\n\r\n  RenderPrice: withStyles(useStyles)(memo(\r\n    ({ classes, card, columnName = 'price' }) => {\r\n      let { [columnName]: price, currency } = card\r\n      price = utils.limitPrecision(price, 2)\r\n      return (\r\n        price > 0\r\n          ? currency === 'usd'\r\n            ? '$' + price\r\n            : price + '€'\r\n          : '-'\r\n      )\r\n    }\r\n  )),\r\n\r\n  RenderTag: withStyles(useStyles)(memo(\r\n    ({ classes, card, columnName = 'tags', renderStyle = 'row' }) => {\r\n      let { [columnName]: tags } = card\r\n\r\n      return (\r\n        tags.length > 0\r\n          ? tags.map((tag, i) =>\r\n            <Chip\r\n              key={i}\r\n              label={tag}\r\n              size='small'\r\n            />\r\n          )\r\n          : ''\r\n      )\r\n    }\r\n  )),\r\n\r\n  RenderManaCost: withStyles(useStyles)(memo(\r\n    ({ classes, card, columnName = 'mana_cost', cardFace, renderStyle = 'row' }) => {\r\n      let { [columnName]: manaCost, cmc } = cardFace !== undefined ? card.card_faces[cardFace] : card\r\n      manaCost = manaCost || []\r\n\r\n      if (!(manaCost instanceof Array))\r\n        if (manaCost.includes('//'))\r\n          manaCost = manaCost.split('//').map(v => v.trim())\r\n        else\r\n          manaCost = [manaCost]\r\n      manaCost = _.compact(manaCost)\r\n\r\n      if (manaCost.length === 0)\r\n        return renderStyle === 'row' ? '-' : ''\r\n\r\n      manaCost = manaCost.map(cost => utils.toManaFont(cost, { className: classes.mana, style: { marginRight: '0.25em', fontSize: '0.85em' } }))\r\n      if (manaCost.length > 1)\r\n        manaCost.splice(1, 0, ' // ') // add a separator between the two mana costs\r\n      return (\r\n        <Typography variant=\"body2\" noWrap>\r\n          {\r\n            cmc\r\n              ? <span title={`${cmc} Cmc`}>\r\n                {manaCost}\r\n              </span>\r\n              : manaCost\r\n          }\r\n        </Typography>\r\n      )\r\n    }\r\n  )),\r\n\r\n  RenderType: withStyles(useStyles)(memo(\r\n    ({ classes, card, columnName = 'type_line', cardFace, renderStyle = 'row' }) => {\r\n      let { [columnName]: typeLine, color_indicator: colorIndicator } = cardFace !== undefined ? card.card_faces[cardFace] : card\r\n      const lgDown = useMediaQuery(theme => theme.breakpoints.down('md'))\r\n\r\n      switch (renderStyle) {\r\n        default:\r\n        case 'row':\r\n          typeLine = typeLine\r\n            .replace(/—/g, '-')\r\n            .replace(/Legendary/g, 'Lgd.')\r\n          const arr = typeLine\r\n            .split('//')\r\n            .map(v => v.trim())\r\n          return (\r\n            <Typography noWrap variant='body2' className={classes.widthLimit} title={lgDown ? typeLine : ''}>\r\n              {arr[0]}\r\n              {\r\n                arr.length > 1 &&\r\n                <Hidden mdDown>{' // ' + arr[1]}</Hidden>\r\n              }\r\n            </Typography>\r\n          )\r\n\r\n        case 'content':\r\n          typeLine = typeLine.replace(/—/g, '-')\r\n          colorIndicator = colorIndicator && utils.toColorIndicator(colorIndicator, { style: { marginRight: '0.25em', fontSize: '0.9em' } })\r\n          return (\r\n            colorIndicator\r\n              ? <>{colorIndicator}{typeLine}</>\r\n              : typeLine\r\n          )\r\n      }\r\n    }\r\n  )),\r\n\r\n  RenderDate: withStyles(useStyles)(memo(\r\n    ({ classes, card, columnName = 'date_added' }) => {\r\n      const date = new Date(card[columnName])\r\n      let [year, month, day] = [date.getFullYear(), date.getMonth() + 1, date.getDate()]\r\n\r\n      return (\r\n        [utils.addLeadingZero(day), utils.addLeadingZero(month), year].join('/')\r\n      )\r\n    }\r\n  )),\r\n\r\n  RenderFlavorText: withStyles(useStyles)(memo(\r\n    ({ classes, card, cardFace }) => {\r\n      const { lang } = card\r\n      const { flavor_text } = cardFace !== undefined ? card.card_faces[cardFace] : card\r\n      let align = _.words(flavor_text).length > 2 ? 'left' : 'center'\r\n\r\n      return (\r\n        flavor_text\r\n          ? <div align={align} lang={lang} className={clsx(classes.flavorText)}>\r\n            {flavor_text}\r\n          </div>\r\n          : ''\r\n      )\r\n    }\r\n  )),\r\n}\r\n\r\n/** EXPORTS **/\r\nexport default RenderCell\r\n\r\nexport const {\r\n  DefaultRender,\r\n  RenderName,\r\n  RenderOracleText,\r\n  RenderPowerToughness,\r\n  RenderSet,\r\n  RenderBoolean,\r\n  RenderAmount,\r\n  RenderPrice,\r\n  RenderTag,\r\n  RenderManaCost,\r\n  RenderType,\r\n  RenderDate,\r\n  RenderFlavorText,\r\n} = renders\r\n","// import { useEffect } from 'react'\r\nimport { Box, Grid, Typography } from '@material-ui/core'\r\n\r\nimport RenderCell from '@/CardRenders'\r\n\r\n\r\nconst FieldsPanel = ({\r\n  /** VARS **/\r\n  card,\r\n  renderStyle = 'content',\r\n  ...props\r\n}) => {\r\n  const {\r\n    ...rest\r\n  } = props\r\n\r\n  const [name, manaCost, typeLine, set, oracleText, flavorText, artist, collectorNumber, powerToughness] = [\r\n    card && RenderCell({ card, columnName: 'name', renderStyle, ...rest }),\r\n    card && RenderCell({ card, columnName: 'mana_cost', renderStyle, ...rest }),\r\n    card && RenderCell({ card, columnName: 'type_line', renderStyle, ...rest }),\r\n    card && RenderCell({ card, columnName: 'set', renderStyle, ...rest }),\r\n    card && RenderCell({ card, columnName: 'oracle_text', renderStyle, ...rest }),\r\n    card && RenderCell({ card, columnName: 'flavor_text', renderStyle, ...rest }),\r\n    card && RenderCell({ card, columnName: 'artist', renderStyle, ...rest }),\r\n    card && RenderCell({ card, columnName: 'collector_number', renderStyle, ...rest }),\r\n    card && RenderCell({ card, columnName: 'power_toughness', renderStyle, ...rest }),\r\n  ]\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <Grid item container justifyContent='space-between' direction='column' style={{ height: '100%' }}>\r\n\r\n\r\n      <Grid item container justifyContent='center' spacing={2}>\r\n        <Grid item name='name'>\r\n          {name}\r\n        </Grid>\r\n        {manaCost && <Grid item name='mana-cost'>\r\n          {manaCost}\r\n        </Grid>}\r\n      </Grid>\r\n      <Grid item container component={Box} justifyContent='center' spacing={1} flexGrow={1}>\r\n        <Grid item name='type-line'>\r\n          {typeLine}\r\n        </Grid>\r\n        <Grid item name='set'>\r\n          {set}\r\n        </Grid>\r\n      </Grid>\r\n\r\n\r\n      {oracleText && <Grid item name='oracle-text' component={Box} paddingTop={1} flexGrow={1}>\r\n        {oracleText}\r\n      </Grid>}\r\n      {flavorText && <Grid item name='flavor-text' component={Box} align='left' flexGrow={1} paddingTop='0.45em'>\r\n        {flavorText}\r\n      </Grid>}\r\n\r\n\r\n      <Grid item container justifyContent='space-between' alignItems='baseline' wrap='nowrap' component={Typography} variant='overline' style={{ marginTop: '0.3em' }}>\r\n        <Grid item container spacing={1}>\r\n          <Grid item name='collector-number'>\r\n            #{collectorNumber}\r\n          </Grid>\r\n          <Grid item name='artist'>\r\n            <span className='ms ms-shadow ms-artist-nib' />{artist}\r\n          </Grid>\r\n        </Grid>\r\n        {powerToughness && <Grid item name='power-toughness'>\r\n          {powerToughness}\r\n        </Grid>}\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default FieldsPanel","\r\nconst useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  // const mainSidesPadding = theme.spacing(10)\r\n\r\n  return {\r\n    root: {\r\n      // position: 'relative',\r\n    },\r\n    accordion: {\r\n      // backgroundColor: theme.palette.background.secondary,\r\n      backgroundColor: theme.palette.type === 'dark' ? 'rgba(255,255,255,0.12)' : 'rgba(0,0,0,0.12)',\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n    'accordion-expanded': {\r\n      paddingBottom: theme.spacing(1),\r\n    },\r\n    listing: {\r\n      margin: 0,\r\n      '& > li': {\r\n        margin: '8px 1.25em 8px 0',\r\n      },\r\n      '& > li:first-child': {\r\n        paddingTop: 0,\r\n      },\r\n      '& > li:last-child': {\r\n        paddingBottom: 0,\r\n      },\r\n    },\r\n    editButtonContainer: {\r\n      // position: 'absolute',\r\n      // top: 0,\r\n      // right: 0,\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { Fragment, useState, useEffect } from 'react'\r\nimport { Tooltip, Chip, useMediaQuery, Accordion, AccordionDetails, AccordionSummary, InputAdornment, Divider, Typography, Paper, Modal, CircularProgress, Grid, IconButton, Button, Fade, Zoom, FormControlLabel, TextField, Checkbox, MenuItem } from '@material-ui/core'\r\nimport { Autocomplete } from '@material-ui/lab'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport { Delete as DeleteIcon, ExpandMore as ExpandMoreIcon } from '@material-ui/icons'\r\nimport { useSnackbar } from 'notistack'\r\nimport { connect } from 'react-redux'\r\nimport lodash from 'lodash'\r\n\r\nimport { updateCollection, addFilters, setEditEnabled_CardInfo } from '@/Logic/redux'\r\nimport { getCardPrints, MagicdexApi } from '@/Api'\r\nimport Config from '@/Config'\r\nimport RenderCell from '@/CardRenders'\r\nimport useStyles from './styles'\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  tagFilters: state.actions.app.collection.filters.tag || [],\r\n  editEnabled: state.actions.app.collection.cardInfo.editEnabled,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    updateCollection: (cards) => dispatch(updateCollection({ cards })),\r\n    addFilters: (filters) => dispatch(addFilters({ filters })),\r\n    setEditEnabled: (enabled) => dispatch(setEditEnabled_CardInfo({ enabled })),\r\n  }\r\n})\r\n\r\n/** UTILS **/\r\nconst clampInt = (value, min, max) => Math.max(Math.min(value, max), min)\r\n\r\n\r\nconst EditPanel = ({\r\n  /** VARS **/\r\n  card,\r\n  updateHeight: _updateHeight,\r\n  onMenuHover,\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n    dispatch,\r\n    tagFilters,\r\n    editEnabled,\r\n  } = props\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  const smDown = useMediaQuery(theme => theme.breakpoints.down('sm'))\r\n  const updateHeight = () => setTimeout(() => _updateHeight(), 150)\r\n  const [modalOpen, setModalOpen] = useState(false)\r\n\r\n  const [newCard, setNewCard] = useState({})\r\n  const [printsSet, setPrintsSet] = useState([])\r\n  const [printsLang, setPrintsLang] = useState([])\r\n  const [rulings, setRulings] = useState(undefined)\r\n\r\n\r\n  /** FUNCTIONS **/\r\n  const resetNewCard = () => {\r\n    setPrintsSet([])\r\n    setPrintsLang([])\r\n    onMenuHover(null)\r\n    setModalOpen(false)\r\n    dispatch.setEditEnabled(false)\r\n\r\n    setNewCard({\r\n      id: card.id,\r\n      tag: card.tag,\r\n      amount: card.amount,\r\n      foil: card.foil,\r\n      condition: card.condition,\r\n      signed: card.signed,\r\n      altered: card.altered,\r\n      misprint: card.misprint,\r\n      set: card.set,\r\n      collector_number: card.collector_number,\r\n      lang: card.lang,\r\n    })\r\n\r\n    Promise\r\n      .all([\r\n        getCardPrints(card, 'set'),\r\n        getCardPrints(card, 'lang'),\r\n      ])\r\n      .then(([set, lang]) => {\r\n        setPrintsSet(set)\r\n        setPrintsLang(lang)\r\n      })\r\n  }\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    resetNewCard()\r\n\r\n    fetch(card.rulings_uri)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setRulings(lodash\r\n          .chain(data['data'])\r\n          .reverse()\r\n          .map(item => Object.assign(item, { published_at: new Date(item.published_at) }))\r\n          .sortBy('published_at')\r\n          .value()\r\n        )\r\n      })\r\n  }, [card])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleChipClick = (tag) => (e) => {\r\n    if (Array.isArray(tagFilters)) {\r\n      dispatch.addFilters({\r\n        tag: tagFilters.includes(tag)\r\n          ? tagFilters.filter(item => item !== tag)\r\n          : tagFilters.concat(tag)\r\n      })\r\n    }\r\n    else\r\n      dispatch.addFilters({\r\n        tag: [tag]\r\n      })\r\n  }\r\n\r\n  const handleEditButtonClick = (e) => {\r\n    if (editEnabled) {\r\n      // save changes\r\n      let cardClone = Object.assign(\r\n        lodash.cloneDeep(card),\r\n        newCard\r\n      )\r\n\r\n      if (Config.MODIFY_DB_ALLOWED)\r\n        MagicdexApi.updateCards([cardClone])\r\n          .then(res => {\r\n            dispatch.updateCollection(res)\r\n            enqueueSnackbar(`Updated ${card.name} [${card.set.toUpperCase()}]`, { variant: 'info' })\r\n          })\r\n          .catch(error => {\r\n            enqueueSnackbar(`Error updating ${card.name} [${card.set.toUpperCase()}]`, { variant: 'error' })\r\n            console.error({ error })\r\n          })\r\n      else {\r\n        dispatch.updateCollection([{ action: 'UPDATED', card: cardClone }])\r\n        enqueueSnackbar(`Updated ${card.name} [${card.set.toUpperCase()}]`, { variant: 'info' })\r\n      }\r\n    }\r\n\r\n    onMenuHover(null)\r\n    dispatch.setEditEnabled(!editEnabled)\r\n    updateHeight()\r\n  }\r\n\r\n  const handleCancelButtonClick = (e) => {\r\n    resetNewCard()\r\n    onMenuHover(null)\r\n    dispatch.setEditEnabled(false)\r\n    updateHeight()\r\n  }\r\n\r\n  const handleDeleteButtonClick = (confirm) => (e) => {\r\n    if (confirm) {\r\n      const clonedCard = { _id: card._id, amount: 0 }\r\n\r\n      if (Config.MODIFY_DB_ALLOWED)\r\n        MagicdexApi.updateCards([clonedCard])\r\n          .then(res => {\r\n            dispatch.updateCollection(res)\r\n            enqueueSnackbar(`Deleted ${card.name} [${card.set.toUpperCase()}]`, { variant: 'success' })\r\n          })\r\n          .catch(error => {\r\n            enqueueSnackbar(`Failed to delete ${card.name} [${card.set.toUpperCase()}]`, { variant: 'error' })\r\n          })\r\n      else {\r\n        dispatch.updateCollection(clonedCard.map(card => ({ action: 'UPDATED', card })))\r\n        enqueueSnackbar(`Deleted ${card.name} [${card.set.toUpperCase()}]`, { variant: 'success' })\r\n      }\r\n    }\r\n    else\r\n      setModalOpen(true)\r\n  }\r\n\r\n  const handleCardInfoChange = (field, value) => {\r\n    switch (field) {\r\n      case 'amount':\r\n        value = clampInt(value, 1, 999999)\r\n        setNewCard(card => ({ ...card, amount: value }))\r\n        onMenuHover({ ...card, ...newCard, amount: value })\r\n        break\r\n\r\n      case 'foil':\r\n        setNewCard(card => ({ ...card, foil: value }))\r\n        onMenuHover({ ...card, ...newCard, foil: value })\r\n        break\r\n\r\n      case 'condition':\r\n      case 'signed':\r\n      case 'altered':\r\n      case 'misprint':\r\n        setNewCard(card => ({ ...card, [field]: value }))\r\n        break\r\n\r\n      case 'tag':\r\n        value = lodash.chain(value)\r\n          .map(v => v.trim())\r\n          .compact()\r\n          .uniqBy(v => v.toLowerCase())\r\n          .value()\r\n        setNewCard(card => ({ ...card, tag: value }))\r\n        break\r\n\r\n      case 'set':\r\n        const [selectedSet, selectedCollectorNumber] = value.split(':')\r\n        const { foil, ...rest } = printsSet.find(card => card.set === selectedSet && card.collector_number === selectedCollectorNumber)\r\n        setNewCard(card => ({\r\n          ...card,\r\n          ...rest,\r\n        }))\r\n\r\n        // onMenuHover(null)\r\n        setPrintsLang([])\r\n        getCardPrints(rest, 'lang')\r\n          .then(setPrintsLang)\r\n        break\r\n\r\n      case 'lang':\r\n        const { foil: _, ..._rest } = printsLang.find(item => item.lang === value)\r\n        setNewCard(card => ({\r\n          ...card,\r\n          ..._rest,\r\n        }))\r\n        break\r\n\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <>\r\n      <Grid item container xs={12} spacing={1} justifyContent='center' alignItems='center' className={classes.root}>\r\n\r\n        <Grid item container xs={12} spacing={1} direction='row-reverse' justifyContent='flex-start' alignItems='center' className={classes.editButtonContainer}>\r\n          <Grid item>\r\n            <Button size='small' variant='contained' color='primary' onClick={handleEditButtonClick}>\r\n              {editEnabled ? 'Save' : 'Edit'}\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Zoom in={editEnabled} style={{ transformOrigin: 'center right' }}>\r\n              <Button size='small' variant='outlined' onClick={handleCancelButtonClick}>\r\n                cancel\r\n              </Button>\r\n            </Zoom>\r\n          </Grid>\r\n          <Grid item>\r\n            <Zoom in={editEnabled} style={{ transformOrigin: 'center right' }}>\r\n              <IconButton title='Delete' size='small' onClick={handleDeleteButtonClick(false)}>\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </Zoom>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {\r\n          editEnabled\r\n            ? (\r\n              <Grid item container justifyContent='center' alignItems='flex-start' spacing={1}>\r\n                <Grid item container direction='column' justifyContent='center' alignItems='flex-start' style={{ maxWidth: 'min-content' }}>\r\n                  <Grid item>\r\n                    <TextField\r\n                      size='small'\r\n                      variant='outlined'\r\n                      type='number'\r\n                      label='Amount'\r\n                      color='secondary'\r\n                      value={newCard.amount}\r\n                      inputProps={{\r\n                        inputMode: 'numeric',\r\n                        min: 1,\r\n                      }}\r\n                      onChange={e => handleCardInfoChange('amount', e.target.value)}\r\n                      style={{ marginLeft: 0 }}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item style={{ width: '9em', paddingTop: 8 }}>\r\n                    <TextField select\r\n                      color='secondary'\r\n                      variant='outlined'\r\n                      margin='dense'\r\n                      size='small'\r\n                      align='left'\r\n                      label='Condition'\r\n                      value={newCard.condition || ''}\r\n                      onChange={e => handleCardInfoChange('condition', e.target.value)}\r\n                      style={{ marginLeft: 0 }}\r\n                    >\r\n                      {\r\n                        [['NM', 'NM'], ['LP', 'LP'], ['MP', 'MP'], ['HP', 'HP'], ['DAMAGED', 'Damaged']]\r\n                          .map(cond =>\r\n                            <MenuItem key={cond[0]} value={cond[0]}>{cond[1]}</MenuItem>)\r\n                      }\r\n                    </TextField>\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <FormControlLabel\r\n                      label='Foil'\r\n                      control={\r\n                        <Checkbox\r\n                          checked={newCard.foil}\r\n                          onChange={e => handleCardInfoChange('foil', e.target.checked)}\r\n                        />\r\n                      }\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <FormControlLabel\r\n                      label='Signed'\r\n                      control={\r\n                        <Checkbox\r\n                          checked={newCard.signed}\r\n                          onChange={e => handleCardInfoChange('signed', e.target.checked)}\r\n                        />\r\n                      }\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <FormControlLabel\r\n                      label='Altered'\r\n                      control={\r\n                        <Checkbox\r\n                          checked={newCard.altered}\r\n                          onChange={e => handleCardInfoChange('altered', e.target.checked)}\r\n                        />\r\n                      }\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <FormControlLabel\r\n                      label='Misprint'\r\n                      control={\r\n                        <Checkbox\r\n                          checked={newCard.misprint}\r\n                          onChange={e => handleCardInfoChange('misprint', e.target.checked)}\r\n                        />\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid item container direction='column' spacing={1} xs={12} sm={10} md>\r\n                  <Grid item container wrap='nowrap' spacing={1}>\r\n                    <Grid item xs style={{ width: '1px' }}>\r\n                      <TextField select\r\n                        color='secondary'\r\n                        variant='outlined'\r\n                        margin='dense'\r\n                        size='small'\r\n                        align='left'\r\n                        disabled={printsSet.length <= 1}\r\n                        label='Set'\r\n                        value={(printsSet || []).length === 0 ? '' : `${newCard.set}:${newCard.collector_number}`}\r\n                        onChange={e => handleCardInfoChange('set', e.target.value)}\r\n                        SelectProps={{\r\n                          onClose: e => onMenuHover({ ...card, ...newCard })\r\n                        }}\r\n                        InputProps={printsSet.length === 0\r\n                          ? {\r\n                            startAdornment: (\r\n                              <InputAdornment position='start'>\r\n                                <CircularProgress size={20} />\r\n                              </InputAdornment>\r\n                            )\r\n                          }\r\n                          : {}\r\n                        }\r\n                      >\r\n                        {\r\n                          (printsSet || [])\r\n                            .map(item =>\r\n                              <MenuItem\r\n                                key={`${item.set}:${item.collector_number}`}\r\n                                value={`${item.set}:${item.collector_number}`}\r\n                                onMouseEnter={e => onMenuHover({ ...item, foil: newCard.foil })}\r\n                                onMouseLeave={e => onMenuHover({ ...card, ...newCard })}\r\n                              >\r\n                                {`${item.set_name} - #${item.collector_number}`}\r\n                              </MenuItem>\r\n                            )\r\n                        }\r\n                      </TextField>\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                      <TextField select\r\n                        color='secondary'\r\n                        variant='outlined'\r\n                        margin='dense'\r\n                        size='small'\r\n                        align='left'\r\n                        label='Language'\r\n                        disabled={printsLang.length <= 1}\r\n                        value={(printsLang || []).length === 0 ? '' : newCard.lang}\r\n                        style={{ width: '6em' }}\r\n                        onChange={e => handleCardInfoChange('lang', e.target.value)}\r\n                        SelectProps={{\r\n                          onClose: e => onMenuHover({ ...card, ...newCard })\r\n                        }}\r\n                        InputProps={printsLang.length === 0\r\n                          ? {\r\n                            startAdornment: (\r\n                              <InputAdornment position='start'>\r\n                                <CircularProgress size={20} />\r\n                              </InputAdornment>\r\n                            )\r\n                          }\r\n                          : {}\r\n                        }\r\n                      >\r\n                        {\r\n                          (printsLang || [])\r\n                            .map(item =>\r\n                              <MenuItem\r\n                                key={item.lang}\r\n                                value={item.lang}\r\n                                onMouseEnter={e => onMenuHover({ ...item, foil: newCard.foil })}\r\n                                onMouseLeave={e => onMenuHover({ ...card, ...newCard })}\r\n                              >\r\n                                {item.lang}\r\n                              </MenuItem>\r\n                            )\r\n                        }\r\n                      </TextField>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid item style={{ marginRight: 11 }}>\r\n                    <Autocomplete multiple freeSolo disableClearable //autoSelect\r\n                      limitTags={4}\r\n                      label='Tags'\r\n                      variant='outlined'\r\n                      margin='dense'\r\n                      size='small'\r\n                      color='secondary'\r\n                      options={[]}\r\n                      value={newCard.tag}\r\n                      onChange={(e, newValue) => { handleCardInfoChange('tag', newValue) }}\r\n                      onInputChange={(e, newInputValue) => {\r\n                        if (newInputValue?.match(/[;,]/g)) {\r\n                          const values = lodash\r\n                            .chain(newInputValue)\r\n                            .split(/[;,]/)\r\n                            .map(v => v.trim())\r\n                            .compact()\r\n                            .uniqBy(v => v.toLowerCase())\r\n                            .value()\r\n                          if (values.length > 0)\r\n                            handleCardInfoChange('tag', newCard.tag.concat(values))\r\n                          else\r\n                            handleCardInfoChange('tag', newCard.tag)\r\n                        }\r\n                      }}\r\n                      renderInput={(props) => (\r\n                        <TextField multiline\r\n                          {...props}\r\n                          color='secondary'\r\n                          variant='outlined'\r\n                          label='Tags'\r\n                          helperText={\r\n                            ['Tags are seperated by ', <code>{'Enter'}</code>, ' or ', <code>{'[;,]'}</code>]\r\n                              .map((item, i) =>\r\n                                <Fragment key={i}>{item}</Fragment>\r\n                              )\r\n                          }\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            )\r\n            : (\r\n              <Grid item container spacing={2}>\r\n                <Grid item xs={4} component='table' style={{ borderSpacing: 8, height: 'fit-content' }}>\r\n                  <tbody>\r\n                    {\r\n                      ['amount', 'condition', '', 'foil', 'signed', 'altered', 'misprint']\r\n                        .map((columnName, i) =>\r\n                          <tr key={i} style={{ verticalAlign: columnName === 'condition' ? 'baseline' : 'middle' }}>\r\n                            {\r\n                              columnName\r\n                                ? <>\r\n                                  <td style={{ width: 0 }}>\r\n                                    <Typography>\r\n                                      {lodash.upperFirst(columnName)}\r\n                                    </Typography>\r\n                                  </td>\r\n                                  <td align='center'>\r\n                                    <RenderCell\r\n                                      card={card}\r\n                                      columnName={columnName}\r\n                                      renderStyle='content'\r\n                                    />\r\n                                  </td>\r\n                                </>\r\n                                : <td colSpan={2}>\r\n                                  <Divider />\r\n                                </td>\r\n                            }\r\n                          </tr>\r\n                        )\r\n                    }\r\n                  </tbody>\r\n                </Grid>\r\n\r\n                <Grid item container xs justifyContent='flex-start' alignItems='flex-start'>\r\n                  <Grid item container xs={12} spacing={1}>\r\n                    <Grid item xs={12} component={Typography} variant='h6' align='left'>\r\n                      <Tooltip arrow\r\n                        placement='right'\r\n                        enterDelay={300}\r\n                        style={{ cursor: 'help' }}\r\n                        title={card.tag.length > 0 ? <>Click a tag to search for <br /> more cards with that tag</> : ''}\r\n                      >\r\n                        <span>Tags</span>\r\n                      </Tooltip>\r\n                    </Grid>\r\n                    <Grid item container spacing={1} style={{ paddingLeft: 16 }} >\r\n                      {\r\n                        card.tag.length > 0\r\n                          ? card.tag.map((tag, i) =>\r\n                            <Grid item key={i}>\r\n                              <Chip\r\n                                label={tag}\r\n                                color={Array.isArray(tagFilters) && tagFilters.includes(tag) ? 'secondary' : 'default'}\r\n                                onClick={handleChipClick(tag)}\r\n                                size='small'\r\n                                variant='outlined'\r\n                              />\r\n                            </Grid>\r\n                          )\r\n                          : <Typography style={{ fontFamily: 'Determination Mono' }}>\r\n                            * But nobody came.\r\n                          </Typography>\r\n                      }\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                {\r\n                  rulings?.length > 0 &&\r\n                  <>\r\n                    <Grid item xs={12}>\r\n                      <Divider />\r\n                    </Grid>\r\n                    <Grid item container style={{ paddingTop: 12 }}>\r\n                      <Accordion\r\n                        className={classes.accordion}\r\n                        classes={{ expanded: classes['accordion-expanded'] }}\r\n                        TransitionProps={{\r\n                          onEntering: updateHeight,\r\n                          onEntered: updateHeight,\r\n                          onExiting: updateHeight,\r\n                          onExited: updateHeight,\r\n                        }}\r\n                      >\r\n                        <AccordionSummary expandIcon={<ExpandMoreIcon />} >\r\n                          <Typography variant='h6'>\r\n                            {smDown ? 'Rulings' : 'Additional Rulings'}\r\n                          </Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails style={{ padding: 0 }}>\r\n                          <ul className={classes.listing}>\r\n                            {\r\n                              rulings.map((rule, i) =>\r\n                                <li key={i}>\r\n                                  <RenderCell\r\n                                    card={{ oracle_text: rule.comment }}\r\n                                    columnName='oracle_text'\r\n                                  />\r\n                                </li>\r\n                              )\r\n                            }\r\n                          </ul>\r\n                        </AccordionDetails>\r\n                      </Accordion>\r\n                    </Grid>\r\n                  </>\r\n                }\r\n              </Grid>\r\n            )\r\n        }\r\n      </Grid>\r\n\r\n      <Grid container spacing={5} justifyContent='center' alignItems='center'\r\n        component={Modal} closeAfterTransition\r\n        onClose={e => setModalOpen(false)}\r\n        open={modalOpen}\r\n        BackdropProps={{ timeout: 500 }}\r\n      >\r\n        <Grid item component={Fade} in={modalOpen}>\r\n          <Paper>\r\n            <Grid container justifyContent='center' alignItems='center' spacing={2}>\r\n              <Grid item xs={12} align='center'>\r\n                <Typography noWrap variant='h5' align='left'>\r\n                  Confirm Action\r\n                </Typography>\r\n                <Typography noWrap variant='body1' align='left'>\r\n                  Are you sure you want to delete this card?\r\n                </Typography>\r\n                <Typography noWrap variant='body2' align='left' color='error'>\r\n                  This action is irreversible.\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item container justifyContent='flex-end' xs={12} spacing={1}>\r\n                <Grid item>\r\n                  <Button variant='outlined' onClick={e => setModalOpen(false)}>\r\n                    Nop\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button variant='contained' color='secondary' onClick={handleDeleteButtonClick(true)}>\r\n                    Yep\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    connect(mapStateToProps, mapDispatchToProps)(\r\n      EditPanel\r\n    )\r\n  )","\r\nconst useStyles = (theme) => {\r\n  const smDown = theme.breakpoints.down('sm')\r\n\r\n  return {\r\n    baseContainer: {\r\n      position: 'relative',\r\n    },\r\n    root: {\r\n      // width: '100%',\r\n      backgroundColor: theme.palette.background.secondary,\r\n      position: 'relative',\r\n      marginTop: theme.spacing(1),\r\n      padding: `${theme.spacing(5)}px ${theme.spacing(5)}px ${theme.spacing(5)}px ${theme.spacing(4)}px`,\r\n      // display: 'flex',\r\n      // flexWrap: 'wrap',\r\n      // alignItems: 'baseline',\r\n      // flexDirection: 'column',\r\n      // justifyContent: 'center',\r\n      // alignContent: 'center',\r\n    },\r\n    topArrow: {\r\n      content: '\"\"',\r\n      zIndex: 1,\r\n      top: -1,\r\n      width: 0,\r\n      height: 0,\r\n      position: 'absolute',\r\n      backgroundColor: 'unset',\r\n      border: 'solid transparent',\r\n      borderWidth: '1.5rem 1.75rem 0rem 1.75rem',\r\n      left: `calc(50% - (1.75rem / 2))`,\r\n      transition: 'all 0.3s ease',\r\n    },\r\n    image: {\r\n      marginRight: -theme.spacing(1),\r\n      // width: 'fit-content',\r\n    },\r\n    content: {\r\n      transition: 'all 0.3s ease',\r\n      padding: theme.spacing(2),\r\n      marginTop: 0,\r\n      maxWidth: '42.5vw',\r\n      [smDown]: {\r\n        maxWidth: '70vw',\r\n      },\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { useState, useEffect, useRef, useImperativeHandle } from 'react'\r\nimport { IconButton, Grid, Paper, Hidden, Divider, useMediaQuery } from '@material-ui/core'\r\nimport { ChevronRight as ChevronRightIcon, ChevronLeft as ChevronLeftIcon } from '@material-ui/icons'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport { connect } from 'react-redux'\r\nimport SwipeableViews from 'react-swipeable-views'\r\n\r\nimport { setViewIndex_CardInfo } from '@/Logic/redux'\r\nimport { CardImage } from '@/Components'\r\nimport { addCardPrice, addLayoutKeywords } from '@/Providers'\r\nimport FieldsPanel from './FieldsPanel'\r\nimport EditPanel from './EditPanel'\r\nimport useStyles from './styles'\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  viewIndex: state.actions.app.collection.cardInfo.viewIndex,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    setViewIndex: (index) => dispatch(setViewIndex_CardInfo({ index })),\r\n  }\r\n})\r\n\r\n\r\nconst CardInfo = ({\r\n  /** VARS **/\r\n  refs,\r\n  card,\r\n  rootComponent,\r\n  rootProps,\r\n  topArrowProps,\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n    dispatch,\r\n    viewIndex,\r\n  } = props\r\n  const swipeableViewsRef = useRef()\r\n  const [menuHoverItem, setMenuHoverItem] = useState()\r\n\r\n  // const xsDown = useMediaQuery(theme => theme.breakpoints.down('xm'))\r\n  const smDown = useMediaQuery(theme => theme.breakpoints.down('sm'))\r\n  const mdDown = useMediaQuery(theme => theme.breakpoints.down('md'))\r\n  // const lgDown = useMediaQuery(theme => theme.breakpoints.down('lg'))\r\n  // const xlDown = useMediaQuery(theme => theme.breakpoints.down('xl'))\r\n\r\n\r\n  /** EFFECTS **/\r\n  useImperativeHandle(refs, () => ({\r\n    updateHeight: swipeableViewsRef.current?.updateHeight || (() => { }),\r\n  }))\r\n\r\n  useEffect(() => {\r\n    //onMount\r\n    dispatch.setViewIndex(0)\r\n  }, [])\r\n\r\n  // useEffect(() => {\r\n  //   // onMount\r\n  //   const params = new URLSearchParams(location.search)\r\n  //   params.set('card_id', card._id)\r\n  //   history.push({\r\n  //     search: params.toString()\r\n  //   })\r\n\r\n  //   // onUnmount\r\n  //   return () => {\r\n  //     const params = new URLSearchParams(location.search)\r\n  //     params.delete('card_id')\r\n  //     history.push({\r\n  //       search: params.toString()\r\n  //     })\r\n  //   }\r\n  // }, [card])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleViewIndexChange = value => e => {\r\n    dispatch.setViewIndex(value)\r\n  }\r\n\r\n  const onMenuHover = (hoverItem) => {\r\n    if (hoverItem) {\r\n      // hoverItem.foil = card.foil\r\n      hoverItem = addCardPrice(hoverItem, card.currency)\r\n      hoverItem = addLayoutKeywords(hoverItem)\r\n      setMenuHoverItem(hoverItem)\r\n    }\r\n    else\r\n      setMenuHoverItem(null)\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <div className={classes.baseContainer}>\r\n      <div\r\n        className={classes.topArrow}\r\n        {...topArrowProps}\r\n      />\r\n\r\n      <Grid container\r\n        justifyContent='center'\r\n        alignItems={smDown ? 'center' : 'flex-start'}\r\n        direction={smDown ? 'column' : 'row'}\r\n        component={rootComponent}\r\n        wrap='nowrap'\r\n        className={classes.root}\r\n        {...rootProps}\r\n      >\r\n\r\n        {/* CARD PREVIEW */}\r\n        <Hidden smDown>\r\n          <Grid item className={classes.image}>\r\n            <CardImage showPrice tiltEnabled transform3dEnabled\r\n              card={menuHoverItem || card}\r\n            />\r\n          </Grid>\r\n        </Hidden>\r\n        <Hidden mdUp>\r\n          <Grid item style={{ marginBottom: 16 }}>\r\n            <CardImage showPrice tiltEnabled transform3dEnabled\r\n              card={menuHoverItem || card}\r\n            />\r\n          </Grid>\r\n        </Hidden>\r\n\r\n        <Grid item xs={12} md={9} lg={8} xl={7}\r\n          align='center'\r\n          component={Paper}\r\n          elevation={3}\r\n          className={classes.content}\r\n        >\r\n          <SwipeableViews ignoreNativeScroll\r\n            ref={swipeableViewsRef}\r\n            animateHeight\r\n            index={viewIndex}\r\n            onChangeIndex={handleViewIndexChange}\r\n            slideStyle={{ overflow: 'hidden' }}\r\n          >\r\n\r\n            {/* VIEW 1 */}\r\n            <Grid container justifyContent='center' alignItems='center' wrap='nowrap' style={{ padding: 1.5 }}>\r\n              <Grid item xs={12}>\r\n                {\r\n                  card.is_transform || card.is_split || card.is_flip\r\n                    ?\r\n                    <Grid item container justifyContent='center' alignItems='stretch' spacing={mdDown ? 0 : 2}>\r\n                      {/* Front Face */}\r\n                      <Grid item container justifyContent='center' xs={12} sm={11} lg>\r\n                        <FieldsPanel\r\n                          card={card}\r\n                          cardFace={0}\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Hidden lgUp>\r\n                        <Grid container wrap='nowrap' alignItems='center' style={{ alignSelf: 'center' }}>\r\n                          <Grid item xs component={Divider} style={{ marginBottom: 8 }} />\r\n                        </Grid>\r\n                      </Hidden>\r\n                      <Hidden mdDown>\r\n                        <Divider flexItem orientation='vertical' />\r\n                      </Hidden>\r\n\r\n                      {/* Back Face */}\r\n                      <Grid item container justifyContent='center' xs={12} sm={11} lg>\r\n                        <FieldsPanel\r\n                          card={card}\r\n                          cardFace={1}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n\r\n                    : /* Single faced card */\r\n                    <Grid item container justifyContent='center' xs={12} md={10} lg={9} xl={8}>\r\n                      <FieldsPanel\r\n                        card={card}\r\n                      />\r\n                    </Grid>\r\n                }\r\n              </Grid>\r\n\r\n              <Grid item style={{ alignSelf: 'flex-start' }}>\r\n                <IconButton size='small' onClick={handleViewIndexChange(1)}>\r\n                  <ChevronRightIcon />\r\n                </IconButton>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* VIEW 2 */}\r\n            <Grid container justifyContent='center' alignItems='center' wrap='nowrap' style={{ padding: 1.5 }}>\r\n              <Grid item style={{ alignSelf: 'flex-start' }}>\r\n                <IconButton size='small' onClick={handleViewIndexChange(0)}>\r\n                  <ChevronLeftIcon />\r\n                </IconButton>\r\n              </Grid>\r\n\r\n              <Grid item container xs>\r\n                <EditPanel\r\n                  card={card}\r\n                  updateHeight={swipeableViewsRef.current?.updateHeight}\r\n                  onMenuHover={onMenuHover}\r\n                />\r\n              </Grid>\r\n\r\n            </Grid>\r\n\r\n          </SwipeableViews>\r\n        </Grid>\r\n\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    connect(mapStateToProps, mapDispatchToProps)(\r\n      CardInfo\r\n    )\r\n  )\r\n","import grey from \"@material-ui/core/colors/grey\"\r\n\r\n\r\nconst useStyles = (theme) => {\r\n  const floatingBackgroundColor = theme.palette.type === 'dark' ? grey[700] : grey['A100']\r\n\r\n  return {\r\n    root: {\r\n      '& > *': {\r\n        borderBottom: 'unset',\r\n      },\r\n    },\r\n    content: {\r\n      position: 'relative',\r\n    },\r\n    floating: {\r\n      zIndex: 2,\r\n      position: 'absolute',\r\n      top: theme.spacing(1),\r\n      left: theme.spacing(9),\r\n      maxWidth: theme.spacing(25),\r\n      width: 'max-content',\r\n      padding: `${theme.spacing(0.5)}px ${theme.spacing(1.25)}px ${theme.spacing(0.5)}px ${theme.spacing(1.25)}px`,\r\n      backgroundColor: floatingBackgroundColor,\r\n      color: theme.palette.getContrastText(floatingBackgroundColor),\r\n    },\r\n    checkboxCell: {\r\n      // borderLeft: `1px solid ${theme.palette.divider}`,\r\n      // paddingRight: 0,\r\n    },\r\n    checkbox: {\r\n      padding: '5px 0 5px 8px',\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { Fragment, useState, useEffect, useRef } from 'react'\r\nimport { Hidden, TableRow, TableCell, Collapse, IconButton, Checkbox, Paper } from '@material-ui/core'\r\nimport { withStyles, useTheme } from '@material-ui/styles'\r\nimport { connect } from 'react-redux'\r\nimport upperFirst from 'lodash/upperFirst'\r\nimport clsx from 'clsx'\r\nimport {\r\n  KeyboardArrowDown as KeyboardArrowDownIcon,\r\n  KeyboardArrowUp as KeyboardArrowUpIcon\r\n} from '@material-ui/icons'\r\n\r\nimport { addSelectedCardIds, removeSelectedCardIds, setCurrentOpenCardId } from '@/Logic/redux'\r\nimport RenderCell from '@/CardRenders'\r\nimport { CardInfo, ContextMenu } from '@/Components/Collection/Views'\r\nimport useStyles from './styles'\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  selectedCardIds: state.actions.app.collection.selectedCardIds,\r\n  cardsSelectableEnabled: state.actions.app.collection.cardsSelectableEnabled,\r\n  currentOpenCardId: state.actions.app.collection.currentOpenCardId,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    addSelectedCardId: (id) => dispatch(addSelectedCardIds({ id })),\r\n    removeSelectedCardId: (id) => dispatch(removeSelectedCardIds({ id })),\r\n    setCurrentOpenCardId: (id) => dispatch(setCurrentOpenCardId({ id })),\r\n  }\r\n})\r\n\r\n\r\nconst CardRow = ({\r\n  /** VARS **/\r\n  columns,\r\n  key,\r\n  card,\r\n  onMouseEnter,\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n    dispatch,\r\n    cardsSelectableEnabled: selectable,\r\n    selectedCardIds,\r\n    currentOpenCardId,\r\n  } = props\r\n  const theme = useTheme()\r\n  const setRef = useRef()\r\n  const cardInfoRef = useRef()\r\n  const checkboxRef = useRef()\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [showContent, setShowContent] = useState(false)\r\n  const [contextMenuState, setContextMenuState] = useState({ clearSelectedCardsOnExit: false })\r\n\r\n  const [isMouseOver, setIsMouseOver] = useState(false)\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    setIsOpen(currentOpenCardId === card._id)\r\n  }, [currentOpenCardId])\r\n\r\n  useEffect(() => {\r\n    if (contextMenuState.mouseY && contextMenuState.mouseX) {\r\n      //opening\r\n      if (selectedCardIds.length === 0) {\r\n        dispatch.addSelectedCardId(card._id)\r\n        setContextMenuState(state => ({\r\n          ...state,\r\n          clearSelectedCardsOnExit: true,\r\n        }))\r\n      }\r\n    }\r\n    else {\r\n      //closing\r\n      if (contextMenuState.clearSelectedCardsOnExit) {\r\n        dispatch.removeSelectedCardId(card._id)\r\n        setContextMenuState({\r\n          clearSelectedCardsOnExit: false,\r\n        })\r\n      }\r\n    }\r\n  }, [contextMenuState.mouseY, contextMenuState.mouseX])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleSelectChange = (e) => {\r\n    e.target.checked\r\n      ? dispatch.addSelectedCardId(card._id)\r\n      : dispatch.removeSelectedCardId(card._id)\r\n  }\r\n\r\n  const handleCheckboxCellClick = (e) => {\r\n    e.stopPropagation()\r\n\r\n    !checkboxRef.current.checked\r\n      ? dispatch.addSelectedCardId(card._id)\r\n      : dispatch.removeSelectedCardId(card._id)\r\n  }\r\n\r\n  const handleMiddleMouseClick = (e) => {\r\n    e.preventDefault()\r\n    if (e.button === 1) // middle mouse click\r\n      selectedCardIds.includes(card._id)\r\n        ? dispatch.removeSelectedCardId(card._id)\r\n        : dispatch.addSelectedCardId(card._id)\r\n  }\r\n\r\n  const handleContextMenu = (e) => {\r\n    e.preventDefault()\r\n    setContextMenuState(state => ({\r\n      ...state,\r\n      mouseX: e.clientX,\r\n      mouseY: e.clientY,\r\n    }))\r\n  }\r\n\r\n  const handleIsOpenToggle = () => {\r\n    if (!isOpen)\r\n      dispatch.setCurrentOpenCardId(card._id)\r\n    else\r\n      dispatch.setCurrentOpenCardId(null)\r\n  }\r\n\r\n  const collapseUpdate = (showContent) => (isAppearing) => {\r\n    if (showContent != null)\r\n      setShowContent(showContent)\r\n    cardInfoRef.current?.updateHeight()\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <Fragment key={key}>\r\n      <ContextMenu\r\n        setState={setContextMenuState}\r\n        {...contextMenuState}\r\n      />\r\n\r\n      <TableRow\r\n        className={clsx(classes.root, 'cursor-pointer')}\r\n        onClick={handleIsOpenToggle}\r\n        onMouseEnter={onMouseEnter}\r\n        onContextMenu={handleContextMenu}\r\n        onMouseDown={handleMiddleMouseClick}\r\n        style={{\r\n          backgroundColor: (\r\n            selectedCardIds.includes(card._id)\r\n              ? theme.palette.action.selected\r\n              : 'unset'\r\n          ),\r\n        }}\r\n      >\r\n        {\r\n          Object\r\n            .entries(columns)\r\n            .map(\r\n              ([columnName, columnDisplayName], i) => (\r\n                <TableCell\r\n                  key={i}\r\n                  align='center'\r\n                  className={classes.content}\r\n                  {...( /* renderSet() setup */\r\n                    columnName === 'set'\r\n                      ? {\r\n                        ref: setRef,\r\n                        onMouseEnter: e => setIsMouseOver(true),\r\n                        onMouseLeave: e => setIsMouseOver(false),\r\n                      }\r\n                      : {}\r\n                  )} /* renderSet() setup */\r\n                >\r\n                  <RenderCell\r\n                    card={card}\r\n                    columnName={columnName}\r\n                  />\r\n                  {\r\n                    columnName === 'set' && isMouseOver && (\r\n                      <Paper elevation={5} className={classes.floating} onMouseEnter={e => setIsMouseOver(false)}>\r\n                        {[card.set_name, upperFirst(card.rarity), '#' + card.collector_number].join(' - ')}\r\n                      </Paper>\r\n                    )\r\n                  }\r\n                </TableCell>\r\n              )\r\n            )\r\n        }\r\n\r\n        {/* CHECKBOX / DROPDOWN-ARROW */}\r\n        {\r\n          selectable\r\n            ?\r\n            <TableCell onClick={handleCheckboxCellClick} className={classes.checkboxCell}>\r\n              <Checkbox\r\n                size='small'\r\n                checked={selectedCardIds.includes(card._id)}\r\n                onChange={handleSelectChange}\r\n                className={classes.checkbox}\r\n                inputProps={{\r\n                  ref: checkboxRef,\r\n                }}\r\n              />\r\n            </TableCell>\r\n            :\r\n            <Hidden smDown>\r\n              <TableCell>\r\n                <IconButton size='small' onClick={handleIsOpenToggle}>\r\n                  {\r\n                    isOpen\r\n                      ? <KeyboardArrowUpIcon />\r\n                      : <KeyboardArrowDownIcon />\r\n                  }\r\n                </IconButton>\r\n              </TableCell>\r\n            </Hidden>\r\n        }\r\n      </TableRow>\r\n\r\n      <TableRow onMouseEnter={onMouseEnter} className={classes.row} style={{ display: showContent ? 'table-row' : 'none' }}>\r\n        <TableCell colSpan={10} style={{ padding: 0 }}>\r\n          <Collapse mountOnEnter unmountOnExit\r\n            timeout='auto'\r\n            in={isOpen}\r\n            onEnter={collapseUpdate(true)}\r\n            onExited={collapseUpdate(false)}\r\n            onEntering={collapseUpdate()}\r\n          >\r\n            <CardInfo\r\n              card={card}\r\n              refs={cardInfoRef}\r\n              topArrowProps={{\r\n                style: {\r\n                  borderTopColor: theme.palette.background.paper,\r\n                },\r\n              }}\r\n            />\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    connect(mapStateToProps, mapDispatchToProps)(\r\n      CardRow\r\n    )\r\n  )","\r\nconst useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  // const mainSidesPadding = theme.spacing(10)\r\n\r\n  return {\r\n    root: {\r\n      paddingBottom: theme.spacing(1),\r\n    },\r\n    'card-image': {\r\n      zIndex: 1,\r\n      position: 'sticky',\r\n      top: theme.spacing(8),\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    tableContainer: {\r\n      maxWidth: '90vw',\r\n      // overflow: 'visible',\r\n    },\r\n    tableFooter: {\r\n      borderTop: `1px solid ${theme.palette.divider}`,\r\n    }\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport { Grid, Tooltip, Checkbox, IconButton, Paper, Hidden, Table, TableContainer, TableRow, TableHead, TableBody, TableFooter, TableCell, TableSortLabel, TablePagination } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport {\r\n  ChevronRight as ChevronRightIcon,\r\n  ChevronLeft as ChevronLeftIcon,\r\n  FirstPage as FirstPageIcon,\r\n  LastPage as LastPageIcon,\r\n} from '@material-ui/icons'\r\nimport { connect } from 'react-redux'\r\nimport _ from 'lodash'\r\n\r\nimport { setSelectedCardIds, setPageNumber, setPerPage } from '@/Logic/redux'\r\nimport { CardImage } from '@/Components'\r\nimport CardRow from './CardRow'\r\nimport useStyles from './styles'\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  columns: state.actions.app.collection.tableView.columns,\r\n  cardsSelectableEnabled: state.actions.app.collection.cardsSelectableEnabled,\r\n  selectedCardIds: state.actions.app.collection.selectedCardIds,\r\n  pageNumber: state.actions.app.collection.pageNumber,\r\n  perPage: state.actions.app.collection.perPage,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    setSelectedCardIds: (selectedCardIds) => dispatch(setSelectedCardIds({ selectedCardIds })),\r\n    setPageNumber: (pageNumber) => dispatch(setPageNumber({ pageNumber })),\r\n    setPerPage: (perPage) => dispatch(setPerPage({ perPage })),\r\n  }\r\n})\r\n\r\n\r\nconst CardTableView = ({\r\n  /** VARS **/\r\n  data,\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n    dispatch,\r\n    columns,\r\n    pageNumber,\r\n    perPage,\r\n    cardsSelectableEnabled,\r\n    selectedCardIds,\r\n  } = props\r\n  const [currentHoveringCard, setCurrentHoveringCard] = useState()\r\n  const [sortBy, setSortByCol] = useState()\r\n  const [sortOrder, setSortOrder] = useState('desc')\r\n  const [sortedData, setSortedData] = useState(data)\r\n  const [paginatedData, setPaginatedData] = useState(data)\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    setPaginatedData(() =>\r\n      perPage === -1\r\n        ? sortedData // show all\r\n        : sortedData.slice(\r\n          pageNumber * perPage,\r\n          pageNumber * perPage + perPage\r\n        )\r\n    )\r\n  }, [sortedData, pageNumber, perPage])\r\n\r\n  useEffect(() => {\r\n    let _sortBy //= sortBy === 'mana_cost' ? 'cmc' : sortBy\r\n    switch (sortBy) {\r\n      case 'mana_cost':\r\n      case 'mana_value':\r\n        _sortBy = ['cmc']\r\n        break\r\n\r\n      case 'total_price':\r\n      case 'prices':\r\n      case 'price':\r\n        _sortBy = ['price']\r\n        break\r\n\r\n      case 'type':\r\n      case 'type_line':\r\n        _sortBy = [(card) => card.type_line.replace('Legendary ', '')]\r\n        break\r\n\r\n      case 'set':\r\n      case 'rarity':\r\n        _sortBy = [\r\n          (card) => {\r\n            return card.set_data.parent_set_code ?? card.set\r\n          },\r\n          (card) => {\r\n            switch (card.rarity) {\r\n              default:\r\n                return 4\r\n              case 'common':\r\n                return 3\r\n              case 'uncommon':\r\n                return 2\r\n              case 'rare':\r\n                return 1\r\n              case 'mythic':\r\n                return 0\r\n            }\r\n          }\r\n        ]\r\n        break\r\n\r\n      default:\r\n        _sortBy = [sortBy]\r\n        break\r\n\r\n      /* if `sortBy` is not specified, then sort by `date_created` */\r\n      case null:\r\n      case undefined:\r\n      case '':\r\n        _sortBy = [(card) => new Date(card.date_created)]\r\n        break\r\n    }\r\n\r\n    setSortedData(\r\n      _.orderBy(data, [..._sortBy, 'name', 'collector_number'], sortOrder)\r\n    )\r\n    dispatch.setPageNumber(0)\r\n  }, [data, sortOrder, sortBy])\r\n\r\n  useEffect(() => {\r\n    setCurrentHoveringCard(null)\r\n  }, [sortedData, paginatedData])\r\n\r\n  useEffect(() => {\r\n    dispatch.setSelectedCardIds([])\r\n  }, [data])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleRowHover = (card, i) => {\r\n    setCurrentHoveringCard(card)\r\n  }\r\n\r\n  const handleHeaderClick = (event, colName) => {\r\n    if (colName === sortBy) {\r\n      switch (sortOrder) {\r\n        case 'desc': //second click\r\n          setSortOrder('asc')\r\n          break\r\n\r\n        case 'asc': //third click, reset sorting\r\n        default:\r\n          setSortByCol('')\r\n          setSortOrder('desc')\r\n          break\r\n      }\r\n    }\r\n    else {\r\n      // first click\r\n      setSortByCol(colName)\r\n      setSortOrder('desc')\r\n    }\r\n  }\r\n\r\n  const handleSelectAllChange = (e) => {\r\n    e.target.checked\r\n      ? dispatch.setSelectedCardIds(data.map(card => card._id))\r\n      : dispatch.setSelectedCardIds([])\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <Grid item container spacing={1} xs={11} className={classes.root}>\r\n      <Grid item container wrap='nowrap' justifyContent='center'>\r\n\r\n        {/** CARD PREVIEW **/}\r\n        <Hidden mdDown>\r\n          <Grid item>\r\n            <div className={classes['card-image']}>\r\n              <CardImage tiltEnabled transform3dEnabled\r\n                card={currentHoveringCard}\r\n              />\r\n            </div>\r\n          </Grid>\r\n        </Hidden>\r\n\r\n        {/** TABLE VIEW **/}\r\n        <Grid item md>\r\n          <TableContainer component={Paper} className={classes.tableContainer} elevation={5}>\r\n            <Table size=\"small\">\r\n              <TableHead className={classes.tableHead}>\r\n                <TableRow>\r\n                  {\r\n                    Object\r\n                      .entries(columns)\r\n                      .map(([columnName, columnDisplayName]) => (\r\n                        <TableCell\r\n                          style={{ paddingLeft: '16px' }}\r\n                          key={columnName}\r\n                          align=\"center\"\r\n                          sortDirection={sortBy === columnName ? sortOrder : false}\r\n                        >\r\n                          <TableSortLabel\r\n                            style={{ whiteSpace: 'nowrap' }}\r\n                            active={sortBy === columnName}\r\n                            direction={sortBy === columnName ? sortOrder : 'asc'}\r\n                            onClick={e => handleHeaderClick(e, columnName)}\r\n                          >\r\n                            {columnDisplayName}\r\n                          </TableSortLabel>\r\n                        </TableCell>\r\n                      ))\r\n                  }\r\n\r\n                  {/** Checkbox / DropdownIcon **/}\r\n                  {\r\n                    cardsSelectableEnabled\r\n                      ?\r\n                      // <TableCell className={classes.iconCell} />\r\n                      <TableCell onClick={e => e.stopPropagation()} className={classes.checkbox}>\r\n                        <Tooltip arrow placement='top' title={selectedCardIds.length >= data.length ? 'Clear Selection' : 'Select All'}>\r\n                          <Checkbox\r\n                            size='small'\r\n                            checked={selectedCardIds.length >= data.length}\r\n                            indeterminate={selectedCardIds.length > 0 && selectedCardIds.length < data.length}\r\n                            onChange={handleSelectAllChange}\r\n                          />\r\n                        </Tooltip>\r\n                      </TableCell>\r\n                      :\r\n                      <Hidden smDown>\r\n                        <TableCell className={classes.iconCell} />\r\n                      </Hidden>\r\n                  }\r\n\r\n                </TableRow>\r\n              </TableHead>\r\n\r\n              <TableBody>\r\n                {paginatedData instanceof Array && paginatedData.map(card => (\r\n                  <CardRow\r\n                    onMouseEnter={e => handleRowHover(card)}\r\n                    key={card._id}\r\n                    columns={columns}\r\n                    card={card}\r\n                  />\r\n                ))}\r\n              </TableBody>\r\n\r\n              <TableFooter className={classes.tableFooter}>\r\n                <TableRow>\r\n                  <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 50, 100, { label: 'All', value: -1 }]}\r\n                    labelRowsPerPage='Cards per page:'\r\n                    colSpan={9}\r\n                    count={data.length}\r\n                    rowsPerPage={perPage}\r\n                    page={pageNumber}\r\n                    // labelDisplayedRows={({ from, to, count }) => `${from}-${to === -1 ? count : to} of ${count}`}\r\n                    labelDisplayedRows={({ from, to, count }) => `${from}-${to !== -1 ? to : count} of ${count !== -1 ? count : `more than ${to}`}`}\r\n                    onPageChange={(e, v) => dispatch.setPageNumber(v)}\r\n                    onRowsPerPageChange={(e) => dispatch.setPerPage(parseInt(e.target.value))}\r\n                    SelectProps={{\r\n                      native: true,\r\n                    }}\r\n                    ActionsComponent={({ count, page, rowsPerPage, onPageChange }) => (\r\n                      <>\r\n                        <IconButton\r\n                          size='small'\r\n                          onClick={e => onPageChange(e, 0)}\r\n                          disabled={page === 0}\r\n                          aria-label=\"first page\"\r\n                        >\r\n                          <FirstPageIcon />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          size='small'\r\n                          onClick={e => onPageChange(e, page - 1)}\r\n                          disabled={page === 0}\r\n                          aria-label=\"previous page\"\r\n                        >\r\n                          <ChevronLeftIcon />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          size='small'\r\n                          onClick={e => onPageChange(e, page + 1)}\r\n                          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                          aria-label=\"next page\"\r\n                        >\r\n                          <ChevronRightIcon />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          size='small'\r\n                          onClick={e => onPageChange(e, Math.max(0, Math.ceil(count / rowsPerPage) - 1))}\r\n                          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                          aria-label=\"last page\"\r\n                        >\r\n                          <LastPageIcon />\r\n                        </IconButton>\r\n                      </>\r\n                    )}\r\n                  />\r\n                </TableRow>\r\n              </TableFooter>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid >\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    connect(mapStateToProps, mapDispatchToProps)(\r\n      CardTableView\r\n    )\r\n  )","\r\nconst useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  // const mainSidesPadding = theme.spacing(10)\r\n\r\n  return {\r\n    root: {},\r\n    topArrow: {\r\n      borderTopColor: theme.palette.background.default\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { Fragment, useEffect, useState, useRef, createRef } from 'react'\r\nimport { Portal, MenuItem, ListItemText, Paper, Grid, Collapse } from '@material-ui/core'\r\nimport { withStyles, useTheme } from '@material-ui/styles'\r\nimport { connect } from 'react-redux'\r\n// import scrollIntoView from 'scroll-into-view-if-needed'\r\nimport useSize from '@react-hook/size'\r\nimport _ from 'lodash'\r\n\r\nimport {\r\n  addSelectedCardIds, removeSelectedCardIds, setViewIndex_CardInfo,\r\n  toggleTiltEnabled_GridView, toggleTransform3dEnabled_GridView\r\n} from '@/Logic/redux'\r\nimport { CardImage } from '@/Components'\r\nimport { CardInfo, ContextMenu } from '@/Components/Collection/Views'\r\nimport useStyles from './styles'\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  selectedCardIds: state.actions.app.collection.selectedCardIds,\r\n  tiltEnabled: state.actions.app.collection.gridView.tiltEnabled,\r\n  transform3dEnabled: state.actions.app.collection.gridView.transform3dEnabled,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    toggleTiltEnabled: () => dispatch(toggleTiltEnabled_GridView()),\r\n    toggleTransform3dEnabled: () => dispatch(toggleTransform3dEnabled_GridView()),\r\n    addSelectedCardId: (id) => dispatch(addSelectedCardIds({ id })),\r\n    removeSelectedCardId: (id) => dispatch(removeSelectedCardIds({ id })),\r\n    setViewIndex: (index) => dispatch(setViewIndex_CardInfo({ index })),\r\n  }\r\n})\r\n\r\n\r\nconst CardGridView = ({\r\n  /** VARS **/\r\n  data,\r\n  menuItemRef,\r\n  cardWidth = 209,\r\n  ...props\r\n}) => {\r\n  const {\r\n    // classes,\r\n    dispatch,\r\n    tiltEnabled,\r\n    transform3dEnabled,\r\n    selectedCardIds,\r\n  } = props\r\n  const theme = useTheme()\r\n\r\n  const containerRef = useRef()\r\n  const [refs, setRefs] = useState([])\r\n  const [containerWidth,] = useSize(containerRef)\r\n  const [cardsPerRow, setCardsPerRow] = useState()\r\n\r\n  const [contextMenuState, setContextMenuState] = useState({ clearSelectedCardsOnExit: false })\r\n  const [selectedCard, setSelectedCard] = useState({})\r\n  const [sortedData, setSortedData] = useState([])\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    setSortedData(\r\n      _.sortBy(data, card => card.type_line.replace('Legendary', ''))\r\n    )\r\n\r\n    setSelectedCard(selectedCard => {\r\n      const newCard = data.find(card => card._id === selectedCard?.data?._id)\r\n\r\n      return newCard\r\n        ? {\r\n          ...selectedCard,\r\n          data: newCard,\r\n        }\r\n        : {\r\n          data: undefined,\r\n          targetCollapse: undefined,\r\n          box: undefined,\r\n        }\r\n    })\r\n  }, [data])\r\n\r\n  useEffect(() => {\r\n    let n = Math.floor(containerWidth / (cardWidth + 16))\r\n    n = n > 0 ? n : 1\r\n    setCardsPerRow(n)\r\n\r\n    setRefs(\r\n      _.times(\r\n        Math.floor(data.length / n) + 1,\r\n        () => ({\r\n          collapse: createRef(),\r\n          cardInfo: createRef()\r\n        })\r\n      )\r\n    )\r\n  }, [containerWidth, cardWidth, data])\r\n\r\n  useEffect(() => {\r\n    if (contextMenuState.mouseY && contextMenuState.mouseX) {\r\n      //opening\r\n      if (selectedCardIds.length === 0) {\r\n        dispatch.addSelectedCardId(contextMenuState.card._id)\r\n        setContextMenuState(state => ({\r\n          ...state,\r\n          clearSelectedCardsOnExit: true,\r\n        }))\r\n      }\r\n    }\r\n    else {\r\n      //closing\r\n      if (contextMenuState.clearSelectedCardsOnExit) {\r\n        dispatch.removeSelectedCardId(contextMenuState.card._id)\r\n        setContextMenuState({\r\n          clearSelectedCardsOnExit: false,\r\n        })\r\n      }\r\n    }\r\n  }, [contextMenuState.mouseY, contextMenuState.mouseX])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleCardClick = ({ card, key }) => (e) => {\r\n    const { data: selectedCardData, targetCollapse } = selectedCard\r\n    const targetCollapseIdx = Math.floor(key / cardsPerRow) || 0\r\n\r\n    if (targetCollapse !== undefined && selectedCardData?._id === card._id) {\r\n      // a collapse is open & the same card is clicked ->\r\n      //                                               -> close the collapse\r\n      setSelectedCard({\r\n        ...selectedCard,\r\n        targetCollapse: undefined,\r\n        box: e.target.getBoundingClientRect(),\r\n      })\r\n    }\r\n    else {\r\n      // a new card is clicked, open the collapse\r\n      setSelectedCard({\r\n        data: card,\r\n        targetCollapse: targetCollapseIdx,\r\n        box: e.target.getBoundingClientRect(),\r\n      })\r\n\r\n      setTimeout(() => {\r\n        dispatch.setViewIndex(0)\r\n        refs[targetCollapseIdx]?.cardInfo?.current?.updateHeight()\r\n      }, 10)\r\n    }\r\n  }\r\n\r\n  const handleMiddleMouseClick = (card) => (e) => {\r\n    e.preventDefault()\r\n    if (e.button === 1) // middle mouse click\r\n      selectedCardIds.includes(card._id)\r\n        ? dispatch.removeSelectedCardId(card._id)\r\n        : dispatch.addSelectedCardId(card._id)\r\n  }\r\n\r\n  const handleContextMenu = ({ card, key }) => (e) => {\r\n    e.preventDefault()\r\n    e.persist()\r\n    setContextMenuState(state => ({\r\n      ...state,\r\n      mouseX: e.clientX,\r\n      mouseY: e.clientY,\r\n      card,\r\n      onEditClick: () => handleCardClick({ card, key })(e),\r\n    }))\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <>\r\n      <ContextMenu\r\n        setState={setContextMenuState}\r\n        {...contextMenuState}\r\n      />\r\n\r\n      {\r\n        <Portal container={menuItemRef.current}>\r\n          <MenuItem onClick={dispatch.toggleTiltEnabled}>\r\n            <ListItemText\r\n              primary='Card Tilt'\r\n              secondary={tiltEnabled ? 'Enabled' : 'Disabled'}\r\n            />\r\n          </MenuItem>\r\n          <MenuItem onClick={dispatch.toggleTransform3dEnabled}>\r\n            <ListItemText\r\n              primary='3D Transform'\r\n              secondary={transform3dEnabled ? 'Enabled' : 'Disabled'}\r\n            />\r\n          </MenuItem>\r\n        </Portal>\r\n      }\r\n\r\n      <Grid item container ref={containerRef} xs={12} lg={10} spacing={2} justifyContent='center'>\r\n        {\r\n          sortedData && sortedData.map((card, i) => {\r\n            const targetCollapseIdx = Math.floor(i / cardsPerRow)\r\n\r\n            return (\r\n              <Fragment key={i}>\r\n                {\r\n                  card &&\r\n                  <Grid item xs='auto'>\r\n                    <CardImage packTransformButton showCheckbox\r\n                      transform3dEnabled={transform3dEnabled}\r\n                      tiltEnabled={tiltEnabled}\r\n                      card={card}\r\n                      width={cardWidth}\r\n                      height={cardWidth * 1.4}\r\n                      tiltProps={{\r\n                        tiltMaxAngleX: 12.5,\r\n                        tiltMaxAngleY: 12.5,\r\n                      }}\r\n                      imageProps={{\r\n                        width: cardWidth,\r\n                        height: cardWidth * 1.4,\r\n                      }}\r\n                      rootProps={{\r\n                        className: 'cursor-pointer',\r\n                        onClick: handleCardClick({ card, key: i }),\r\n                        // onClick: (e) => {console.log(e)},\r\n                        onContextMenu: handleContextMenu({ card, key: i }),\r\n                        onMouseDown: handleMiddleMouseClick(card),\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                }\r\n                {\r\n                  (((i + 1) % cardsPerRow === 0) || (i === sortedData.length - 1)) &&\r\n                  <Grid item xs={12}>\r\n                    <Collapse mountOnEnter unmountOnExit\r\n                      ref={refs[targetCollapseIdx]?.collapse}\r\n                      timeout=\"auto\"\r\n                      in={targetCollapseIdx === selectedCard.targetCollapse}\r\n                    // onEntering={() => scrollIntoView(refs[targetCollapseIdx]?.collapse?.current, { scrollMode: 'if-needed', behavior: 'smooth', block: 'start' })}\r\n                    // onEntered={() => scrollIntoView(refs[targetCollapseIdx]?.collapse?.current, { scrollMode: 'if-needed', behavior: 'smooth', block: 'end' })}\r\n                    >\r\n                      {\r\n                        selectedCard?.data &&\r\n                        <CardInfo\r\n                          refs={refs[targetCollapseIdx]?.cardInfo}\r\n                          card={selectedCard.data}\r\n                          rootComponent={Paper}\r\n                          rootProps={{\r\n                            elevation: 1,\r\n                          }}\r\n                          topArrowProps={{\r\n                            style: {\r\n                              borderTopColor: theme.palette.background.default,\r\n                              left: `calc(${selectedCard?.box?.left + (selectedCard?.box?.width * 0.5) - containerRef?.current?.offsetLeft}px - 2.25rem)`,\r\n                            },\r\n                          }}\r\n                        />\r\n                      }\r\n                    </Collapse>\r\n                  </Grid>\r\n                }\r\n              </Fragment>\r\n            )\r\n          })\r\n        }\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    connect(mapStateToProps, mapDispatchToProps)(\r\n      CardGridView\r\n    )\r\n  )","\r\nconst useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  // const mainSidesPadding = theme.spacing(10)\r\n\r\n  return {\r\n    root: {},\r\n    modal: {\r\n      maxWidth: '90vw',\r\n    }\r\n  }\r\n}\r\n\r\nexport default useStyles","import { Fragment, useState } from 'react'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport { Menu, TextField, MenuItem, ListItemIcon, Grid, Button, Modal, Typography, Paper, Fade } from '@material-ui/core'\r\nimport { Autocomplete } from '@material-ui/lab'\r\nimport {\r\n  Edit as EditIcon,\r\n  LocalOffer as TagIcon,\r\n  Delete as DeleteIcon,\r\n} from '@material-ui/icons'\r\nimport { useSnackbar } from 'notistack'\r\nimport { connect } from 'react-redux'\r\nimport _ from 'lodash'\r\nimport clsx from 'clsx'\r\n\r\nimport {\r\n  updateCollection, addSelectedCardIds, setSelectedCardIds,\r\n  setCurrentOpenCardId, setViewIndex_CardInfo, setEditEnabled_CardInfo\r\n} from '@/Logic/redux'\r\nimport { MagicdexApi } from '@/Api'\r\nimport Config from '@/Config'\r\nimport useStyles from './styles'\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  collection: state.actions.activeUser.collection,\r\n  selectedCardIds: state.actions.app.collection.selectedCardIds,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    updateCollection: (cards) => dispatch(updateCollection({ cards })),\r\n    addSelectedCardId: (id) => dispatch(addSelectedCardIds({ id })),\r\n    setSelectedCardIds: (ids) => dispatch(setSelectedCardIds({ selectedCardIds: ids })),\r\n    setCurrentOpenCardId: (id) => dispatch(setCurrentOpenCardId({ id })),\r\n    setViewIndex: (index) => dispatch(setViewIndex_CardInfo({ index })),\r\n    setEditEnabled: (enabled) => dispatch(setEditEnabled_CardInfo({ enabled })),\r\n  }\r\n})\r\n\r\n\r\nconst ContextMenu = ({\r\n  /** VARS **/\r\n  mouseY,\r\n  mouseX,\r\n  setState,\r\n  clearSelectedCards,\r\n  card,\r\n  onEditClick,\r\n  clearSelectedCardsOnExit = false,\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n    dispatch,\r\n    selectedCardIds,\r\n    collection,\r\n    ...rest\r\n  } = props\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  const [modalOpen, setModalOpen] = useState(false)\r\n  const [tagArray, setTagArray] = useState([])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const closeMenu = () => {\r\n    setState(state => ({\r\n      ...state,\r\n      mouseY: null,\r\n      mouseX: null\r\n    }))\r\n    setModalOpen(false)\r\n  }\r\n\r\n  const handleTagChange = (value) => {\r\n    setTagArray(state => (\r\n      _.chain(value)\r\n        .map(v => v.trim())\r\n        .compact()\r\n        .uniqBy(v => v.toLowerCase())\r\n        .value()\r\n    ))\r\n  }\r\n\r\n  const handleKeyDown = (id) => (e) => {\r\n    switch (id) {\r\n      case 'tag':\r\n        if (e.key === 'Enter' && e.target.value === '')\r\n          handleMenuItemClick('tag', true)()\r\n        break\r\n\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  const handleMenuItemClick = (id, confirmAction = false) => (e) => {\r\n    switch (id) {\r\n      case 'edit':\r\n        onEditClick && onEditClick()\r\n        dispatch.setCurrentOpenCardId(selectedCardIds[0])\r\n        setTimeout(() => {\r\n          dispatch.setEditEnabled(true)\r\n          dispatch.setViewIndex(1)\r\n        }, 300)\r\n        closeMenu()\r\n        break\r\n\r\n      case 'delete':\r\n        if (confirmAction) {\r\n          const len = selectedCardIds.length\r\n          if (len > 0) {\r\n            const clonedArr = selectedCardIds.map(_id => ({\r\n              _id,\r\n              amount: 0,\r\n            }))\r\n\r\n            if (Config.MODIFY_DB_ALLOWED)\r\n              MagicdexApi.updateCards(clonedArr)\r\n                .then(res => {\r\n                  dispatch.updateCollection(res)\r\n                  const actions = _.countBy(res, 'action')\r\n                  actions['DELETED'] && enqueueSnackbar(`Deleted ${actions['DELETED']} card entries`, { variant: 'success' })\r\n                })\r\n                .catch(error => {\r\n                  enqueueSnackbar(`Failed to delete ${len} card entries`, { variant: 'error' })\r\n                })\r\n            else {\r\n              dispatch.updateCollection(clonedArr.map(card => ({ action: 'UPDATED', card })))\r\n              enqueueSnackbar(`Deleted ${len} card entries`, { variant: 'success' })\r\n            }\r\n          }\r\n          closeMenu()\r\n        }\r\n        else\r\n          setModalOpen('delete')\r\n        break\r\n\r\n      case 'tag':\r\n        if (confirmAction) {\r\n          const len = selectedCardIds.length\r\n          if (len > 0) {\r\n            const clonedArr = selectedCardIds.map(_id => ({\r\n              _id,\r\n              tag: tagArray,\r\n            }))\r\n\r\n            if (Config.MODIFY_DB_ALLOWED)\r\n              MagicdexApi.updateCards(clonedArr)\r\n                .then(res => {\r\n                  dispatch.updateCollection(res)\r\n                  const actions = _.countBy(res, 'action')\r\n                  actions['DELETED'] && enqueueSnackbar(`Deleted ${actions['DELETED']} card entries`, { variant: 'success' })\r\n                  actions['UPDATED'] && enqueueSnackbar(`Updated ${actions['UPDATED']} card entries`, { variant: 'info' })\r\n                })\r\n                .catch(error => {\r\n                  enqueueSnackbar(`Failed to tag ${len} card entries`, { variant: 'error' })\r\n                })\r\n            else {\r\n              dispatch.updateCollection(clonedArr.map(card => ({ action: 'UPDATED', card })))\r\n              enqueueSnackbar(`Updated ${len} card entries`, { variant: 'success' })\r\n            }\r\n          }\r\n          closeMenu()\r\n        }\r\n        else {\r\n          setTagArray(_.chain(collection)\r\n            .filter(card => selectedCardIds.includes(card._id))\r\n            .flatMap(card => card.tag)\r\n            .uniqBy(v => v.toLowerCase())\r\n            .value()\r\n          )\r\n          setModalOpen('tag')\r\n        }\r\n        break\r\n\r\n      default:\r\n        closeMenu()\r\n        break\r\n    }\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <>\r\n      <Menu keepMounted disableAutoFocusItem\r\n        onContextMenu={e => e.preventDefault()}\r\n        open={Boolean(mouseY && mouseX)}\r\n        onClose={closeMenu}\r\n        anchorReference='anchorPosition'\r\n        anchorPosition={\r\n          mouseY && mouseX\r\n            ? { top: mouseY - 4, left: mouseX - 2 }\r\n            : undefined\r\n        }\r\n        MenuListProps={{\r\n          dense: true,\r\n        }}\r\n        {...rest}\r\n        className={clsx(classes.root, props.className)}\r\n      >\r\n        {\r\n          selectedCardIds.length === 1 &&\r\n          <MenuItem onClick={handleMenuItemClick('edit')}>\r\n            <ListItemIcon style={{ minWidth: 40 }}>\r\n              <EditIcon fontSize='small' />\r\n            </ListItemIcon>\r\n            Edit\r\n          </MenuItem>\r\n        }\r\n        <MenuItem onClick={handleMenuItemClick('tag')}>\r\n          <ListItemIcon style={{ minWidth: 40 }}>\r\n            <TagIcon fontSize='small' />\r\n          </ListItemIcon>\r\n          Assign Tags\r\n        </MenuItem>\r\n        <MenuItem onClick={handleMenuItemClick('delete')}>\r\n          <ListItemIcon style={{ minWidth: 40 }}>\r\n            <DeleteIcon fontSize='small' />\r\n          </ListItemIcon>\r\n          Delete\r\n        </MenuItem>\r\n      </Menu>\r\n\r\n\r\n      {/* \"ARE YOU SURE\" MODAL */}\r\n      <Grid container spacing={5} justifyContent='center' alignItems='center'\r\n        component={Modal} closeAfterTransition\r\n        onClose={closeMenu}\r\n        open={Boolean(modalOpen)}\r\n        BackdropProps={{ timeout: 500 }}\r\n      >\r\n        <Grid item xs={8} sm={6} lg={4} component={Fade} in={Boolean(modalOpen)}>\r\n          <Paper>\r\n            <Grid container justifyContent='center' alignItems='center' spacing={1} className={classes.modal}>\r\n              {\r\n                ((value) => {\r\n                  switch (value) {\r\n                    case 'delete':\r\n                      return <>\r\n                        <Grid item xs={12} align='center'>\r\n                          <Typography noWrap variant='h5' align='left'>\r\n                            Confirm Action\r\n                          </Typography>\r\n                          <Typography noWrap variant='body1' align='left'>\r\n                            {\r\n                              `Are you sure you want to delete the selected ${selectedCardIds.length > 1 ? 'cards' : 'card'}?`\r\n                            }\r\n                          </Typography>\r\n                          <Typography noWrap variant='body2' align='left' color='error'>\r\n                            This action is irreversible.\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item container justifyContent='flex-end' xs={12} spacing={1}>\r\n                          <Grid item>\r\n                            <Button variant='outlined' onClick={closeMenu}>\r\n                              Nop\r\n                            </Button>\r\n                          </Grid>\r\n                          <Grid item>\r\n                            <Button variant='contained' color='secondary' onClick={handleMenuItemClick('delete', true)}>\r\n                              Yep\r\n                            </Button>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </>\r\n\r\n                    case 'tag':\r\n                      return <>\r\n                        <Grid item xs={12} align='left' component={Typography} variant='h5'>\r\n                          Assign Tags\r\n                        </Grid>\r\n                        <Grid item xs={12} align='left' component={Typography} variant='body2'>\r\n                          {`The following tags will be assigned to the selected ${selectedCardIds.length > 1 ? 'cards' : 'card'}:`}\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={10} md={9} lg={7}>\r\n                          <Autocomplete multiple freeSolo\r\n                            label='Tags'\r\n                            variant='outlined'\r\n                            margin='dense'\r\n                            size='small'\r\n                            color='secondary'\r\n                            options={[]}\r\n                            value={tagArray}\r\n                            onChange={(e, newValue) => { handleTagChange(newValue) }}\r\n                            onKeyDown={handleKeyDown('tag')}\r\n                            onInputChange={(e, newInputValue) => {\r\n                              if (newInputValue?.match(/[;,]/g)) {\r\n                                const values = _\r\n                                  .chain(newInputValue)\r\n                                  .split(/[;,]/)\r\n                                  .map(v => v.trim())\r\n                                  .compact()\r\n                                  .uniqBy(v => v.toLowerCase())\r\n                                  .value()\r\n                                if (values.length > 0)\r\n                                  handleTagChange(tagArray.concat(values))\r\n                                else\r\n                                  handleTagChange(tagArray)\r\n                              }\r\n                            }}\r\n                            renderInput={(props) => (\r\n                              <TextField multiline\r\n                                {...props}\r\n                                color='secondary'\r\n                                variant='outlined'\r\n                                label='Tags'\r\n                                helperText={\r\n                                  ['Tags are seperated by ', <code>{'Enter'}</code>, ' or ', <code>{'[;,]'}</code>]\r\n                                    .map((item, i) =>\r\n                                      <Fragment key={i}>{item}</Fragment>\r\n                                    )\r\n                                }\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n\r\n                        <Grid item container justifyContent='flex-end' spacing={1} xs={12}>\r\n                          <Grid item>\r\n                            <Button variant='outlined' onClick={closeMenu}>\r\n                              Cancel\r\n                            </Button>\r\n                          </Grid>\r\n                          <Grid item>\r\n                            <Button variant='contained' color='secondary' onClick={handleMenuItemClick('tag', true)}>\r\n                              Save\r\n                            </Button>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </>\r\n\r\n                    default:\r\n                      return <></>\r\n                  }\r\n                })(modalOpen)\r\n              }\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    connect(mapStateToProps, mapDispatchToProps)(\r\n      ContextMenu\r\n    )\r\n  )","import { FormControlLabel, Grid, Radio, RadioGroup, TextField, Chip } from \"@material-ui/core\"\r\nimport { Autocomplete } from \"@material-ui/lab\"\r\n// import clsx from \"clsx\"\r\n// import _ from 'lodash'\r\n\r\n\r\nconst formatCode = (code) => {\r\n  code = code.toLowerCase()\r\n  if (code.charAt(0) !== \"{\") return code\r\n  return \"\"\r\n}\r\n\r\nconst RangeTextField = ({ name, maxMin, state, stateHandler, clsInput }) => (\r\n  <TextField\r\n    className={clsInput}\r\n    id={maxMin + \"-\" + name}\r\n    label={maxMin}\r\n    type=\"number\"\r\n    placeholder={maxMin}\r\n    size=\"small\"\r\n    value={state}\r\n    pattern=\"\"\r\n    onChange={(e) => stateHandler(e.target.value)}\r\n    onKeyDown={(e) => {\r\n      if (e.key === \"e\" || e.key === \"+\" || e.key === \"-\") e.preventDefault()\r\n    }}\r\n  />\r\n)\r\n\r\n\r\nconst Utils = {\r\n  TextOption: ({ label, value, onChange, ...rest }) => (\r\n    <TextField\r\n      margin='dense'\r\n      size='small'\r\n      variant='outlined'\r\n      // variant='standard'\r\n      color='secondary'\r\n      label={label}\r\n      value={value}\r\n      onChange={onChange}\r\n      {...rest}\r\n    />\r\n  ),\r\n\r\n  RangeOptions: ({ name, stateMin, stateMax, stateHandlerMin, stateHandlerMax, clsInput, clsMinus }) => (\r\n    <Grid container spacing={1}>\r\n      <Grid item>{name + \": \"}</Grid>\r\n      <Grid item>\r\n        <RangeTextField\r\n          name={name}\r\n          maxMin=\"Minimum\"\r\n          state={stateMin}\r\n          stateHandler={stateHandlerMin}\r\n          clsInput={clsInput}\r\n        />\r\n      </Grid>\r\n      <Grid item className={clsMinus}>\r\n        —\r\n      </Grid>\r\n      <Grid item>\r\n        <RangeTextField\r\n          name={name}\r\n          maxMin=\"Maximum\"\r\n          state={stateMax}\r\n          stateHandler={stateHandlerMax}\r\n          clsInput={clsInput}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  ),\r\n\r\n  RadioOptions: ({ name, state, stateHandler }) => (\r\n    <Grid container spacing={2}>\r\n      <Grid item>{name + \": \"}</Grid>\r\n      <Grid item>\r\n        <RadioGroup\r\n          row\r\n          aria-label={name.toLowerCase()}\r\n          name={\"row-radio-buttons-\" + name.toLowerCase()}\r\n          value={state}\r\n          onChange={(e) => stateHandler(e.target.value)}\r\n        >\r\n          <FormControlLabel\r\n            value=\"Both\"\r\n            control={<Radio />}\r\n            label=\"Both\"\r\n          />\r\n          <FormControlLabel value=\"No\" control={<Radio />} label=\"No\" />\r\n          <FormControlLabel value=\"Yes\" control={<Radio />} label=\"Yes\" />\r\n        </RadioGroup>\r\n      </Grid>\r\n    </Grid>\r\n  ),\r\n\r\n  AutocompleteOptions: ({ ...props }) => (\r\n    <Autocomplete multiple disableCloseOnSelect filterSelectedOptions\r\n      style={{\r\n        width: '95%',\r\n        ...props?.style\r\n      }}\r\n      color='secondary'\r\n      ChipProps={{\r\n        variant: \"outlined\",\r\n        size: \"small\",\r\n        ...props?.ChipProps,\r\n      }}\r\n      renderTags={(value, getTagProps) => (\r\n        value.map((option, index) => (\r\n          <Chip\r\n            key={index}\r\n            {...getTagProps({ index })}\r\n            label={\r\n              props?.ChipProps?.label\r\n                ? props.ChipProps.label instanceof Function\r\n                  ? props.ChipProps.label(option)\r\n                  : props.ChipProps.label\r\n                : option\r\n            }\r\n          />\r\n        ))\r\n      )}\r\n      renderInput={params => (\r\n        <TextField\r\n          {...params}\r\n          color='secondary'\r\n          size='small'\r\n          margin='dense'\r\n          variant=\"outlined\"\r\n          label={props?.label}\r\n          {...props?.InputProps}\r\n        />\r\n      )}\r\n      {...props}\r\n    />\r\n  ),\r\n}\r\n\r\nexport {\r\n  Utils as default,\r\n  formatCode,\r\n}\r\n\r\nexport const {\r\n  RadioOptions,\r\n  TextOption,\r\n  RangeOptions,\r\n  AutocompleteOptions,\r\n} = Utils\r\n","\r\nconst useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  // const mainSidesPadding = theme.spacing(10)\r\n\r\n  return {\r\n    icon: {\r\n    },\r\n    popover: {\r\n    },\r\n    paper: {\r\n      minWidth: theme.spacing(20),\r\n      maxWidth: theme.spacing(30),\r\n    },\r\n    // contentShift: {\r\n    //   transition: theme.transitions.create('margin', {\r\n    //     easing: theme.transitions.easing.easeOut,\r\n    //     duration: theme.transitions.duration.enteringScreen,\r\n    //   }),\r\n    //   marginLeft: 0,\r\n    // },\r\n    // listItemText: {\r\n    //   marginRight: theme.spacing(1),\r\n    // },\r\n    // ListItemIcon: {\r\n    //   marginRight: theme.spacing(2.5),\r\n    //   width: 'auto',\r\n    //   minWidth: 'auto',\r\n    // },\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { useState, forwardRef, useImperativeHandle, useRef } from 'react'\r\nimport { ClickAwayListener, IconButton, List, Paper, Popover } from '@material-ui/core'\r\nimport { makeStyles, useTheme } from '@material-ui/styles'\r\nimport FilterListIcon from '@material-ui/icons/FilterList'\r\n// import { connect } from 'react-redux'\r\n\r\n// import { setCurrentTab } from '@/Logic/redux'\r\nimport useStyles from './styles'\r\n\r\n\r\nconst MenuPopover = forwardRef(({\r\n  /** VARS **/\r\n  ...props\r\n}, ref) => {\r\n  const [menuAnchor, setMenuAnchor] = useState(null)\r\n  const menuOpen = Boolean(menuAnchor)\r\n  const filterButtonRef = useRef()\r\n  const classes = makeStyles(useStyles(useTheme()))()\r\n  // const {\r\n  //   icon,\r\n  // } = props\r\n\r\n\r\n  /** EFFECTS **/\r\n  useImperativeHandle(ref, () => ({\r\n    openMenu: () => { handleMenuOpen(filterButtonRef) },\r\n    closeMenu: () => { handleMenuClose(null) },\r\n  }))\r\n\r\n  // useEffect(() => {\r\n  //   //onMount\r\n  //   console.log(props.ref)\r\n  // }, [])\r\n\r\n  /** HANDLERS **/\r\n  const handleIconClick = (e) => {\r\n    handleMenuOpen(e.currentTarget)\r\n    e.stopPropagation()\r\n  }\r\n\r\n  const handleMenuOpen = (menuAnnchor) => {\r\n    setMenuAnchor(menuAnnchor)\r\n  }\r\n\r\n  const handleMenuClose = (e) => {\r\n    setMenuAnchor(null)\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <>\r\n      <IconButton\r\n        color=\"inherit\"\r\n        className={classes.icon}\r\n        ref={filterButtonRef}\r\n        onClick={handleIconClick}\r\n      >\r\n        <FilterListIcon />\r\n      </IconButton>\r\n\r\n      <Popover\r\n        className={classes.popover}\r\n        open={menuOpen}\r\n        anchorEl={menuAnchor}\r\n        onClose={handleMenuClose}\r\n        anchorOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"right\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"left\",\r\n        }}\r\n      >\r\n        <Paper className={classes.paper}>\r\n          <ClickAwayListener onClickAway={handleMenuClose}>\r\n            <List dense disablePadding>\r\n              {props.children}\r\n            </List>\r\n          </ClickAwayListener>\r\n        </Paper>\r\n      </Popover>\r\n    </>\r\n  )\r\n})\r\n\r\n/** EXPORT **/\r\nexport default MenuPopover\r\n","\r\nconst useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  // const mainSidesPadding = theme.spacing(10)\r\n\r\n  return {\r\n    root: {\r\n      // maxWidth: theme.spacing(200),\r\n      // display: 'flex',\r\n      // justifyContent: 'center',\r\n    },\r\n    search: {\r\n      // margin: \"0 auto\",\r\n      // marginBottom: theme.spacing(2),\r\n    },\r\n    minus: {\r\n      // marginLeft: \"10px\",\r\n    },\r\n    rangeInput: {\r\n      // marginTop: \"-10px\",\r\n    },\r\n    autocompleteInput: {\r\n      // maxWidth: \"450px\",\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-lone-blocks */\r\n\r\nimport React, { useEffect, useState, createRef } from \"react\"\r\nimport { Grid, InputAdornment, TextField, ListItem, ListSubheader, Divider } from \"@material-ui/core\"\r\nimport { Autocomplete } from \"@material-ui/lab\"\r\nimport { withStyles } from \"@material-ui/styles\"\r\nimport { connect } from \"react-redux\"\r\nimport Scryfall from \"scryfall-client\"\r\nimport _ from \"lodash\"\r\n\r\nimport { setFilters } from '@/Logic/redux'\r\nimport { TextOption, AutocompleteOptions } from \"./utils\"\r\nimport FilterPopover from \"./FilterPopover\"\r\nimport useStyles from \"./styles\"\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  filters: state.actions.app.collection.filters,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    setFilters: (filters) => dispatch(setFilters(filters)),\r\n  },\r\n})\r\n\r\n\r\nconst FilterProvider = ({\r\n  /** VARS **/\r\n  ...props\r\n}) => {\r\n  const {\r\n    dispatch,\r\n    classes,\r\n    filters,\r\n  } = props\r\n  const filtersMenuRef = createRef()\r\n\r\n  const [setsData, setSetsData] = useState([])\r\n  const [cardName, setCardName] = useState('')\r\n\r\n  const [oracleText, setOracleText] = useState('')\r\n  const [typeLine, setTypeLine] = useState('')\r\n  // const [tags, setTags] = useState('')\r\n  const [tagArray, setTagArray] = useState([])\r\n\r\n  // const [selectedColors, setSelectedColors] = useState([])\r\n  // const [selectedManaCosts, setSelectedManaCosts] = useState([])\r\n  const [selectedSets, setSelectedSets] = useState([])\r\n\r\n  // const [amountMin, setAmountMin] = useState(0)\r\n  // const [amountMax, setAmountMax] = useState(9999)\r\n  // const [priceMin, setPriceMin] = useState(0)\r\n  // const [priceMax, setPriceMax] = useState(9999)\r\n\r\n  // const [foil, setFoil] = useState(\"Both\")\r\n  // const [signed, setSigned] = useState(\"Both\")\r\n  // const [altered, setAltered] = useState(\"Both\")\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    const fetchSets = async () => {\r\n      const allSets = await Scryfall.getSets()\r\n      setSetsData(\r\n        _.chain(allSets)\r\n          // .filter(set =>\r\n          //   set.set_type === 'token'\r\n          // )\r\n          .map(set => ({\r\n            ...set,\r\n            set_type: _.chain(set.set_type).replace(/[_]+/g, ' ').upperFirst().value(),\r\n            released_at: new Date(set.released_at),\r\n          }))\r\n          .sortBy(['set_type', 'released_at'])\r\n          .value()\r\n      )\r\n    }\r\n    fetchSets()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    dispatch.setFilters({\r\n      filters: {\r\n        name: v => v.toLowerCase().includes(cardName.toLowerCase()),\r\n        oracle_text: v => oracleText ? v?.toLowerCase().includes(oracleText) : true,\r\n        type_line: v => v.toLowerCase().includes(typeLine),\r\n        tag: tagArray.length > 0 ? tagArray : true,\r\n        set: selectedSets.length > 0 ? selectedSets : true,\r\n        // colors: selectedColors,\r\n        // mana_cost: selectedManaCosts,\r\n        // amount: (v) => v >= amountMin && v <= amountMax,\r\n        // price: (v, item) => item.amount * item.prices.usd >= priceMin && item.amount * item.prices.usd <= priceMax,\r\n        // foil: (v) => getRadioAsBoolean(v, foil),\r\n        // signed: (v) => getRadioAsBoolean(v, signed),\r\n        // altered: (v) => getRadioAsBoolean(v, altered),\r\n      }\r\n    })\r\n  }, [cardName, oracleText, typeLine, tagArray, selectedSets])\r\n  // }, [cardName, oracleText, type, selectedColors, selectedManaCosts, selectedSets, amountMin, amountMax, priceMin, priceMax, foil, signed, altered])\r\n\r\n  useEffect(() => {\r\n    if (Array.isArray(filters.tag))\r\n      setTagArray(filters.tag)\r\n  }, [filters])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleTagChange = (value) => {\r\n    setTagArray(state => (\r\n      _.chain(value)\r\n        .map(v => v.trim())\r\n        .compact()\r\n        .uniqBy(v => v.toLowerCase())\r\n        .value()\r\n    ))\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <Grid item container className={classes.root}>\r\n      <TextField\r\n        id=\"filled-search\"\r\n        label=\"Search Card Name\"\r\n        size='small'\r\n        type=\"search\"\r\n        color='secondary'\r\n        variant=\"filled\"\r\n        className={classes.search}\r\n        value={cardName}\r\n        onChange={(e) => setCardName(e.target.value)}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <FilterPopover ref={filtersMenuRef}>\r\n                <ListSubheader>\r\n                  Filters\r\n                </ListSubheader>\r\n                <ListItem>\r\n                  <TextOption\r\n                    label=\"Oracle Text\"\r\n                    value={oracleText}\r\n                    onChange={e => setOracleText(e.target.value)}\r\n                  />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <TextOption\r\n                    label=\"Type\"\r\n                    value={typeLine}\r\n                    onChange={e => setTypeLine(e.target.value)}\r\n                  />\r\n                </ListItem>\r\n\r\n                <ListItem style={{ paddingRight: 28 }}>\r\n                  <Autocomplete multiple freeSolo //disableClearable autoSelect\r\n                    limitTags={4}\r\n                    label='Tags'\r\n                    variant='outlined'\r\n                    margin='dense'\r\n                    size='small'\r\n                    color='secondary'\r\n                    options={[]}\r\n                    value={tagArray}\r\n                    onChange={(e, newValue) => { handleTagChange(newValue) }}\r\n                    onInputChange={(e, newInputValue) => {\r\n                      if (newInputValue?.match(/[;,]/g)) {\r\n                        const values = _\r\n                          .chain(newInputValue)\r\n                          .split(/[;,]/)\r\n                          .map(v => v.trim())\r\n                          .compact()\r\n                          .uniqBy(v => v.toLowerCase())\r\n                          .value()\r\n                        if (values.length > 0)\r\n                          handleTagChange(tagArray.concat(values))\r\n                        else\r\n                          handleTagChange(tagArray)\r\n                      }\r\n                    }}\r\n                    renderInput={(props) => (\r\n                      <TextField multiline\r\n                        {...props}\r\n                        color='secondary'\r\n                        variant='outlined'\r\n                        label='Tags'\r\n                        helperText={\r\n                          ['Tags are seperated by ', <code>{'Enter'}</code>, ' or ', <code>{'[;,]'}</code>]\r\n                            .map((item, i) =>\r\n                              <React.Fragment key={i}>{item}</React.Fragment>\r\n                            )\r\n                        }\r\n                      />\r\n                    )}\r\n                  />\r\n                </ListItem>\r\n\r\n                <Divider />\r\n\r\n                <ListItem>\r\n                  <AutocompleteOptions\r\n                    label=\"Sets\"\r\n                    options={setsData}\r\n                    value={selectedSets}\r\n                    onChange={(e, v) => setSelectedSets(v)}\r\n                    className={classes.autocompleteInput}\r\n                    groupBy={option => option.set_type}\r\n                    getOptionLabel={option => option.name}\r\n                    getOptionSelected={(option, value) => (\r\n                      option.code === value.code\r\n                    )}\r\n                    ChipProps={{\r\n                      label: option => option.code,\r\n                    }}\r\n                  />\r\n                </ListItem>\r\n\r\n                {/* getAutocompleteOptions(\r\n                    \"Colors\",\r\n                    getAllColors(),\r\n                    selectedColors,\r\n                    setSelectedColors,\r\n                    classes.autocompleteInput\r\n                  ),\r\n                  getAutocompleteOptions(\r\n                    \"Mana Costs\",\r\n                    symbols,\r\n                    selectedManaCosts,\r\n                    setSelectedManaCosts,\r\n                    classes.autocompleteInput\r\n                  ),\r\n                  getRangeOptions(\r\n                    \"Price\",\r\n                    priceMin,\r\n                    priceMax,\r\n                    setPriceMin,\r\n                    setPriceMax,\r\n                    classes.rangeInput,\r\n                    classes.minus\r\n                  ),\r\n                  getRangeOptions(\r\n                    \"Amount\",\r\n                    amountMin,\r\n                    amountMax,\r\n                    setAmountMin,\r\n                    setAmountMax,\r\n                    classes.rangeInput,\r\n                    classes.minus\r\n                  ),\r\n                  getRadioOptions(\"Foil\", foil, setFoil),\r\n                  getRadioOptions(\"Signed\", signed, setSigned),\r\n                  getRadioOptions(\"Altered\", altered, setAltered), */}\r\n              </FilterPopover>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n    </Grid>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default withStyles(useStyles)(\r\n  connect(mapStateToProps, mapDispatchToProps)(\r\n    FilterProvider\r\n  )\r\n)\r\n","import { Grid, Tooltip, Fab } from '@material-ui/core'\r\nimport {\r\n  Add as AddIcon,\r\n  CloudDownload as CloudDownloadIcon,\r\n} from '@material-ui/icons'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nconst MyFabs = ({\r\n  /** VARS **/\r\n  ...props\r\n}) => {\r\n  const history = useHistory()\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleFabClick = (id) => (e) => {\r\n    switch (id) {\r\n      case 'import':\r\n        history.push('/collection/import')\r\n        break\r\n\r\n      case 'export':\r\n        history.push('/collection/export')\r\n        break\r\n\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <Grid container spacing={1} direction=\"column-reverse\">\r\n      <Grid item>\r\n        <Tooltip arrow\r\n          placement='left'\r\n          title='Import Cards'\r\n          enterDelay={250}\r\n        >\r\n          <Fab\r\n            name='import'\r\n            size='small'\r\n            color='primary'\r\n            onClick={handleFabClick('import')}\r\n          >\r\n            <AddIcon />\r\n          </Fab>\r\n        </Tooltip>\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <Tooltip arrow\r\n          placement='left'\r\n          title='Export Cards'\r\n          enterDelay={250}\r\n        >\r\n          <Fab\r\n            name='export'\r\n            size='small'\r\n            color='primary'\r\n            onClick={handleFabClick('export')}\r\n          >\r\n            <CloudDownloadIcon />\r\n          </Fab>\r\n        </Tooltip>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default MyFabs","const useStyles = (theme) => {\r\n  const topBottomPadding = theme.spacing(8)\r\n\r\n  return {\r\n    root: {\r\n\r\n    },\r\n    modal: {\r\n      maxWidth: '90vw',\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","import { Fragment, useState, useEffect, useRef, useImperativeHandle } from 'react'\r\nimport { Grid, Hidden, Paper, Fade, Modal, Typography, TextField, MenuItem, FormControlLabel, Checkbox, InputAdornment, CircularProgress, Button, Tooltip, Divider } from '@material-ui/core'\r\nimport { Add as AddIcon } from '@material-ui/icons'\r\nimport { Autocomplete } from '@material-ui/lab'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport Scryfall from 'scryfall-client'\r\nimport cloneDeep from 'lodash/cloneDeep'\r\n\r\nimport { getCardPrints } from '@/Api'\r\nimport { CardImage } from '@/Components'\r\nimport { addCardPrice, addLayoutKeywords } from '@/Providers'\r\nimport useStyles from './styles'\r\n\r\n\r\nconst ImportWizard = ({\r\n  /** VARS **/\r\n  refs: ref,\r\n  updateHeight = () => { },\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n  } = props\r\n  const refs = {\r\n    cardName: {\r\n      autocomplete: useRef(),\r\n      input: useRef(),\r\n      listbox: useRef(),\r\n    },\r\n  }\r\n\r\n  const [card, setCard] = useState({})\r\n  const [newCards, setNewCards] = useState([])\r\n\r\n  const [menuHoverItem, setMenuHoverItem] = useState(null)\r\n  const [printsSet, setPrintsSet] = useState([])\r\n  const [printsLang, setPrintsLang] = useState([])\r\n  const [cardNames, setCardNames] = useState([])\r\n  const [listboxOpen, setListboxOpen] = useState(false)\r\n  const [modalOpen, setModalOpen] = useState(false)\r\n\r\n\r\n  /** METHODS **/\r\n  useImperativeHandle(ref, () => ({\r\n    handleSubmit,\r\n    reset: handleReset,\r\n    focus: handleFocus,\r\n  }))\r\n\r\n\r\n  /** FUNCTIONS **/\r\n  const resetCard = () => {\r\n    setPrintsSet([])\r\n    setPrintsLang([])\r\n    setCardNames([])\r\n    setCard({})\r\n\r\n    onMenuHover(null)\r\n    // dispatch.setEditEnabled(false)\r\n  }\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    updateHeight() // update height on each render\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (!card.name) {\r\n      resetCard()\r\n      return\r\n    }\r\n\r\n    Scryfall.getCardNamed(card.name)\r\n      .then(cardData => {\r\n        handleCardInfoChange({\r\n          ...cardData,\r\n          amount: card.amount || 1,\r\n          condition: card.condition || 'NM',\r\n          foil: card.foil || false,\r\n          signed: card.signed || false,\r\n          altered: card.altered || false,\r\n          misprint: card.misprint || false,\r\n        })\r\n\r\n        setPrintsSet([])\r\n        setPrintsLang([])\r\n\r\n        Promise\r\n          .all([\r\n            getCardPrints(cardData, 'set'),\r\n            getCardPrints(cardData, 'lang'),\r\n          ])\r\n          .then(([set, lang]) => {\r\n            setPrintsSet(set)\r\n            setPrintsLang(lang)\r\n          })\r\n      })\r\n  }, [card.name])\r\n\r\n  useEffect(() => {\r\n    if (card.set) {\r\n      setPrintsLang([])\r\n      getCardPrints(card, 'lang')\r\n        .then(lang => {\r\n          let data = lang[0]\r\n          delete data.foil\r\n          handleCardInfoChange(data)\r\n          setPrintsLang(lang)\r\n        })\r\n    }\r\n  }, [card.set])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleSubmit = (e) => {\r\n    return new Promise((resolve, reject) => {\r\n      const cardName = refs.cardName.input.current?.value.trim() || ''\r\n\r\n      if (cardName === '' && newCards.length > 0) {\r\n        setModalOpen({\r\n          source: 'submit',\r\n          reject,\r\n          resolve: () => {\r\n            resolve(newCards)\r\n            closeModal()\r\n          }\r\n        })\r\n      }\r\n      else {\r\n        if (cardName === card.name) {\r\n          handleAddToNewCards()\r\n        }\r\n        else if (cardName && cardNames.length > 0 && cardNames[0].toLowerCase().startsWith(cardName.toLowerCase())) {\r\n          handleCardInfoChange({ name: cardNames[0] })\r\n          setListboxOpen(false)\r\n        }\r\n\r\n        reject()\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleFocus = () => {\r\n    refs.cardName.input.current?.focus()\r\n  }\r\n\r\n  const handleReset = () => {\r\n    setNewCards([])\r\n    resetCard()\r\n  }\r\n\r\n  const handleAddToNewCards = () => {\r\n    const cardName = refs.cardName.input.current?.value.trim() || ''\r\n\r\n    if (cardName && cardName === card.name && card.set && card.lang) {\r\n      setNewCards(cards => [...cards, cloneDeep(card)])\r\n      resetCard()\r\n    }\r\n  }\r\n\r\n  const closeModal = () => {\r\n    if (modalOpen.hasOwnProperty('reject'))\r\n      modalOpen.reject()\r\n    setModalOpen(false)\r\n  }\r\n\r\n  const onMenuHover = (hoverItem) => {\r\n    if (hoverItem) {\r\n      // hoverItem.foil = card.foil\r\n      hoverItem = addCardPrice(hoverItem)\r\n      hoverItem = addLayoutKeywords(hoverItem)\r\n      setMenuHoverItem(hoverItem)\r\n    }\r\n    else\r\n      setMenuHoverItem(null)\r\n  }\r\n\r\n  const handleCardInfoChange = ({ ...data }) => {\r\n    setMenuHoverItem(null)\r\n    setCard(card => {\r\n      card = {\r\n        ...card,\r\n        ...data,\r\n      }\r\n\r\n      card = addCardPrice(card)\r\n      card = addLayoutKeywords(card)\r\n      return card\r\n    })\r\n  }\r\n\r\n  const handleCardNameChange = async (cardName) => {\r\n    try {\r\n      if (cardName)\r\n        setCardNames(\r\n          await Scryfall.autocomplete(cardName)\r\n        )\r\n      else\r\n        throw Error()\r\n    }\r\n    catch (err) {\r\n      setCardNames([])\r\n    }\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <>\r\n      <Grid item container justifyContent='center' alignItems='flex-start' spacing={2} xs={12} className={classes.root}>\r\n        <Grid item container justifyContent='center' alignItems='flex-start' spacing={5} xs={12} lg={9}>\r\n          <Hidden smDown>\r\n            <Grid item>\r\n              <CardImage tiltEnabled transform3dEnabled\r\n                showPrice={Boolean(card.prices)}\r\n                card={menuHoverItem || card}\r\n              />\r\n            </Grid>\r\n          </Hidden>\r\n          <Hidden mdUp>\r\n            <Grid item style={{ marginBottom: 16 }}>\r\n              <CardImage showPrice tiltEnabled transform3dEnabled\r\n                card={menuHoverItem || card}\r\n              />\r\n            </Grid>\r\n          </Hidden>\r\n\r\n          <Grid item container xs>\r\n            <Grid item container justifyContent='center' alignItems='center' xs={12} wrap='nowrap'>\r\n              <Grid item xs>\r\n                <Autocomplete clearOnEscape\r\n                  ref={refs.cardName.autocomplete}\r\n                  handleHomeEndKeys={false}\r\n                  open={listboxOpen}\r\n                  onOpen={() => setListboxOpen(true)}\r\n                  onClose={() => setListboxOpen(false)}\r\n                  label='Card Name'\r\n                  variant='outlined'\r\n                  margin='dense'\r\n                  size='small'\r\n                  color='secondary'\r\n                  options={cardNames}\r\n                  value={card?.name || ''}\r\n                  onChange={(e, v) => { handleCardInfoChange({ name: v }) }}\r\n                  onInputChange={(e, v) => { handleCardNameChange(v) }}\r\n\r\n                  renderInput={(props) => (\r\n                    <TextField\r\n                      {...props}\r\n                      color='secondary'\r\n                      variant='outlined'\r\n                      label='Card Name'\r\n                      style={{ marginLeft: 0 }}\r\n                      inputRef={refs.cardName.input}\r\n                      InputProps={{\r\n                        ...props.InputProps,\r\n                        endAdornment: (\r\n                          <Fragment>\r\n                            {cardNames === null && <CircularProgress size={20} />}\r\n                            {props.InputProps.endAdornment}\r\n                          </Fragment>\r\n                        ),\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n              <Grid item style={{ margin: '0px 8px' }}>\r\n                <Tooltip arrow\r\n                  disableFocusListener={!card?.name}\r\n                  disableHoverListener={!card?.name}\r\n                  disableTouchListener={!card?.name}\r\n                  placement='top'\r\n                  title='Add card to import list'\r\n                >\r\n                  <span>\r\n                    <Button\r\n                      disabled={!card?.name}\r\n                      variant='contained'\r\n                      color='secondary'\r\n                      onClick={handleAddToNewCards}\r\n                      style={{ minWidth: 0, width: '3em' }}\r\n                    >\r\n                      <AddIcon />\r\n                    </Button>\r\n                  </span>\r\n                </Tooltip>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid item container direction='column' justifyContent='center' alignItems='flex-start' style={{ maxWidth: 'min-content' }}>\r\n              <Grid item>\r\n                <TextField\r\n                  disabled={!card?.name}\r\n                  size='small'\r\n                  variant='outlined'\r\n                  type='number'\r\n                  label='Amount'\r\n                  color='secondary'\r\n                  value={card?.amount || ''}\r\n                  inputProps={{\r\n                    inputMode: 'numeric',\r\n                    min: 1,\r\n                  }}\r\n                  onChange={e => handleCardInfoChange({ amount: e.target.value })}\r\n                  style={{ marginLeft: 0 }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item style={{ width: '9em', paddingTop: 8 }}>\r\n                <TextField select\r\n                  disabled={!card?.name}\r\n                  color='secondary'\r\n                  variant='outlined'\r\n                  margin='dense'\r\n                  size='small'\r\n                  align='left'\r\n                  label='Condition'\r\n                  value={card?.condition || ''}\r\n                  onChange={e => handleCardInfoChange({ condition: e.target.value })}\r\n                  style={{ marginLeft: 0 }}\r\n                >\r\n                  {\r\n                    [['NM', 'NM'], ['LP', 'LP'], ['MP', 'MP'], ['HP', 'HP'], ['DAMAGED', 'Damaged']]\r\n                      .map(cond =>\r\n                        <MenuItem key={cond[0]} value={cond[0]}>{cond[1]}</MenuItem>)\r\n                  }\r\n                </TextField>\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  disabled={!card?.name}\r\n                  label='Foil'\r\n                  control={\r\n                    <Checkbox\r\n                      checked={Boolean(card?.foil)}\r\n                      onChange={e => handleCardInfoChange({ foil: e.target.checked })}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  disabled={!card?.name}\r\n                  label='Signed'\r\n                  control={\r\n                    <Checkbox\r\n                      checked={Boolean(card?.signed)}\r\n                      onChange={e => handleCardInfoChange({ signed: e.target.checked })}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  disabled={!card?.name}\r\n                  label='Altered'\r\n                  control={\r\n                    <Checkbox\r\n                      checked={Boolean(card?.altered)}\r\n                      onChange={e => handleCardInfoChange({ altered: e.target.checked })}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  disabled={!card?.name}\r\n                  label='Misprint'\r\n                  control={\r\n                    <Checkbox\r\n                      checked={Boolean(card?.misprint)}\r\n                      onChange={e => handleCardInfoChange({ misprint: e.target.checked })}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid item container direction='column' spacing={1} xs={12} sm={10} md>\r\n              <Grid item container wrap='nowrap' spacing={1}>\r\n                <Grid item xs style={{ width: '1px' }}>\r\n                  <TextField select\r\n                    color='secondary'\r\n                    variant='outlined'\r\n                    margin='dense'\r\n                    size='small'\r\n                    align='left'\r\n                    disabled={!card.name || printsSet?.length <= 1}\r\n                    label='Set'\r\n                    value={((!card.name && []) || printsSet || []).length === 0 ? '' : card.id}\r\n                    onChange={e => {\r\n                      const cardData = printsSet.find(item => item.id === e.target.value)\r\n                      delete cardData.foil\r\n                      handleCardInfoChange(cardData)\r\n                    }}\r\n                    SelectProps={{\r\n                      onClose: e => onMenuHover(card)\r\n                    }}\r\n                    InputProps={card?.name && printsSet?.length === 0\r\n                      ? {\r\n                        startAdornment: (\r\n                          <InputAdornment position='start'>\r\n                            <CircularProgress size={20} />\r\n                          </InputAdornment>\r\n                        )\r\n                      }\r\n                      : {}\r\n                    }\r\n                  >\r\n                    {\r\n                      (printsSet || [])\r\n                        .map((item) =>\r\n                          <MenuItem\r\n                            key={item.id}\r\n                            value={item.id}\r\n                            onMouseEnter={e => onMenuHover({ ...item, foil: card?.foil })}\r\n                            onMouseLeave={e => onMenuHover(null)}\r\n                          >\r\n                            {`${item.set_name} [#${item.collector_number}]`}\r\n                          </MenuItem>\r\n                        )\r\n                    }\r\n                  </TextField>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <TextField select\r\n                    color='secondary'\r\n                    variant='outlined'\r\n                    margin='dense'\r\n                    size='small'\r\n                    align='left'\r\n                    label={card?.name ? 'Language' : 'Lang'}\r\n                    disabled={!card.name || printsLang?.length <= 1}\r\n                    value={((!card.name && []) || printsLang || []).length === 0 ? '' : card.id}\r\n                    style={{ width: '6em' }}\r\n                    onChange={e => {\r\n                      const cardData = printsLang.find(item => item.id === e.target.value)\r\n                      delete cardData.foil\r\n                      handleCardInfoChange(cardData)\r\n                    }}\r\n                    SelectProps={{\r\n                      onClose: e => onMenuHover(card)\r\n                    }}\r\n                    InputProps={card?.name && printsLang?.length === 0\r\n                      ? {\r\n                        startAdornment: (\r\n                          <InputAdornment position='start'>\r\n                            <CircularProgress size={20} />\r\n                          </InputAdornment>\r\n                        )\r\n                      }\r\n                      : {}\r\n                    }\r\n                  >\r\n                    {\r\n                      (printsLang || [])\r\n                        .map(item =>\r\n                          <MenuItem\r\n                            key={item.id}\r\n                            value={item.id}\r\n                            onMouseEnter={e => onMenuHover({ ...item, foil: card?.foil })}\r\n                            onMouseLeave={e => onMenuHover(null)}\r\n                          >\r\n                            {item.lang}\r\n                          </MenuItem>\r\n                        )\r\n                    }\r\n                  </TextField>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item style={{ marginRight: 11 }}>\r\n                <Autocomplete multiple freeSolo disableClearable //autoSelect\r\n                  disabled={!card?.name}\r\n                  limitTags={4}\r\n                  label='Tags'\r\n                  variant='outlined'\r\n                  margin='dense'\r\n                  size='small'\r\n                  color='secondary'\r\n                  options={[]}\r\n                  value={card?.tag || []}\r\n                  onChange={(e, newValue) => { handleCardInfoChange({ tag: newValue }) }}\r\n                  onInputChange={(e, newInputValue) => {\r\n                    if (newInputValue?.match(/[;,]/g)) {\r\n                      const values = lodash\r\n                        .chain(newInputValue)\r\n                        .split(/[;,]/)\r\n                        .map(v => v.trim())\r\n                        .compact()\r\n                        .uniqBy(v => v.toLowerCase())\r\n                        .value()\r\n                      if (values.length > 0)\r\n                        handleCardInfoChange({ tag: card?.tag.concat(values) })\r\n                      else\r\n                        handleCardInfoChange({ tag: card?.tag })\r\n                    }\r\n                  }}\r\n                  renderInput={(props) => (\r\n                    <TextField multiline\r\n                      {...props}\r\n                      color='secondary'\r\n                      variant='outlined'\r\n                      label='Tags'\r\n                      helperText={\r\n                        ['Tags are seperated by ', <code>{'Enter'}</code>, ' or ', <code>{'[;,]'}</code>]\r\n                          .map((item, i) =>\r\n                            <Fragment key={i}>{item}</Fragment>\r\n                          )\r\n                      }\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Divider />\r\n        </Grid>\r\n\r\n        <Grid item container direction='row' justifyContent='flex-start' alignItems='center' xs={12} spacing={1}>\r\n          <Grid item xs={12} align='left' component={Typography}>\r\n            {\r\n              newCards.length === 0\r\n                ? <>\r\n                  <Typography gutterBottom variant='h6'>\r\n                    No new cards to add.\r\n                  </Typography>\r\n                  <Typography color='textSecondary' variant='body1'>\r\n                    Start adding cards by entering a card name above and filling the appropriate fields.<br />\r\n                    You may use the keyboard to navigate the fields and to select options.<br />\r\n                    Press enter while the search bar is focused to add the current card to the list. If no text is present in the search bar, pressing enter will submit the form instead.\r\n                  </Typography>\r\n                </>\r\n                : <Typography gutterBottom variant='h6'>\r\n                  {\r\n                    newCards.length === 1\r\n                      ? `${newCards.length} card entry:`\r\n                      : `${newCards.length} card entires:`\r\n                  }\r\n                </Typography>\r\n            }\r\n          </Grid>\r\n          <Grid item component='ul' style={{ textAlign: 'left' }}>\r\n            {\r\n              newCards.map((card, i) => (\r\n                <Typography component='li' variant='body1' key={i}>\r\n                  {[\r\n                    `x${card.amount}`,\r\n                    card.name,\r\n                    `[${card.set.toUpperCase()}]`,\r\n                    `[#${card.collector_number}]`,\r\n                    `[@${card.lang}]`,\r\n                    card.foil ? `[F]` : '',\r\n                  ].join(' ')}\r\n                </Typography>\r\n              ))\r\n            }\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n\r\n      {/* \"ARE YOU SURE\" MODAL */}\r\n      <Grid container spacing={5} justifyContent='center' alignItems='center'\r\n        component={Modal} closeAfterTransition\r\n        onClose={closeModal}\r\n        open={Boolean(modalOpen)}\r\n        BackdropProps={{ timeout: 500 }}\r\n      >\r\n        <Grid item xs={8} sm={6} lg={4}\r\n          component={Fade} in={Boolean(modalOpen)}\r\n        >\r\n          <Paper>\r\n            <Grid container justifyContent='center' alignItems='center' spacing={1} className={classes.modal}>\r\n              {\r\n                (() => {\r\n                  switch (modalOpen.source) {\r\n                    case 'delete':\r\n                      return <>\r\n                        <Grid item xs={12} align='center'>\r\n                          <Typography noWrap variant='h5' align='left'>\r\n                            Confirm Action\r\n                          </Typography>\r\n                          <Typography noWrap variant='body1' align='left'>\r\n                            Are you sure you want to delete the selected card?\r\n                          </Typography>\r\n                          <Typography noWrap variant='body2' align='left' color='error'>\r\n                            This action is irreversible.\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item container justifyContent='flex-end' xs={12} spacing={1}>\r\n                          <Grid item>\r\n                            <Button variant='outlined' onClick={closeModal}> {/* close modal & reject promise */}\r\n                              Nop\r\n                            </Button>\r\n                          </Grid>\r\n                          <Grid item>\r\n                            <Button variant='contained' color='secondary'>\r\n                              {/* TODO: handle card delete */}\r\n                              Yep\r\n                            </Button>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </>\r\n\r\n                    case 'submit':\r\n                      return <>\r\n                        <Grid item xs={12} align='center'>\r\n                          <Typography noWrap variant='h5' align='left'>\r\n                            Confirm Action\r\n                          </Typography>\r\n                          <Typography noWrap variant='body1' align='left'>\r\n                            Update {newCards.length} card {newCards.length > 1 ? 'entries' : 'entry'}?\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item container justifyContent='flex-end' xs={12} spacing={1}>\r\n                          <Grid item>\r\n                            <Button variant='outlined' onClick={closeModal}> {/* close modal & reject promise */}\r\n                              Nop\r\n                            </Button>\r\n                          </Grid>\r\n                          <Grid item>\r\n                            <Button variant='contained' color='secondary' onClick={modalOpen.resolve}>\r\n                              Yep\r\n                            </Button>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </>\r\n\r\n                    default:\r\n                      return <></>\r\n                  }\r\n                })()\r\n              }\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    ImportWizard\r\n  )","import { useState, useEffect, useRef, useImperativeHandle } from 'react'\r\nimport { Grid, TextField, Typography } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport compact from 'lodash/compact'\r\nimport upperFirst from 'lodash/upperFirst'\r\nimport Scryfall from 'scryfall-client'\r\n\r\nimport { getCardPrints } from '@/Api'\r\nimport useStyles from './styles'\r\n\r\n\r\nconst BulkImport = ({\r\n  /** VARS **/\r\n  refs: ref,\r\n  updateHeight,\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n  } = props\r\n  const inputRef = useRef()\r\n\r\n  const [cardListText, setCardListText] = useState('')\r\n  const [errorMessages, setErrorMessages] = useState([])\r\n\r\n\r\n  /** METHODS **/\r\n  useImperativeHandle(ref, () => ({\r\n    handleSubmit,\r\n    reset: handleReset,\r\n    focus: handleFocus,\r\n  }))\r\n\r\n  const bulkToCards = async (text) => {\r\n    let cards = []\r\n    let errors = []\r\n    const lines = text\r\n      .trim()\r\n      .split('\\n')\r\n      .map(line => line.trim())\r\n\r\n\r\n    for (let i = 0; i < lines.length; i++) {\r\n      let words = compact(lines[i].split(/[\\s]+/g)) // split on whitespaces (greedy)\r\n      const card = { line: i }\r\n\r\n      if (words.length === 0)\r\n        continue\r\n\r\n\r\n      // card.amount //\r\n      if (words[0].match(/(^x[1-9][0-9]*$)|(^[1-9][0-9]*x$)/gi)) {\r\n        // `x123` or `123x`\r\n        card.amount = parseInt(words[0].replace(/x/gi, ''))\r\n        words.splice(0, 1)\r\n      }\r\n      else if (words[0].match(/^[1-9][0-9]*$/g)) {\r\n        // `123` with no `x`\r\n        card.amount = parseInt(words[0])\r\n        words.splice(0, 1)\r\n      }\r\n      else if (words[0].match(/(^x{2,}[0-9]+$)|(^[0-9]+x{2,}$)|(^[^x][0-9]+$)|((^[0-9]+[^x]$))/gi)) {\r\n        errors.push({ line: i, message: `Invalid amount format.` })\r\n      }\r\n      else\r\n        card.amount = 1\r\n\r\n\r\n      // card.name //\r\n      if (words[0].match(/^\\[/g))\r\n        errors.push({ line: i, message: `Card name cannot start with '['.` })\r\n\r\n      while (words.length > 1 && words[1].match(/^[^[]/g)) // join words until we find a `[`\r\n        words.splice(0, 2, words.slice(0, 2).join(' '))\r\n      card.name = words.splice(0, 1)[0]\r\n\r\n\r\n      // bracket options //\r\n      while (words.length > 0) {\r\n        //foil\r\n        if (words[0].match(/^\\[f\\]$/gi))\r\n          card.foil = true\r\n\r\n        //set\r\n        else if (words[0].match(/^\\[\\w+]$/g))\r\n          card.set = words[0].replace(/[\\]\\[]/g, '')\r\n\r\n        //collector number\r\n        else if (words[0].match(/^\\[#.+]$/g))\r\n          card.collector_number = words[0].replace(/[#\\]\\[]/g, '')\r\n\r\n        //lang\r\n        else if (words[0].match(/^\\[@[a-z]+]$/gi))\r\n          card.lang = words[0].replace(/[\\]\\[]/g, '')\r\n\r\n        words.splice(0, 1)\r\n      }\r\n\r\n      cards.push(card)\r\n    }\r\n\r\n    // add scryfall data using fuzzy search\r\n    cards = await Promise.all(\r\n      cards.map(async (card) => {\r\n        let data = {}\r\n\r\n        try {\r\n          try {\r\n            data = await Scryfall.getCard(card.name, 'fuzzyName')\r\n          }\r\n          catch {\r\n            throw new Error(`Card name not found: \"${card.name}\".`)\r\n          }\r\n\r\n          const setPrints = await getCardPrints(data, 'set')\r\n\r\n          if (card.set) {\r\n            let flag = true\r\n            for (const item of setPrints) {\r\n              if (item.set.toLowerCase() === card.set.toLowerCase()) {\r\n                delete item.foil\r\n                data = {\r\n                  ...data,\r\n                  ...item,\r\n                }\r\n                flag = false\r\n                break\r\n              }\r\n            }\r\n            if (flag)\r\n              throw new Error(`Set not found: \"${card.set}\".`)\r\n          }\r\n\r\n          if (card.collector_number) {\r\n            let flag = true\r\n            for (const item of setPrints) {\r\n              if (item.collector_number === card.collector_number) {\r\n                delete item.foil\r\n                data = {\r\n                  ...data,\r\n                  ...item,\r\n                }\r\n                flag = false\r\n                break\r\n              }\r\n            }\r\n            if (flag)\r\n              throw new Error(`Collector number not found: \"${card.collector_number}\".`)\r\n          }\r\n\r\n          if (card.lang) {\r\n            const setLangs = await getCardPrints(data, 'lang')\r\n            for (const item of setLangs) {\r\n              if (item.lang.toLowerCase() === card.lang.toLowerCase()) {\r\n                delete item.foil\r\n                data = {\r\n                  ...data,\r\n                  ...item,\r\n                }\r\n                break\r\n              }\r\n            }\r\n          }\r\n\r\n          return {\r\n            ...data,\r\n            ...card,\r\n            foil: Boolean(card.foil),\r\n          }\r\n        }\r\n        catch (error) {\r\n          console.error(error)\r\n          return {\r\n            card,\r\n            error: {\r\n              line: card.line,\r\n              message: error.message,\r\n            },\r\n          }\r\n        }\r\n      })\r\n    )\r\n\r\n    cards = cards.filter(card => {\r\n      if (card.hasOwnProperty('error')) {\r\n        errors.push(card.error)\r\n        return false\r\n      }\r\n      return true\r\n    })\r\n\r\n    errors.sort((a, b) => a.line - b.line)\r\n    return { cards, errors }\r\n  }\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    updateHeight() // update height on each render\r\n  })\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleSubmit = async (e) => {\r\n    if (cardListText.trim() === '')\r\n      throw new Error('No cards to import')\r\n\r\n    const { cards, errors } = await bulkToCards(cardListText)\r\n\r\n    if (errors.length > 0) {\r\n      setErrorMessages(errors)\r\n      throw new Error(errors)\r\n    }\r\n\r\n    return cards\r\n  }\r\n\r\n  const handleFocus = () => {\r\n    inputRef.current?.focus()\r\n  }\r\n\r\n  const handleReset = () => {\r\n    setErrorMessages([])\r\n    setCardListText('')\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <Grid container justifyContent='center' alignItems='center' spacing={1}>\r\n      {\r\n        errorMessages.length > 0 &&\r\n        <>\r\n          <Grid item xs={12} component={Typography} color='error' variant='h6' align='left' style={{ marginLeft: 8 }}>\r\n            We found errors in your card list\r\n          </Grid>\r\n          <Grid item container xs={12} direction='column' style={{ marginLeft: 8, marginBottom: 12 }}>\r\n            {\r\n              Object.values(errorMessages).map(({ line, message }, i) => (\r\n                <Grid item key={i} component='li' align='left' style={{ whiteSpace: 'break-spaces', marginLeft: 12 }}>\r\n                  <Typography color='error' align='left'>\r\n                    {`Line ${line + 1}, \\t${upperFirst(message)}`}\r\n                  </Typography>\r\n                </Grid>\r\n              ))\r\n            }\r\n          </Grid>\r\n        </>\r\n      }\r\n\r\n      <Grid item xs={12}>\r\n        <TextField multiline fullWidth\r\n          inputRef={inputRef}\r\n          color='secondary'\r\n          rows={20}\r\n          variant='filled'\r\n          label='Card List'\r\n          value={cardListText}\r\n          onChange={e => setCardListText(e.target.value)}\r\n          placeholder={[\r\n            \"Paste your collection here, the supported format is:\",\r\n            \"\\tx2 cardname [setid] [#collectorNumber] [@lang] [isFoil]\",\r\n            \"\",\r\n            \"Fuzzy named search is supported.\",\r\n            \"\",\r\n            \"------------------------\",\r\n            \"\",\r\n            \"2 fireball [m12] [f]\",\r\n            \"atraxa [@fr]\",\r\n            \"3x Garruk's Gorehorn [#306]\",\r\n            \"1x Garruk's Gorehorn [#108]\",\r\n            \"...\",\r\n          ].join('\\n')}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    BulkImport\r\n  )","const useStyles = (theme) => {\r\n  const topBottomPadding = theme.spacing(8)\r\n\r\n  return {\r\n    root: {\r\n      minHeight: `calc(100vh - 2*${topBottomPadding}px)`,\r\n      marginBottom: theme.spacing(2),\r\n      // width: '40vw',\r\n      // flexDirection: \"column\",\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      display: 'flex',\r\n      flexGrow: 1,\r\n    },\r\n    hoverHighlight: {\r\n      cursor: 'pointer',\r\n      '&:hover': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n    view1Container: {\r\n      height: '350px',\r\n    },\r\n    view2Container: {\r\n      padding: [2, 2, 0, 2]\r\n        .map(v => `${theme.spacing(v)}px`)\r\n        .join(' '),\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { useState, useEffect, useRef } from 'react'\r\nimport { Grid, Typography, Paper, Divider, Button, TextField, Box } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport {\r\n  ImportExport as ImportExportIcon,\r\n  ChevronLeft as ChevronLeftIcon,\r\n  ChevronRight as ChevronRightIcon,\r\n} from '@material-ui/icons'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { useSnackbar } from 'notistack'\r\nimport SwipeableViews from 'react-swipeable-views'\r\n\r\nimport Config from '@/Config'\r\nimport { setCurrentTab, setCurrentCollection, updateCollection } from '@/Logic/redux'\r\nimport { MagicdexApi } from '@/Api'\r\nimport { BaseForm } from '@/Components'\r\nimport ImportWizard from './ImportWizard'\r\nimport BulkImport from './BulkImport'\r\nimport useStyles from './styles'\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  username: state.actions.activeUser.username,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    setCurrentTab: (tab) => dispatch(setCurrentTab({ tab })),\r\n    setCurrentCollection: (collection) => dispatch(setCurrentCollection({ collection })),\r\n    updateCollection: (cards) => dispatch(updateCollection({ cards })),\r\n  }\r\n})\r\n\r\n\r\nconst Import = ({\r\n  /** VARS **/\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n    dispatch,\r\n    username,\r\n  } = props\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  const history = useHistory()\r\n\r\n  const refs = {\r\n    viewRef: useRef(),\r\n    wizardRef: useRef(),\r\n    bulkRef: useRef(),\r\n  }\r\n\r\n  const [currentViewIndex, _setCurrentViewIndex] = useState(1)\r\n  const [wizardBackdrop, setWizardBackdrop] = useState(false)\r\n\r\n  const updateHeight = () => setTimeout(refs.viewRef.current?.updateHeight, 10)\r\n\r\n\r\n  /** FUNCTIONS **/\r\n  const updateCollection = async (newCards) => {\r\n    if (Config.MODIFY_DB_ALLOWED) {\r\n      try {\r\n        const res = await MagicdexApi.updateCards(newCards)\r\n        const actions = _.countBy(res, 'action')\r\n\r\n        dispatch.updateCollection(res.map(item => item.card))\r\n\r\n        actions['CREATED'] && enqueueSnackbar(`Created ${actions['CREATED']} card entries`, { variant: 'success' })\r\n        actions['UPDATED'] && enqueueSnackbar(`Updated ${actions['UPDATED']} card entries`, { variant: 'info' })\r\n      }\r\n      catch (error) {\r\n        enqueueSnackbar(`Error updating cards`, { variant: 'error' })\r\n        console.error({ error })\r\n      }\r\n    }\r\n    else {\r\n      dispatch.updateCollection([{ action: 'UPDATED', cards: newCards }])\r\n      enqueueSnackbar(`Updated ${newCards.length} card entries`, { variant: 'info' })\r\n    }\r\n  }\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    //onMount\r\n    dispatch.setCurrentTab('collection')\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (!username)\r\n      return history.push('/login')\r\n  }, [username])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const setCurrentViewIndex = (index) => {\r\n    _setCurrentViewIndex(index)\r\n    updateHeight()\r\n    \r\n    switch (index) {\r\n      case 0:\r\n        setTimeout(refs.bulkRef.current?.focus, 350)\r\n        break\r\n\r\n      default:\r\n      case 1:\r\n        break\r\n\r\n      case 2:\r\n        setTimeout(refs.wizardRef.current?.focus, 350)\r\n        break\r\n    }\r\n  }\r\n\r\n  const handleImportTypeClick = (source) => (e) => {\r\n    switch (source) {\r\n      case 'bulk':\r\n        setCurrentViewIndex(0)\r\n        break\r\n\r\n      case 'wizard':\r\n        setCurrentViewIndex(2)\r\n        break\r\n\r\n      default:\r\n        setCurrentViewIndex(1)\r\n        break\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (source) => async (e) => {\r\n    let formRef = null\r\n    let res = []\r\n\r\n    switch (source) {\r\n      case 'bulk':\r\n        formRef = refs.bulkRef.current\r\n        break\r\n\r\n      case 'wizard':\r\n        formRef = refs.wizardRef.current\r\n        break\r\n\r\n      default:\r\n        break\r\n    }\r\n\r\n    try {\r\n      const newCards = (await formRef.handleSubmit(e))\r\n        .map(card => ({\r\n          ...card,\r\n          amount: `+${card.amount}`,\r\n        }))\r\n      setWizardBackdrop(true)\r\n\r\n      await updateCollection(newCards)\r\n      setCurrentViewIndex(1)\r\n      formRef.reset()\r\n\r\n      res = Promise.resolve(newCards)\r\n    }\r\n    catch (err) {\r\n      res = Promise.reject(err)\r\n    }\r\n    finally {\r\n      setWizardBackdrop(false)\r\n      return res\r\n    }\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <Grid container className={classes.root}>\r\n      <Grid item xs={12} component={Paper}>\r\n        <SwipeableViews animateHeight ignoreNativeScroll\r\n          ref={refs.viewRef}\r\n          index={currentViewIndex}\r\n          slideStyle={{\r\n            overflow: 'hidden',\r\n          }}\r\n          style={{ overflow: 'hidden' }}\r\n        >\r\n\r\n          {/** VIEW 0 - BULK IMPORT **/}\r\n          <Grid container justifyContent='center' alignItems='center' spacing={2} className={classes.view2Container}>\r\n            <BaseForm\r\n              onSubmit={handleSubmit('bulk')}\r\n              instantValidate={false}\r\n              elevation={0}\r\n              style={{ width: '100%' }}\r\n\r\n              header='Bulk Import'\r\n              headerProps={{ align: 'left' }}\r\n              icon={() => (\r\n                <Box marginBottom={-2}>\r\n                  <ImportExportIcon style={{ fontSize: '1.5em' }} />\r\n                </Box>\r\n              )}\r\n\r\n              content={() => (\r\n                <BulkImport refs={refs.bulkRef} updateHeight={updateHeight} />\r\n              )}\r\n              contentProps={{\r\n                style: {\r\n                  paddingRight: '8px',\r\n                },\r\n              }}\r\n\r\n              actions={() => (\r\n                <Box paddingTop={2} marginLeft={1.5} marginRight={1.5}>\r\n                  <Grid container justifyContent='flex-end' alignItems='center' spacing={1}>\r\n                    <Grid item xs align='left'>\r\n                      <Button variant='contained' color='secondary' onClick={refs.bulkRef.current?.reset}>\r\n                        Reset\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Button variant='outlined' onClick={() => setCurrentViewIndex(1)}>\r\n                        Back\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Button variant='contained' type='submit' color='primary'>\r\n                        Submit\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Box>\r\n              )}\r\n            />\r\n          </Grid>\r\n\r\n\r\n          {/** VIEW 1 - CHOOSE IMPORT TYPE **/}\r\n          <Grid container justifyContent='center' alignItems='center' className={`MuiPaper-rounded ${classes.view1Container}`}>\r\n            <Grid item container xs component={Button} style={{ height: '100%', borderRadius: 0 }} onClick={handleImportTypeClick('bulk')}>\r\n              <Grid item style={{ marginTop: 6, marginRight: 12 }}>\r\n                <ChevronLeftIcon fontSize='large' />\r\n              </Grid>\r\n              <Grid item component={Typography} variant=\"h5\">\r\n                Bulk Import\r\n              </Grid>\r\n            </Grid>\r\n            <Divider flexItem orientation='vertical' />\r\n            <Grid item container xs component={Button} style={{ height: '100%', borderRadius: 0 }} onClick={handleImportTypeClick('wizard')}>\r\n              <Grid item component={Typography} variant=\"h5\">\r\n                Import Wizard\r\n              </Grid>\r\n              <Grid item style={{ marginTop: 6, marginLeft: 12 }}>\r\n                <ChevronRightIcon fontSize='large' />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n\r\n          {/** VIEW 2 - IMPORT WIZARD **/}\r\n          <Grid container justifyContent='center' alignItems='center' spacing={2} className={classes.view2Container}>\r\n            <BaseForm\r\n              onSubmit={handleSubmit('wizard')}\r\n              disableBackdrop={!wizardBackdrop}\r\n              instantValidate={false}\r\n              elevation={0}\r\n              style={{ width: '100%' }}\r\n\r\n              header={() =>\r\n                <>\r\n                  Import Wizard <span style={{ fontSize: '0.5em' }}>(of the coast™)</span>\r\n                </>\r\n              }\r\n              headerProps={{ align: 'left' }}\r\n              icon={() => (\r\n                <Box marginBottom={2}>\r\n                  🧙‍♂️\r\n                </Box>\r\n              )}\r\n\r\n              content={() => (\r\n                <ImportWizard refs={refs.wizardRef} updateHeight={updateHeight} />\r\n              )}\r\n              contentProps={{\r\n                style: {\r\n                  paddingRight: '8px',\r\n                },\r\n              }}\r\n\r\n              actions={() => (\r\n                <Box paddingTop={2} marginLeft={1.5} marginRight={1.5}>\r\n                  <Grid container justifyContent='flex-end' alignItems='center' spacing={1}>\r\n                    <Grid item xs align='left'>\r\n                      <Button variant='contained' color='secondary' onClick={refs.wizardRef.current?.reset}>\r\n                        Reset\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Button variant='outlined' onClick={() => setCurrentViewIndex(1)}>\r\n                        Back\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Button variant='contained' color='primary' type='submit'>\r\n                        Submit\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Box>\r\n              )}\r\n            />\r\n          </Grid>\r\n\r\n        </SwipeableViews>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    connect(mapStateToProps, mapDispatchToProps)(\r\n      Import\r\n    )\r\n  )","const useStyles = (theme) => {\r\n  const topBottomPadding = theme.spacing(8)\r\n\r\n  return {\r\n    root: {\r\n      minHeight: `calc(100vh - 2*${topBottomPadding}px)`,\r\n      paddingBottom: theme.spacing(2),\r\n      // width: '40vw',\r\n      // flexDirection: \"column\",\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      display: 'flex',\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      height: '350px',\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-lone-blocks */\r\n\r\nimport { useState, useEffect, useRef } from 'react'\r\nimport { Grid, Box, Button, TextField, IconButton, Tooltip, MenuItem } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport {\r\n  Description as ExportIcon,\r\n  FileCopy as FileCopyIcon\r\n} from '@material-ui/icons'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { setCurrentTab, setCurrentCollection } from '@/Logic/redux'\r\nimport { pickCardFields } from '@/Api/MagicdexApi/utils'\r\nimport { BaseForm } from '@/Components'\r\nimport useStyles from './styles'\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  username: state.actions.activeUser.username,\r\n  collection: state.actions.activeUser.collection,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    setCurrentTab: (tab) => dispatch(setCurrentTab({ tab })),\r\n    setCurrentCollection: (collection) => dispatch(setCurrentCollection({ collection })),\r\n  }\r\n})\r\n\r\n\r\nconst Export = ({\r\n  /** VARS **/\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n    dispatch,\r\n    username,\r\n    collection,\r\n  } = props\r\n  const history = useHistory()\r\n  const textfieldInputRef = useRef()\r\n  const [selectedExportType, setSelectedExportType] = useState('magicdex')\r\n  const [cardListText, setCardListText] = useState('')\r\n  const [textfieldHelperText, setTextfieldHelperText] = useState(' ')\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    //onMount\r\n    dispatch.setCurrentTab('collection')\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (!username)\r\n      return history.push('/login')\r\n  }, [username])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleSubmit = () => {\r\n    setTextfieldHelperText(' ')\r\n    \r\n    // TODO: handle form submit\r\n    setCardListText(\r\n      `selected: ${selectedExportType}`\r\n    )\r\n  }\r\n\r\n  const handleReset = () => {\r\n    setSelectedExportType('magicdex')\r\n    setCardListText('')\r\n    setTextfieldHelperText(' ')\r\n  }\r\n\r\n  const handleTextFocus = (e) => {\r\n    if (cardListText) {\r\n      e.currentTarget.select()\r\n      navigator.clipboard.writeText(cardListText)\r\n      setTextfieldHelperText('Text copied to clipboard!')\r\n    }\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <div className={classes.root}>\r\n      <BaseForm\r\n        onSubmit={handleSubmit}\r\n        instantValidate={false}\r\n        style={{ width: '100%' }}\r\n\r\n        header='Bulk Export'\r\n        headerProps={{ align: 'left' }}\r\n        icon={<ExportIcon style={{ fontSize: '1em' }} />}\r\n\r\n        content={() => (\r\n          <Grid container justifyContent='center' alignItems='center' spacing={3}>\r\n            <Grid item xs={7}>\r\n              <TextField select\r\n                color='secondary'\r\n                variant='outlined'\r\n                label='Export type'\r\n                size='small'\r\n                margin='dense'\r\n                value={selectedExportType}\r\n                onChange={(e) => setSelectedExportType(e.target.value)}\r\n                style={{ textAlign: 'start' }}\r\n              >\r\n                {\r\n                  ['MagicDex', 'CSV'].map((option) => (\r\n                    <MenuItem key={option} value={option.toLowerCase()}>\r\n                      {option}\r\n                    </MenuItem>\r\n                  ))\r\n                }\r\n              </TextField>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField multiline fullWidth\r\n                disabled={!cardListText}\r\n                inputRef={textfieldInputRef}\r\n                onFocus={handleTextFocus}\r\n                color='secondary'\r\n                variant='filled'\r\n                rows={20}\r\n                label='Card List'\r\n                value={cardListText}\r\n                helperText={textfieldHelperText}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                  endAdornment: (\r\n                    <Tooltip title='Copy' placement='right'>\r\n                      <IconButton disabled={!cardListText} size='small' onClick={() => textfieldInputRef.current.focus()} style={{ alignSelf: 'flex-start' }}>\r\n                        <FileCopyIcon style={{ fontSize: '1.25em' }} />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  )\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n\r\n        actions={() => (\r\n          <Box paddingTop={2} marginLeft={1.5} marginRight={1.5}>\r\n            <Grid container justifyContent='flex-end' alignItems='center' spacing={1}>\r\n              <Grid item xs align='left'>\r\n                <Button variant='contained' color='secondary' onClick={handleReset}>\r\n                  Reset\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button variant='contained' type='submit' color='primary'>\r\n                  Submit\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        )}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    connect(mapStateToProps, mapDispatchToProps)(\r\n      Export\r\n    )\r\n  )","\r\nconst useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  // const mainSidesPadding = theme.spacing(10)\r\n\r\n  return {\r\n    '@global': {\r\n      '.MuiTableCell-head': {\r\n        fontWeight: 'bold',\r\n        textTransform: 'uppercase',\r\n      },\r\n      '.MuiTableCell-sizeSmall': {\r\n        padding: '0.3em',\r\n      },\r\n    },\r\n    root: {\r\n      marginBottom: theme.spacing(3),\r\n    },\r\n    fab: {\r\n      position: 'fixed',\r\n      bottom: theme.spacing(2),\r\n      right: theme.spacing(3),\r\n    },\r\n    filtersContainer: {\r\n      marginBottom: theme.spacing(4.5),\r\n    },\r\n    subheader: {\r\n      justifyContent: 'center',\r\n      fontWeight: 600,\r\n      height: '2.5rem',\r\n      alignItems: 'baseline',\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { useEffect, useRef } from 'react'\r\nimport { Grid, ListItemText, MenuItem, ListItem, ListSubheader, Divider, useMediaQuery } from '@material-ui/core'\r\nimport { Skeleton, ToggleButton, ToggleButtonGroup } from '@material-ui/lab'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport {\r\n  MoreVert as MoreVertIcon,\r\n  ViewList as ViewListIcon,\r\n  ViewModule as ViewModuleIcon,\r\n  ViewCompact as ViewCompactIcon,\r\n} from '@material-ui/icons'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport upperFirst from 'lodash/upperFirst'\r\n\r\nimport {\r\n  setCurrentTab, setCurrentCollection, setView, toggleCurrency, setColumns_TableView,\r\n  toggleCardsSelectableEnabled, setCurrentOpenCardId, setCardsSelectableEnabled,\r\n  setPerPage, setPageNumber,\r\n} from '@/Logic/redux'\r\nimport { CardPriceDataProvider, FilteredDataProvider } from '@/Providers'\r\nimport { MenuPopover } from '@/Components'\r\nimport { MagicdexApi } from '@/Api'\r\nimport { CardTableView, CardGridView, CardInfo } from './Views'\r\nimport FilterFields from './FilterFields'\r\nimport MyFabs from './MyFabs'\r\nimport Import from './.Import'\r\nimport Export from './.Export'\r\nimport useStyles from './styles'\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  username: state.actions.activeUser.username,\r\n  collection: state.actions.activeUser.collection,\r\n  view: state.actions.app.collection.view,\r\n  currency: state.actions.app.currency,\r\n  cardsSelectableEnabled: state.actions.app.collection.cardsSelectableEnabled,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    setCurrentTab: (tab) => dispatch(setCurrentTab({ tab })),\r\n    setCurrentCollection: (collection) => dispatch(setCurrentCollection({ collection })),\r\n    setCurrentOpenCardId: (id) => dispatch(setCurrentOpenCardId({ id })),\r\n    setView: (view) => dispatch(setView({ view })),\r\n    setColumns: (columns) => dispatch(setColumns_TableView({ columns })),\r\n    toggleCurrency: () => dispatch(toggleCurrency()),\r\n    setCardsSelectableEnabled: (enabled) => dispatch(setCardsSelectableEnabled({ enabled })),\r\n    toggleCardsSelectableEnabled: () => dispatch(toggleCardsSelectableEnabled()),\r\n    setPageNumber: (pageNumber) => dispatch(setPageNumber({ pageNumber })),\r\n    setPerPage: (perPage) => dispatch(setPerPage({ perPage })),\r\n  }\r\n})\r\n\r\n\r\nconst Collection = ({\r\n  /** VARS **/\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n    dispatch,\r\n    username,\r\n    collection, // current user's collection\r\n    view, // one of ['table', 'grid', 'compact']\r\n    currency,\r\n    cardsSelectableEnabled,\r\n  } = props\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n  const menuRef = useRef()\r\n  const menuItemRef = useRef()\r\n  const mdDown = useMediaQuery((theme) => theme.breakpoints.down('md'))\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    //onMount\r\n    dispatch.setCurrentTab('collection')\r\n    dispatch.setCurrentOpenCardId(null)\r\n\r\n    //onUnmount\r\n    return () => {\r\n      dispatch.setCurrentOpenCardId(null)\r\n      dispatch.setCardsSelectableEnabled(false)\r\n      // dispatch.setPerPage(PER_PAGE)\r\n      dispatch.setPageNumber(0)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(location.search)\r\n    const viewParam = params.get('view')\r\n\r\n    if (viewParam && viewParam !== view)\r\n      handleViewChange(viewParam)\r\n  }, [location])\r\n\r\n  useEffect(() => {\r\n    if (mdDown) {\r\n      dispatch.setColumns({\r\n        amount: 'amount',\r\n        name: 'name',\r\n        set: 'set',\r\n        mana_cost: 'cost',\r\n        type_line: 'type',\r\n        foil: 'foil',\r\n        total_price: `price`,\r\n      })\r\n    }\r\n    else {\r\n      dispatch.setColumns({\r\n        amount: 'amount',\r\n        name: 'name',\r\n        set: 'set',\r\n        mana_cost: 'mana cost',\r\n        type_line: 'type',\r\n        foil: 'foil',\r\n        total_price: `price (${currency})`,\r\n        date_created: 'date added',\r\n      })\r\n    }\r\n  }, [mdDown, currency])\r\n\r\n  useEffect(() => {\r\n    if (!username)\r\n      return history.push('/login')\r\n\r\n    dispatch.setCurrentCollection(JSON.parse(localStorage.getItem('collection')))\r\n    MagicdexApi\r\n      .getAllCards()\r\n      .then(res => dispatch.setCurrentCollection(res))\r\n  }, [username])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleViewChange = (value) => {\r\n    if (value && value !== view) {\r\n      const params = new URLSearchParams(location.search)\r\n      params.set('view', value)\r\n\r\n      history.push({ search: params.toString() })\r\n      dispatch.setView(value)\r\n      dispatch.setCurrentOpenCardId(null)\r\n      dispatch.setCardsSelectableEnabled(false)\r\n      // dispatch.setPerPage(PER_PAGE)\r\n      dispatch.setPageNumber(0)\r\n    }\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        {\r\n          !collection\r\n            ?\r\n            // SHOW SKELETON\r\n            <Grid container justifyContent='center'>\r\n              <Grid item container xs={12} sm={11} md={10} spacing={2}>\r\n                <Grid item xs={2}>\r\n                  <Skeleton variant='rect' height='100%' />\r\n                </Grid>\r\n                <Grid item container xs={10}>\r\n                  <Grid item xs={2}>\r\n                    <Skeleton variant='circle' width={75} height={75} />\r\n                  </Grid>\r\n                  <Grid item xs={10}>\r\n                    <Skeleton variant='rect' height={32} />\r\n                    <Skeleton variant='text' />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    {[...Array(10).keys()].map(i => <Skeleton key={i} variant='text' />)}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            :\r\n            // SHOW ACTUAL DATA VIEW\r\n            <>\r\n              <Grid container justifyContent='center'>\r\n                <Grid item container xs={12} lg={10} wrap='nowrap' justifyContent='center' alignItems='center' className={classes.filtersContainer}>\r\n                  <Grid item container xs={11}>\r\n                    <FilterFields />\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <MenuPopover\r\n                      refs={menuRef}\r\n                      icon={<MoreVertIcon />}\r\n                      listProps={{ dense: true }}\r\n                    >\r\n                      <ListItem style={{ justifyContent: 'center' }}>\r\n                        <ToggleButtonGroup exclusive\r\n                          style={{ height: '2.4em' }}\r\n                          size='small'\r\n                          value={view}\r\n                          onChange={(e, v) => handleViewChange(v)}\r\n                        >\r\n                          <ToggleButton value='table'>\r\n                            <ViewListIcon />\r\n                          </ToggleButton>\r\n                          <ToggleButton value='grid'>\r\n                            <ViewModuleIcon />\r\n                          </ToggleButton>\r\n                          <ToggleButton value='compact'>\r\n                            <ViewCompactIcon />\r\n                          </ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                      </ListItem>\r\n\r\n                      <Divider style={{ marginTop: 8 }} />\r\n\r\n                      <ListSubheader className={classes.subheader}>\r\n                        {`${upperFirst(view)} View`}\r\n                      </ListSubheader>\r\n                      <MenuItem onClick={dispatch.toggleCardsSelectableEnabled}>\r\n                        <ListItemText\r\n                          primary={'Selection Mode'}\r\n                          secondary={cardsSelectableEnabled ? 'On' : 'Off'}\r\n                        />\r\n                      </MenuItem>\r\n                      <MenuItem onClick={dispatch.toggleCurrency}>\r\n                        <ListItemText\r\n                          primary={'Change Currency'}\r\n                          secondary={`Viewing ${currency.toUpperCase()}`}\r\n                        />\r\n                      </MenuItem>\r\n\r\n                      <span ref={menuItemRef} />  {/* placeholder for the view component to use <Portal> on */}\r\n                    </MenuPopover>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid item container wrap='nowrap' justifyContent='center' xs={12}>\r\n                  <CardPriceDataProvider data={collection}>\r\n                    <FilteredDataProvider>\r\n                      {\r\n                        (() => {\r\n                          const props = {\r\n                            menuItemRef,\r\n                            // {data} is passed to children from the <DataProvider> parents\r\n                          }\r\n                          switch (view) {\r\n                            default:\r\n                            case 'table':\r\n                              return <CardTableView {...props} />\r\n                            case 'grid':\r\n                              return <CardGridView {...props} />\r\n                            case 'compact':\r\n                              return <div>TBD</div>\r\n                          }\r\n                        })()\r\n                      }\r\n                    </FilteredDataProvider>\r\n                  </CardPriceDataProvider>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              {/* FLOATING ACTION BUTTONS */}\r\n              <div className={classes.fab}>\r\n                <MyFabs />\r\n              </div>\r\n            </>\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    connect(mapStateToProps, mapDispatchToProps)(\r\n      Collection\r\n    )\r\n  )\r\n\r\nexport {\r\n  CardInfo,\r\n  Import,\r\n  Export,\r\n}","const useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  const leftRightPadding = theme.spacing(10)\r\n  const topBottomPadding = theme.spacing(8)\r\n  // const contrast = theme.palette.type === 'dark' ? '255,255,255' : '0,0,0'\r\n  // console.log(theme.palette)\r\n\r\n  return {\r\n    '@global': {\r\n      '#root': {\r\n        // display: 'flex',\r\n        // justifyContent: 'center',\r\n        // minHeight: '100vh',\r\n        // maxHeight: '100vh',\r\n        // height: '100vh',\r\n        // minWidth: '100wh',\r\n        maxWidth: '100wh',\r\n        width: '100wh',\r\n        // background: theme.palette.background.default,\r\n        // background: `linear-gradient(35deg, ${theme.palette.background.default} 20%, ${theme.palette.background.paper} 175%)`,\r\n        // background: `linear-gradient(35deg, ${theme.palette.background.paper} 10%, ${theme.palette.background.default} 225%)`,\r\n        // paddingTop: topBottomPadding,\r\n        // paddingBottom: topBottomPadding,\r\n        // paddingLeft: leftRightPadding,\r\n        // paddingRight: leftRightPadding,\r\n      }\r\n    },\r\n\r\n    root: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      // minHeight: '100vh',\r\n      // maxHeight: '100vh',\r\n      // minWidth: '100wh',\r\n      // maxWidth: '100wh',\r\n      // background: theme.palette.background.default,\r\n      // background: `linear-gradient(35deg, ${theme.palette.background.default} 20%, ${theme.palette.background.paper} 175%)`,\r\n      // background: `linear-gradient(35deg, ${theme.palette.background.paper} 10%, ${theme.palette.background.default} 225%)`,\r\n    },\r\n    content: {\r\n      overflow: 'visible', // !important\r\n      paddingTop: topBottomPadding,\r\n      // paddingBottom: topBottomPadding,\r\n      paddingLeft: leftRightPadding,\r\n      paddingRight: leftRightPadding,\r\n      // flexGrow: 1,\r\n      // maxWidth: '100wh',\r\n      // maxWidth: '95%',\r\n      // minHeight: '100vh',\r\n      // minHeight: `calc(100vh - ${topBottomPadding}px)`,\r\n      minHeight: '100vh',\r\n      // textAlign: '-webkit-center',\r\n      // display: 'flex',\r\n      // justifyContent: 'center',\r\n      // alignItems: 'center',\r\n      // paddingTop: topBottomPadding,\r\n      // paddingBottom: topBottomPadding,\r\n      // paddingLeft: leftRightPadding,\r\n      // paddingRight: leftRightPadding,\r\n      // boxShadow: theme.shadows[4]\r\n    },\r\n    bottomBar: {\r\n      // height: 'fit-content',\r\n      minHeight: topBottomPadding,\r\n      // maxHeight: topBottomPadding,\r\n      // padding: theme.spacing(1),\r\n\r\n      backgroundColor: theme.palette.primary.dark,\r\n      color: theme.palette.getContrastText(theme.palette.primary.dark),\r\n      // background: `linear-gradient(rgba(${contrast}, 0.17),rgba(${contrast}, 0.17)), ${theme.palette.background.default}`,\r\n      // boxShadow: 'rgba(17, 17, 26, 0.05) 0px 1px 0px, rgba(17, 17, 26, 0.1) 0px 0px 8px',\r\n      // boxShadow: `rgba(${contrast}, 0.5) 0px 2px 4px, rgba(${contrast}, 0.4) 0px 7px 13px -3px, rgba(${contrast}, 0.3) 0px -3px 0px inset`,\r\n      // boxShadow: 'rgba(0, 0, 0, 0.06) 0px 2px 4px 0px inset',\r\n      // boxShadow: 'rgba(17, 17, 26, 0.1) 0px 8px 24px, rgba(17, 17, 26, 0.1) 0px 16px 56px, rgba(17, 17, 26, 0.1) 0px 24px 80px',\r\n      // boxShadow: '      0px -2px 4px -1px rgb(0 0 0 / 20%), 0px -4px 5px 0px rgb(0 0 0 / 14%), 0px -1px 10px 0px rgb(0 0 0 / 12%)',\r\n      // boxShadow: '0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)',\r\n      // boxShadow: 'rgba(0, 0, 0, 0.45) 0px -25px 20px -20px',\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { useEffect, createRef } from 'react'\r\nimport { Grid, Button, CssBaseline, ThemeProvider } from \"@material-ui/core\"\r\nimport { Close as CloseIcon } from '@material-ui/icons'\r\nimport { BrowserRouter as HashRouter, Switch, Route, Redirect } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\nimport { makeStyles } from \"@material-ui/styles\"\r\nimport { SnackbarProvider } from 'notistack'\r\n// import { useHistory } from 'react-router-dom'\r\n\r\nimport { Collection, TopMenu, BottomBar, Login, Register, Home, Decks, Profile } from \"@/Components\"\r\nimport { Import, Export } from \"@/Components/Collection\"\r\nimport { MagicdexApi } from \"@/Api\"\r\nimport { setActiveUser } from \"@/Logic/redux\"\r\nimport useStyles from \"./styles\"\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  theme: state.actions.theme.currentTheme,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    setActiveUser: (payload) => dispatch(setActiveUser(payload)),\r\n  }\r\n})\r\n\r\n\r\nconst App = ({\r\n  /** VARS **/\r\n  theme: _theme,\r\n  ...props\r\n}) => {\r\n  const {\r\n    dispatch,\r\n  } = props\r\n  const snackbarRef = createRef()\r\n  const theme = Object.assign({}, _theme)\r\n  const classes = makeStyles(useStyles(theme))()\r\n\r\n  const routes = [\r\n    {\r\n      component: Route,\r\n      props: {\r\n        path: '/',\r\n        component: Home,\r\n        exact: true,\r\n      }\r\n    },\r\n    {\r\n      component: Route,\r\n      props: {\r\n        path: '/collection',\r\n        component: Collection,\r\n        exact: true,\r\n      }\r\n    },\r\n    {\r\n      component: Route,\r\n      props: {\r\n        path: '/collection/import',\r\n        component: Import,\r\n        exact: true,\r\n      }\r\n    },\r\n    {\r\n      component: Route,\r\n      props: {\r\n        path: '/collection/export',\r\n        component: Export,\r\n        exact: true,\r\n      }\r\n    },\r\n    {\r\n      component: Route,\r\n      props: {\r\n        path: '/decks',\r\n        component: Decks,\r\n        exact: true,\r\n      }\r\n    },\r\n    {\r\n      component: Route,\r\n      props: {\r\n        path: '/login',\r\n        component: Login,\r\n        exact: true,\r\n      }\r\n    },\r\n    {\r\n      component: Route,\r\n      props: {\r\n        path: '/register',\r\n        component: Register,\r\n        exact: true,\r\n      }\r\n    },\r\n    {\r\n      component: Route,\r\n      props: {\r\n        path: '/profile',\r\n        component: Profile,\r\n        exact: true,\r\n      }\r\n    },\r\n    {\r\n      component: Redirect,\r\n      props: {\r\n        to: '/',\r\n        exact: false,\r\n      }\r\n    },\r\n  ]\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    // onMount\r\n    MagicdexApi.login() //try to login with `localStorage['accessToken']`\r\n      .then(res => {\r\n        dispatch.setActiveUser(res)\r\n        snackbarRef.current.enqueueSnackbar(`Welcome back ${res.username}`, { variant: 'info' })\r\n        // snackbarRef.current.enqueueSnackbar('Welcome back', { variant: 'info' })\r\n      })\r\n      .catch(err => dispatch.setActiveUser({ username: null }))\r\n  }, [])\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <SnackbarProvider\r\n        ref={snackbarRef}\r\n        autoHideDuration={3250}\r\n        maxSnack={3}\r\n        action={toastId => (\r\n          <Button\r\n            endIcon={<CloseIcon />}\r\n            onClick={e => snackbarRef.current.closeSnackbar(toastId)}\r\n            color=\"inherit\"\r\n          >\r\n            Dismiss\r\n          </Button>\r\n        )}\r\n      >\r\n        <HashRouter basename='/magicdex-web'>\r\n          <Grid container justifyContent='center' alignItems='flex-start'>\r\n            <Grid item xs={12}\r\n              component={TopMenu}\r\n            />\r\n\r\n            <Grid item xs={12} align='center' className={classes.content}>\r\n              <Switch>\r\n                {\r\n                  routes.map((item, i) => (\r\n                    <item.component\r\n                      key={i}\r\n                      {...item.props}\r\n                    />\r\n                  ))\r\n                }\r\n              </Switch>\r\n            </Grid>\r\n\r\n            <Grid item container justifyContent='center' alignItems='center' xs={12} className={`${classes.bottomBar} MuiPaper-elevation8`}>\r\n              <BottomBar />\r\n            </Grid>\r\n          </Grid>\r\n        </HashRouter>\r\n      </SnackbarProvider>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","\r\nconst useStyles = (theme) => {\r\n    // const bottomBarHeight = '50px'\r\n    // const mainSidesPadding = theme.spacing(10)\r\n  \r\n    return {\r\n      icon: {\r\n      },\r\n      popover: {\r\n      },\r\n      paper: {\r\n        minWidth: theme.spacing(20),\r\n      },\r\n      // contentShift: {\r\n      //   transition: theme.transitions.create('margin', {\r\n      //     easing: theme.transitions.easing.easeOut,\r\n      //     duration: theme.transitions.duration.enteringScreen,\r\n      //   }),\r\n      //   marginLeft: 0,\r\n      // },\r\n      // listItemText: {\r\n      //   marginRight: theme.spacing(1),\r\n      // },\r\n      // ListItemIcon: {\r\n      //   marginRight: theme.spacing(2.5),\r\n      //   width: 'auto',\r\n      //   minWidth: 'auto',\r\n      // },\r\n    }\r\n  }\r\n  \r\n  export default useStyles","import { useImperativeHandle, useRef } from 'react'\r\nimport { ClickAwayListener, IconButton, List, Paper, Popover } from '@material-ui/core'\r\nimport { useState, useEffect } from 'react'\r\nimport { withStyles } from '@material-ui/styles'\r\n\r\nimport useStyles from './styles'\r\n\r\n\r\nconst MenuPopover = ({\r\n  /** VARS **/\r\n  refs,\r\n  icon,\r\n  iconButtonProps,\r\n  popoverProps,\r\n  listProps,\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n    children,\r\n    // ...rest\r\n  } = props\r\n\r\n  const iconButtonRef = useRef()\r\n  const [Icon, setIcon] = useState(icon)\r\n\r\n  const [menuAnchor, setMenuAnchor] = useState(null)\r\n  const menuOpen = Boolean(menuAnchor)\r\n\r\n\r\n  /** EFFECTS **/\r\n  useImperativeHandle(refs, () => ({\r\n    openMenu: () => { handleMenuOpen(iconButtonRef) },\r\n    closeMenu: () => { handleMenuClose(null) },\r\n  }))\r\n\r\n  useEffect(() => {\r\n    setIcon(icon)\r\n  }, [icon])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleIconClick = (e) => {\r\n    handleMenuOpen(e.currentTarget)\r\n    e.stopPropagation()\r\n  }\r\n\r\n  const handleMenuOpen = (menuAnnchor) => {\r\n    setMenuAnchor(menuAnnchor)\r\n  }\r\n\r\n  const handleMenuClose = (e) => {\r\n    setMenuAnchor(null)\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <>\r\n      <IconButton\r\n        color=\"inherit\"\r\n        className={classes.icon}\r\n        ref={iconButtonRef}\r\n        onClick={handleIconClick}\r\n        {...iconButtonProps}\r\n      >\r\n        {Icon}\r\n      </IconButton>\r\n\r\n      <Popover keepMounted\r\n        ref={refs}\r\n        className={classes.popover}\r\n        open={menuOpen}\r\n        anchorEl={menuAnchor}\r\n        onClose={handleMenuClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n        {...popoverProps}\r\n      >\r\n        <Paper className={classes.paper}>\r\n          <ClickAwayListener onClickAway={handleMenuClose}>\r\n            <List {...listProps}>\r\n              {children}\r\n            </List>\r\n          </ClickAwayListener>\r\n        </Paper>\r\n      </Popover>\r\n    </>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    MenuPopover\r\n  )\r\n","\r\nconst useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  const mainSidesPadding = theme.spacing(10)\r\n\r\n  return {\r\n    root: {\r\n      position: 'absolute',\r\n    },\r\n    appBar: {\r\n      // position: \"inherit\",\r\n      paddingLeft: mainSidesPadding,\r\n      paddingRight: mainSidesPadding,\r\n      // backgroundColor: theme.palette.type === 'dark' ? 'rgba(0,0,0,0.25)' : theme.palette.primary,\r\n      // backgroundColor: theme.palette.type === 'dark' ? theme.palette.primary : theme.palette.primary,\r\n      // color: theme.palette.text.primary,\r\n      // transition: theme.transitions.create(['margin', 'width'], {\r\n      //   easing: theme.transitions.easing.sharp,\r\n      //   duration: theme.transitions.duration.leavingScreen,\r\n      // }),\r\n    },\r\n    iconButton: {\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    dropdown_tab: {\r\n      display: 'flex',\r\n      whiteSpace: 'nowrap',\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      // '&:hover':{\r\n      //   backgroundColor: 'transparent',\r\n      // },\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","import { useRef } from \"react\"\r\nimport { AppBar, Tabs, Tab, Grid, MenuItem, Divider, ListSubheader, ListItem, ListItemText, ListItemSecondaryAction, Switch } from \"@material-ui/core\"\r\nimport { withStyles } from \"@material-ui/styles\"\r\nimport {\r\n  Menu as MenuIcon,\r\n  AccountCircle as AccountCircleIcon,\r\n  Settings as SettingsIcon,\r\n  // ArrowDropDown as ArrowDropDownIcon,\r\n} from '@material-ui/icons'\r\nimport { connect } from \"react-redux\"\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSnackbar } from \"notistack\"\r\n\r\nimport { MenuPopover } from '@/Components'\r\nimport { setActiveUser, toggleThemeType } from \"@/Logic/redux\"\r\nimport useStyles from \"./styles\"\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  themeType: state.actions.theme.themeType,\r\n  username: state.actions.activeUser.username,\r\n  currentTab: state.actions.app.topMenu.currentTab,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  'dispatch': {\r\n    toggleThemeType: (payload) => dispatch(toggleThemeType(payload)),\r\n    setActiveUser: (payload) => dispatch(setActiveUser(payload)),\r\n  }\r\n})\r\n\r\n\r\nconst TopMenu = ({\r\n  /** VARS **/\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n    dispatch,\r\n    currentTab,\r\n    themeType,\r\n    username,\r\n  } = props\r\n  const history = useHistory()\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  const menuRef = useRef()\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleTabChange = (event, value) => {\r\n    // dispatch.setCurrentTab({tab:value});\r\n    history.push('/' + value)\r\n  }\r\n\r\n  const handleMenuItemClick = (e) => {\r\n    let goto = e.currentTarget.attributes.goto?.value\r\n    let id = e.currentTarget.attributes.id?.value\r\n\r\n    switch (id) {\r\n      default:\r\n        menuRef.current?.closeMenu()\r\n        break\r\n\r\n      case 'profile':\r\n      case 'login':\r\n      case 'register':\r\n        menuRef.current?.closeMenu()\r\n        history.push(goto)\r\n        break\r\n\r\n      case 'logout':\r\n        // menuRef.current?.closeMenu()\r\n        dispatch.setActiveUser({ username: null })\r\n        enqueueSnackbar('Logged out', { variant: \"info\" })\r\n        break\r\n\r\n      case 'mode':\r\n        dispatch.toggleThemeType()\r\n        break\r\n    }\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar className={classes.appBar}>\r\n        <Grid container wrap='nowrap' justifyContent='space-between'>\r\n          <Grid item>\r\n            <Tabs variant='scrollable' value={currentTab} onChange={handleTabChange}>\r\n              <Tab value='home' label='Home' />\r\n              <Tab value='collection' label='Collection' />\r\n              <Tab value='decks' label='Decks' />\r\n\r\n              <Tab value='profile' style={{ display: 'none' }} />\r\n              <Tab value='login' style={{ display: 'none' }} />\r\n              <Tab value='register' style={{ display: 'none' }} />\r\n            </Tabs>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <MenuPopover refs={menuRef} icon={() => <MenuIcon />}>\r\n              <ListSubheader>\r\n                <AccountCircleIcon />\r\n                {username ?? 'Account'}\r\n              </ListSubheader>\r\n              {\r\n                username\r\n                  ?\r\n                  <>\r\n                    <MenuItem onClick={handleMenuItemClick} id='profile' goto='/profile'>Personal Info</MenuItem>\r\n                    <MenuItem onClick={handleMenuItemClick} id='logout'>Logout</MenuItem>\r\n                  </>\r\n                  :\r\n                  <>\r\n                    <MenuItem onClick={handleMenuItemClick} id='login' goto='/login'>Login</MenuItem>\r\n                    <MenuItem onClick={handleMenuItemClick} id='register' goto='/register'>Register</MenuItem>\r\n                  </>\r\n              }\r\n\r\n              <Divider />\r\n\r\n              <ListSubheader>\r\n                <SettingsIcon />\r\n                Settings\r\n              </ListSubheader>\r\n\r\n              <ListItem style={{ paddingTop: 0, paddingBottom: 0 }}>\r\n                <ListItemText primary='Toggle Theme' secondary={themeType} />\r\n                <ListItemSecondaryAction>\r\n                  <Switch\r\n                    // color='primary'\r\n                    edge='end'\r\n                    checked={themeType === 'dark'}\r\n                    onChange={handleMenuItemClick}\r\n                    id='mode'\r\n                  />\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            </MenuPopover>\r\n          </Grid>\r\n        </Grid>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n\r\n/** EXPORT WITH HOOKS AND DECORATORS **/\r\nexport default\r\n  connect(mapStateToProps, mapDispatchToProps)(\r\n    withStyles(useStyles)(\r\n      TopMenu\r\n    )\r\n  )","\r\nconst useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  // const mainSidesPadding = theme.spacing(10)\r\n\r\n  return {\r\n    root: {\r\n      position: 'relative',\r\n      borderRadius: '4.75% / 3.5%',\r\n    },\r\n    loading: {\r\n      position: 'absolute',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      top: 0,\r\n      left: 0,\r\n      color: 'white',\r\n      background: 'url(https://i.imgur.com/klWjcRj.png) 0 0 / cover',\r\n      // background: 'linear-gradient(rgba(60,60,60,0.7),rgba(60,60,60,0.7)), url(https://i.imgur.com/klWjcRj.png) 0 0 / cover',\r\n      opacity: 0.65,\r\n      backgroundSize: 'cover',\r\n      borderRadius: '4.75% / 3.5%',\r\n    },\r\n    base: {\r\n      borderRadius: '4.75% / 3.5%',\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n    },\r\n    overlay: {\r\n      borderRadius: '4.75% / 3.5%',\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","import { useState, useEffect } from 'react'\r\nimport { CircularProgress, FormControlLabel } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport clsx from 'clsx'\r\n\r\nimport useStyles from './styles'\r\n\r\n\r\nconst ImageOverlay = ({\r\n  /** VARS **/\r\n  name = 'Loading..',\r\n  rootProps,\r\n  baseSrc,\r\n  baseProps,\r\n  overlaySrc,\r\n  overlayEnabled,\r\n  overlayProps,\r\n  width,\r\n  height,\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n    ...rest\r\n  } = props\r\n  const [isLoaded, setLoaded] = useState(false)\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    setLoaded(false)\r\n  }, [baseSrc])\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <div\r\n      className={classes.root}\r\n      style={{ width: width, height: height }}\r\n      {...rootProps}\r\n      {...rest}\r\n    >\r\n      {\r\n        !isLoaded &&\r\n        <div\r\n          className={classes.loading}\r\n          style={{\r\n            // zIndex: 69, // nice\r\n            width: width,\r\n            height: height,\r\n          }}\r\n        >\r\n          <FormControlLabel\r\n            control={<CircularProgress />}\r\n            labelPlacement={'bottom'}\r\n            label={(\r\n              <span style={{ fontSize: '0.9rem' }}>\r\n                {name}\r\n              </span>\r\n            )}\r\n          />\r\n        </div>\r\n      }\r\n\r\n      <img\r\n        width={width}\r\n        height={height}\r\n        src={baseSrc}\r\n        alt='base'\r\n        loading='lazy'\r\n        {...baseProps}\r\n        className={clsx(classes.base, baseProps?.className)}\r\n        onLoad={(e) => setLoaded(true)}\r\n        style={{ display: isLoaded ? '' : 'none' }}\r\n      />\r\n\r\n      {\r\n        overlayEnabled &&\r\n        <img\r\n          width={width}\r\n          height={height}\r\n          src={overlaySrc}\r\n          alt='overlay'\r\n          loading='lazy'\r\n          {...overlayProps}\r\n          className={clsx(classes.overlay, overlayProps?.className)}\r\n        />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    ImageOverlay\r\n  )","\r\nconst useStyles = (theme) => {\r\n  return {\r\n    root: {\r\n      position: 'relative',\r\n      overflow: 'visible',\r\n      transition: 'all 0.33s cubic-bezier(0.75, 0, 0.25, 1)',\r\n    },\r\n    face: {\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n    },\r\n    front: {\r\n    },\r\n    back: {\r\n      transform: 'scaleX(-1)'\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","import { useEffect, useState } from 'react'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport clsx from 'clsx'\r\n\r\nimport ImageOverlay from '../ImageOverlay'\r\nimport useStyles from './styles'\r\n\r\n\r\nconst TransformableCard = ({\r\n  /** VARS **/\r\n  card,\r\n  flipped: _flipped,\r\n  width,\r\n  height,\r\n  imageProps,\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n  } = props\r\n  const [flipped, setFlipped] = useState(_flipped)\r\n  const [scaleX, setScaleX] = useState('1')\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    setScaleX(_flipped ? '-1' : '1')\r\n\r\n    setTimeout(() => {\r\n      setFlipped(_flipped)\r\n    }, 150)\r\n\r\n  }, [_flipped])\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <div\r\n      className={classes.root}\r\n      style={{\r\n        width: width || '250px',\r\n        height: height || '350px',\r\n        transform: `scaleX(${scaleX})`,\r\n      }}\r\n    >\r\n\r\n      <div className={clsx(classes.face, classes.front)} style={{ display: flipped ? 'none' : 'unset' }}>\r\n        <ImageOverlay\r\n          overlayEnabled={card.foil}\r\n          baseProps={{ alt: card?.card_faces[0]?.name }}\r\n          baseSrc={card.card_faces[0].image_uris.png}\r\n          overlaySrc='https://i.imgur.com/6y8fwHO.png'\r\n          overlayProps={{ style: { opacity: 0.65 } }}\r\n          name={card?.card_faces[0]?.name}\r\n          width={250}\r\n          height={350}\r\n          {...imageProps}\r\n        />\r\n      </div>\r\n\r\n      <div className={clsx(classes.face, classes.back)} style={{ display: !flipped ? 'none' : 'unset' }}>\r\n        <ImageOverlay\r\n          overlayEnabled={card.foil}\r\n          baseProps={{ alt: card?.card_faces[0]?.name }}\r\n          baseSrc={card.card_faces[1].image_uris.png}\r\n          overlaySrc='https://i.imgur.com/6y8fwHO.png'\r\n          overlayProps={{ style: { opacity: 0.65 } }}\r\n          name={card?.card_faces[0]?.name}\r\n          width={250}\r\n          height={350}\r\n          {...imageProps}\r\n        />\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    TransformableCard\r\n  )","\r\nconst useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  // const mainSidesPadding = theme.spacing(10)\r\n  // console.log({ palette: theme.palette })\r\n\r\n  return {\r\n    imageContainer: {\r\n      zIndex: 1,\r\n      position: 'relative',\r\n      transition: 'all 0.4s cubic-bezier(0.75, 0, 0.25, 1)',\r\n    },\r\n    dfcSymbol: {\r\n      fontSize: '1.5em',\r\n      position: 'absolute',\r\n      top: '2.5%',\r\n      left: '2.5%',\r\n    },\r\n    checkboxContainer: {\r\n      position: 'absolute',\r\n      top: '4%',\r\n      right: '5%',\r\n      // borderRadius: '20%',\r\n      // border: `1px solid ${theme.palette.action.hover}`,\r\n      // backgroundColor: theme.palette.action.active,\r\n      // margin: 0,\r\n      // padding: 0,\r\n      // '&:hover': {\r\n      //   backgroundColor: theme.palette.action.hover,\r\n      // },\r\n    },\r\n    checkbox: {\r\n      // padding: 1.5,\r\n      // margin: 2,\r\n      // backgroundColor: theme.palette.action.active,\r\n      // borderRadius: '15%',\r\n      transform: 'scale(1.5)'\r\n    },\r\n    priceContainer: {\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    buttonContainer: {\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    buttonThridly: {\r\n      color: '#fff',\r\n      backgroundColor: '#9c27b0',\r\n      '&:hover': {\r\n        backgroundColor: '#7b1fa2',\r\n      },\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport { Button, Grid, useMediaQuery, Tooltip } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport { connect } from 'react-redux'\r\nimport Tilt from 'react-parallax-tilt'\r\n\r\nimport { addSelectedCardIds, removeSelectedCardIds } from '@/Logic/redux'\r\nimport RenderCell from '@/CardRenders'\r\nimport ImageOverlay from './ImageOverlay'\r\nimport TransformableCard from './TransformableCard'\r\nimport useStyles from './styles'\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  selectedCardIds: state.actions.app.collection.selectedCardIds,\r\n  cardsSelectableEnabled: state.actions.app.collection.cardsSelectableEnabled,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    addSelectedCardId: (id) => dispatch(addSelectedCardIds({ id })),\r\n    removeSelectedCardId: (id) => dispatch(removeSelectedCardIds({ id })),\r\n  }\r\n})\r\n\r\n\r\n/** CUSTOM TOOLTIP **/\r\nconst MyTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: theme.palette.type === 'dark' ? '#787878' : '#909090',\r\n    fontSize: theme.typography.pxToRem(12.25),\r\n    boxShadow: theme.shadows[2],\r\n  },\r\n  arrow: {\r\n    color: theme.palette.type === 'dark' ? '#787878' : '#909090',\r\n  }\r\n}))(({\r\n  arrow = true,\r\n  enterDelay = 500,\r\n  placement = 'right',\r\n  ...props\r\n}) =>\r\n  <Tooltip placement={placement} arrow={arrow} enterDelay={enterDelay} {...props} />\r\n)\r\n\r\n\r\nconst CardImage = ({\r\n  /** VARS **/\r\n  card,\r\n  width = 250,\r\n  height = 350,\r\n  rootProps,\r\n  imageProps,\r\n  buttonProps,\r\n  tiltProps,\r\n  tiltEnabled = false,\r\n  transform3dEnabled = false,\r\n  packTransformButton = false,\r\n  showPrice = false,\r\n  showCheckbox = false,\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n    dispatch,\r\n    selectedCardIds,\r\n    cardsSelectableEnabled,\r\n  } = props\r\n  const md = useMediaQuery(theme => theme.breakpoints.down('md'))\r\n  const [flipped, setFlipped] = useState(false)\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    setFlipped(false)\r\n  }, [card])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleRootClick = e => {\r\n    rootProps?.onClick && rootProps.onClick(e)\r\n  }\r\n\r\n  const handleTransform = (setValueTo = undefined) => (e) => {\r\n    setFlipped(setValueTo ?? !flipped)\r\n  }\r\n\r\n  const handleCheckboxChange = (card) => (e) => {\r\n    e.target.checked\r\n      ? dispatch.addSelectedCardId(card._id)\r\n      : dispatch.removeSelectedCardId(card._id)\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <Grid container direction=\"column\" {...rootProps} onClick={handleRootClick}>\r\n\r\n      {/** IMAGE PREVIEW **/}\r\n      <Grid item\r\n        className={classes.imageContainer}\r\n        style={{\r\n          transform: flipped && (\r\n            card.is_split\r\n              ? `rotate(90deg) scale(0.825) translateX(-35%) translateY(${md ? '2%' : '7%'})`\r\n              : card.is_flip\r\n                ? 'rotate(180deg)'\r\n                : ''\r\n          ),\r\n        }}\r\n      >\r\n        <Tilt\r\n          tiltEnable={tiltEnabled}\r\n          glareEnable={tiltEnabled}\r\n          tiltMaxAngleX={10}\r\n          tiltMaxAngleY={10}\r\n          glareBorderRadius='4.75% / 3.5%'\r\n          glarePosition='all'\r\n          glareMaxOpacity={0.13}\r\n          onEnter={(card?.is_transform || card?._isDoublesided) && packTransformButton && handleTransform(true)}\r\n          onLeave={(card?.is_transform || card?._isDoublesided) && packTransformButton && handleTransform(false)}\r\n          {...tiltProps}\r\n        >\r\n          {\r\n            (card?.is_transform || card?._isDoublesided)\r\n              // double faced card\r\n              ? transform3dEnabled\r\n                ? <TransformableCard\r\n                  flipped={flipped}\r\n                  width={width}\r\n                  height={height}\r\n                  card={card}\r\n                  imageProps={imageProps}\r\n                />\r\n                : <ImageOverlay\r\n                  overlayEnabled={card?.foil}\r\n                  baseProps={{ alt: card?.name }}\r\n                  baseSrc={\r\n                    card && card.hasOwnProperty('image_uris')\r\n                      ? card.card_faces[flipped ? 1 : 0].image_uris?.png ?? card.card_faces[flipped ? 1 : 0].image_uris?.large ?? card.card_faces[flipped ? 1 : 0].image_uris?.normal\r\n                      : 'https://i.imgur.com/klWjcRj.png'\r\n                  }\r\n                  overlaySrc='https://i.imgur.com/6y8fwHO.png'\r\n                  overlayProps={{ style: { opacity: 0.65 } }}\r\n                  name={card?.card_faces[flipped ? 1 : 0]?.name}\r\n                  width={width}\r\n                  height={height}\r\n                  {...imageProps}\r\n                />\r\n              :\r\n              // single faced card\r\n              <ImageOverlay\r\n                overlayEnabled={card?.foil}\r\n                baseProps={{ alt: card?.name }}\r\n                baseSrc={\r\n                  card && card.hasOwnProperty('image_uris')\r\n                    ? card.image_uris?.png ?? card.image_uris?.large ?? card.image_uris?.normal\r\n                    : 'https://i.imgur.com/klWjcRj.png'\r\n                }\r\n                overlaySrc='https://i.imgur.com/6y8fwHO.png'\r\n                overlayProps={{ style: { opacity: 0.65 } }}\r\n                name={card?.name}\r\n                width={width}\r\n                height={height}\r\n                {...imageProps}\r\n              />\r\n          }\r\n\r\n          {\r\n            showCheckbox && (selectedCardIds.includes(card?._id) || cardsSelectableEnabled) &&\r\n            <span className={classes.checkboxContainer} onClick={e => e.stopPropagation()}>\r\n              <input\r\n                type='checkbox'\r\n                checked={selectedCardIds.includes(card._id)}\r\n                className={classes.checkbox}\r\n                onChange={handleCheckboxChange(card)}\r\n              />\r\n            </span>\r\n          }\r\n\r\n        </Tilt>\r\n      </Grid>\r\n\r\n      {/** PRICE **/}\r\n      {\r\n        showPrice &&\r\n        <Grid item align='center' className={classes.priceContainer}>\r\n          {\r\n            card.price > 0\r\n              ? card.amount > 1\r\n                ? [\r\n                  <MyTooltip key='one' title='Price for x1' placement='left'>\r\n                    <span>\r\n                      <RenderCell\r\n                        card={card}\r\n                        columnName='price'\r\n                      />\r\n                    </span>\r\n                  </MyTooltip>,\r\n                  ' / ',\r\n                  <MyTooltip key='multiple' title={`Price for x${card.amount}`}>\r\n                    <span>\r\n                      <RenderCell\r\n                        card={card}\r\n                        columnName='total_price'\r\n                      />\r\n                    </span>\r\n                  </MyTooltip>,\r\n                ]\r\n                : <MyTooltip title='Price for x1'>\r\n                  <span>\r\n                    <RenderCell\r\n                      card={card}\r\n                      columnName='price'\r\n                    />\r\n                  </span>\r\n                </MyTooltip>\r\n              : <MyTooltip title='No Price Available'>\r\n                <span>\r\n                  {'-'}\r\n                </span>\r\n              </MyTooltip>\r\n          }\r\n        </Grid>\r\n      }\r\n\r\n      {/** TRANSFORM BUTTON **/}\r\n      {\r\n        ((card?.is_transform || card?._isDoublesided) || card?.is_split || card?.is_flip) && !packTransformButton && (\r\n          <Grid item align='center' className={classes.buttonContainer}>\r\n            <Button\r\n              className={classes.buttonThridly}\r\n              variant='contained'\r\n              size='small'\r\n              onClick={handleTransform()}\r\n              {...buttonProps}\r\n            >\r\n              {\r\n                (\r\n                  (card?.is_transform || card?._isDoublesided)\r\n                    ? 'Transform'\r\n                    : card.is_split\r\n                      ? 'Rotate'\r\n                      : card.is_flip\r\n                        ? 'Flip'\r\n                        : ''\r\n                ) + (flipped ? ' ↪' : ' ↩')\r\n              }\r\n            </Button>\r\n          </Grid>\r\n        )\r\n      }\r\n    </Grid >\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    connect(mapStateToProps, mapDispatchToProps)(\r\n      CardImage\r\n    )\r\n  )","\r\nconst useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  // const mainSidesPadding = theme.spacing(10)\r\n\r\n  return {\r\n    root: {},\r\n    appBar: {\r\n      // height: '100%',\r\n      // width: '100%',\r\n      marginLeft: theme.spacing(2),\r\n      marginRight: theme.spacing(2),\r\n      // margin: 0,\r\n      // position: \"inherit\",\r\n      // textAlign: 'center',\r\n      // verticalAlign: 'middle',\r\n      // backgroundColor: theme.palette.type === 'dark' ? 'rgba(0,0,0,0.25)' : theme.palette.primary,\r\n      // backgroundColor: theme.palette.type === 'dark' ? theme.palette.primary : theme.palette.primary,\r\n      // color: theme.palette.text.primary,\r\n      // transition: theme.transitions.create(['margin', 'width'], {\r\n      //   easing: theme.transitions.easing.sharp,\r\n      //   duration: theme.transitions.duration.leavingScreen,\r\n      // }),\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","import { withStyles } from '@material-ui/styles'\r\nimport { Grid, Typography } from '@material-ui/core'\r\n\r\nimport useStyles from './styles'\r\n\r\n\r\nconst BottomBar = ({\r\n  /** VARS **/\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n  } = props\r\n\r\n  const Link = ({ href, children }) => <a rel='noreferrer' target='_blank' href={href}>{children}</a>\r\n  const LooLzzz = () => <Link href='https://github.com/LooLzzz'>LooLzzz</Link>\r\n  const Bedopear = () => <Link href='https://github.com/Yarintop'>Bedopear</Link>\r\n  const Scryfall = () => <Link href='https://scryfall.com/'>Scryfall.com</Link>\r\n  const ScryfallClient = () => <Link href='https://www.npmjs.com/package/scryfall-client'>Scryfall-Client</Link>\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <Grid item container justifyContent='center' alignContent='center' align='center' className={classes.appBar} spacing={1}>\r\n      <Grid item xs={12}\r\n        component={Typography} variant='caption'\r\n      >\r\n        Made with <span style={{ color: 'red' }}>❤</span> by <LooLzzz /> and <Bedopear />\r\n      </Grid>\r\n      <Grid item xs={12}\r\n        component={Typography} variant='caption'\r\n      >\r\n        Powered by <Scryfall /> via <ScryfallClient />\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    BottomBar\r\n  )","\r\nconst useStyles = (theme) => {\r\n  // const topBottomPadding = theme.spacing(8)\r\n\r\n  return {\r\n    root: {\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-lone-blocks */\r\n\r\nimport { useEffect } from 'react'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router'\r\n\r\nimport { setCurrentTab } from '@/Logic/redux'\r\nimport useStyles from './styles'\r\n\r\n\r\n// TODO: complete `Decks` component\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  username: state.actions.activeUser.username,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    setCurrentTab: (payload) => dispatch(setCurrentTab(payload)),\r\n  }\r\n})\r\n\r\n\r\nconst Decks = ({\r\n  /** VARS **/\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n    dispatch,\r\n    username,\r\n  } = props\r\n  const history = useHistory()\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    //onMount\r\n    dispatch.setCurrentTab({ tab: 'decks' })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (!username)\r\n      return history.push('/login')\r\n  }, [username])\r\n\r\n\r\n  /** HANDLERS **/\r\n  { }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <div className={classes.root}>\r\n      hello from Decks\r\n    </div>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    connect(mapStateToProps, mapDispatchToProps)(\r\n      Decks\r\n    )\r\n  )","\r\nconst useStyles = (theme) => {\r\n  // const topBottomPadding = theme.spacing(8)\r\n\r\n  return {\r\n    root: {\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-lone-blocks */\r\n\r\nimport { useEffect } from 'react'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router'\r\n\r\nimport { setCurrentTab } from '@/Logic/redux'\r\nimport useStyles from './styles'\r\n\r\n\r\n// TODO: complete `Profile` component\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  username: state.actions.activeUser.username,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    setCurrentTab: (payload) => dispatch(setCurrentTab(payload)),\r\n  }\r\n})\r\n\r\n\r\nconst Profile = ({\r\n  /** VARS **/\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n    dispatch,\r\n    username,\r\n  } = props\r\n  const history = useHistory()\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    //onMount\r\n    dispatch.setCurrentTab({ tab: 'profile' })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (!username)\r\n      return history.push('/login')\r\n  }, [username])\r\n\r\n\r\n  /** HANDLERS **/\r\n  { }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <div className={classes.root}>\r\n      hello from Profile\r\n    </div>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    connect(mapStateToProps, mapDispatchToProps)(\r\n      Profile\r\n    )\r\n  )","const useStyles = (theme) => {\r\n  const iconSize = \"4.5em\"\r\n\r\n  return {\r\n    root: {\r\n      padding: theme.spacing(3),\r\n      paddingBottom: 0,\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      flexDirection: \"column\",\r\n\r\n      // minHeight: '80vh',\r\n    },\r\n    header: {\r\n      // alignSelf: \"flex-end\",\r\n      textTransform: \"uppercase\",\r\n      fontWeight: \"bold\",\r\n      width: '100%',\r\n    },\r\n    icon: {\r\n      fontSize: iconSize,\r\n      alignSelf: \"flex-start\",\r\n      position: \"relative\",\r\n      // color: theme.palette.primary.light,\r\n      zIndex: 1,\r\n    },\r\n    divider1: {\r\n      bottom: `calc(${iconSize} - 0.55em)`,\r\n      marginBottom: theme.spacing(3),\r\n      width: `calc(100% + 2*${theme.spacing(3)}px)`,\r\n      position: \"relative\",\r\n      zIndex: 0,\r\n    },\r\n    divider2: {\r\n      marginBottom: theme.spacing(3),\r\n      width: `calc(100% + 2*${theme.spacing(3)}px)`,\r\n      position: \"relative\",\r\n      zIndex: 0,\r\n    },\r\n    bottom: {\r\n      position: \"relative\",\r\n      bottom: \"2em\",\r\n      width: '100%',\r\n      // display: \"flex\",\r\n      // justifyContent: \"center\",\r\n      // alignItems: \"center\",\r\n      // flexDirection: \"column\",\r\n    },\r\n    content: {\r\n      width: '100%',\r\n      paddingBottom: theme.spacing(2),\r\n    },\r\n    actions: {\r\n      width: '100%',\r\n      alignSelf: \"flex-end\",\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles\r\n","import { useEffect, useState } from 'react'\r\nimport { Paper, Divider, Grid, Typography, Dialog, DialogContent, CircularProgress } from '@material-ui/core'\r\nimport { withStyles } from \"@material-ui/styles\"\r\nimport { ValidatorForm } from 'react-material-ui-form-validator'\r\n\r\nimport useStyles from './styles'\r\n\r\n\r\nconst BaseForm = ({\r\n  /** VARS **/\r\n  validationRules = {},\r\n  header,\r\n  icon,\r\n  content,\r\n  actions,\r\n  headerProps = {},\r\n  iconProps = {},\r\n  contentProps = {},\r\n  actionsProps = {},\r\n  formRef,\r\n  disableBackdrop = false,\r\n  onSubmit = async (e) => Promise.resolve(),\r\n  onError = (err) => { console.error(err) },\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n    ...rest\r\n  } = props\r\n  const [Header, setHeader] = useState([])\r\n  const [Icon, setIcon] = useState([])\r\n  const [Content, setContent] = useState([])\r\n  const [Actions, setActions] = useState([])\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    const rules = validationRules\r\n\r\n    Object.entries(rules).forEach(item => {\r\n      const [key, value] = item\r\n      if (!ValidatorForm.hasValidationRule(key))\r\n        ValidatorForm.addValidationRule(key, value)\r\n    })\r\n  }, [validationRules])\r\n\r\n  useEffect(() => {\r\n    setHeader(header)\r\n    setIcon(icon)\r\n    setContent(content)\r\n    setActions(actions)\r\n  }, [header, icon, content, actions])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleSubmit = async (e) => {\r\n    setIsLoading(true)\r\n\r\n    try {\r\n      await onSubmit(e)\r\n    }\r\n    catch (err) {\r\n      onError(err)\r\n    }\r\n    finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <>\r\n      <Paper component={ValidatorForm} ref={formRef}\r\n        className={classes.root} elevation={8}\r\n        onSubmit={handleSubmit} onError={onError} {...rest}\r\n      >\r\n        <Typography variant='h4' align='right' className={classes.header} {...headerProps}>\r\n          {Header}\r\n        </Typography>\r\n\r\n        <div className={classes.icon} {...iconProps}>\r\n          {Icon}\r\n        </div>\r\n        <Divider className={classes.divider1} />\r\n\r\n        <Grid container direction='column' justifyContent='center' alignItems='center' className={classes.bottom}>\r\n          <Grid item xs={12} className={classes.content} {...contentProps}>\r\n            {Content}\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.actions} {...actionsProps}>\r\n            {Actions}\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </Paper>\r\n\r\n      {\r\n        !disableBackdrop &&\r\n        <Dialog open={isLoading}>\r\n          <DialogContent>\r\n            <CircularProgress />\r\n          </DialogContent>\r\n        </Dialog>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    BaseForm\r\n  )","const useStyles = (theme) => {\r\n  const topBottomPadding = theme.spacing(8)\r\n\r\n  return {\r\n    root: {\r\n      minHeight: `calc(100vh - 2*${topBottomPadding}px)`,\r\n      // width: '40vw',\r\n      // flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      alignItems: 'center',\r\n      display: 'flex',\r\n      flexGrow: 1,\r\n    },\r\n    errorMessages: {\r\n      color: theme.palette.error.main,\r\n      fontSize: '0.75rem',\r\n    },\r\n    // paper: {\r\n    //   padding: theme.spacing(3),\r\n    //   display: 'flex',\r\n    //   justifyContent: \"center\",\r\n    //   alignItems: 'center',\r\n    //   // flexDirection: \"column\",\r\n    //   // flexGrow: 0.1,\r\n    // },\r\n  }\r\n}\r\n\r\nexport default useStyles;","/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { useEffect, useState, useRef } from 'react'\r\nimport { Box, Button, Grid } from '@material-ui/core'\r\n// import { AccountCircle as AccountCircleIcon } from '@material-ui/icons';\r\nimport { withStyles } from \"@material-ui/styles\"\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { TextValidator } from 'react-material-ui-form-validator'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nimport { MagicdexApi } from '@/Api'\r\nimport { setActiveUser, setCurrentTab } from '@/Logic/redux'\r\nimport { BaseForm } from './..'\r\nimport useStyles from './styles'\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  username: state.actions.activeUser.username,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    setActiveUser: (payload) => dispatch(setActiveUser(payload)),\r\n    setCurrentTab: (payload) => dispatch(setCurrentTab(payload)),\r\n  }\r\n})\r\n\r\n\r\nconst Login = ({\r\n  /** VARS **/\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n    dispatch,\r\n    username,\r\n  } = props\r\n  const history = useHistory()\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  const formRef = useRef()\r\n\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [errorMessages, setErrorMessages] = useState([])\r\n  const [usernameInput, setUsernameInput] = useState('')\r\n  const [passwordInput, setPasswordInput] = useState('')\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    //onMount\r\n    dispatch.setCurrentTab({ tab: 'login' })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (username)\r\n      history.push('/')\r\n  }, [username])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleSubmit = async (e) => {\r\n    let res = null\r\n    setErrorMessages([])\r\n    setIsLoading(true)\r\n    setPasswordInput('')\r\n\r\n    try {\r\n      const user = await MagicdexApi.login({ username: usernameInput, password: passwordInput })\r\n\r\n      dispatch.setActiveUser(user)\r\n      enqueueSnackbar('Login successful', { variant: 'success' })\r\n      res = Promise.resolve(user)\r\n    }\r\n    catch (err) {\r\n      const msg = err.response.data.msg || err.response.data.message\r\n      let msgs = (msg instanceof Array) ? msg : [msg]\r\n\r\n      msgs = msgs.map(msg =>\r\n        msg.toLowerCase().includes('combination not found')\r\n          ? 'Bad credentials'\r\n          : msg\r\n      )\r\n\r\n      err.message = msgs\r\n      res = Promise.reject(err)\r\n    }\r\n    finally {\r\n      setIsLoading(false)\r\n      return res\r\n    }\r\n  }\r\n\r\n  const handleError = (err) => {\r\n    setErrorMessages(err.message)\r\n    enqueueSnackbar('Login failed', { variant: 'error' })\r\n  }\r\n\r\n  const handleClear = (e) => {\r\n    setErrorMessages([])\r\n    setUsernameInput('')\r\n    setPasswordInput('')\r\n    formRef.current.resetValidations()\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <Grid container className={classes.root}>\r\n      <BaseForm\r\n        formRef={formRef}\r\n        onSubmit={handleSubmit}\r\n        onError={handleError}\r\n        instantValidate={false}\r\n\r\n        header='Login'\r\n        // icon     = {() => <AccountCircleIcon fontSize='inherit' />}\r\n        icon={() => <Box marginBottom={2}>💩</Box>}\r\n        content={() => (\r\n          <>\r\n            <TextValidator\r\n              id='username'\r\n              type='text'\r\n              label='Username'\r\n              variant='outlined'\r\n              size='small'\r\n              color='secondary'\r\n              value={usernameInput}\r\n              onChange={(e) => setUsernameInput(e.target.value)}\r\n              validators={['required', `matchRegexp:^([A-Za-z0-9]|[-_.'])*$`]}\r\n              errorMessages={['Field is required', 'Special characters are not allowed']}\r\n              autoComplete='current-username'\r\n            />\r\n            <TextValidator\r\n              id='password'\r\n              type='password'\r\n              label='Password'\r\n              variant='outlined'\r\n              size='small'\r\n              color='secondary'\r\n              value={passwordInput}\r\n              onChange={(e) => setPasswordInput(e.target.value)}\r\n              validators={['required']}\r\n              errorMessages={['Field is required']}\r\n              autoComplete='current-password'\r\n            />\r\n            <Grid container direction='column'>\r\n              {\r\n                Object.values(errorMessages).map((value, i) => (\r\n                  <Grid item key={i} className={classes.errorMessages}>\r\n                    {value[0].toUpperCase() + value.slice(1)} {/* capitalize first letter */}\r\n                  </Grid>\r\n                ))\r\n              }\r\n            </Grid>\r\n          </>\r\n        )}\r\n        actions={() => (\r\n          <Grid container justifyContent='flex-end' spacing={1}>\r\n            <Grid item>\r\n              <Button\r\n                size=\"medium\"\r\n                variant=\"outlined\"\r\n                onClick={handleClear}\r\n                disabled={isLoading}\r\n              >\r\n                Clear\r\n              </Button>\r\n            </Grid>\r\n            <Grid item style={{ paddingRight: 0 }}>\r\n              <Button\r\n                type=\"submit\"\r\n                size=\"medium\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disabled={isLoading}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      />\r\n    </Grid>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    connect(mapStateToProps, mapDispatchToProps)(\r\n      Login\r\n    )\r\n  )","const useStyles = (theme) => {\r\n  const topBottomPadding = theme.spacing(8)\r\n\r\n  return {\r\n    root: {\r\n      minHeight: `calc(100vh - 2*${topBottomPadding}px)`,\r\n      // width: '40vw',\r\n      // flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      alignItems: 'center',\r\n      display: 'flex',\r\n      flexGrow: 1,\r\n    },\r\n    errorMessages: {\r\n      color: theme.palette.error.main,\r\n      fontSize: '0.75rem',\r\n    },\r\n    // paper: {\r\n    //   padding: theme.spacing(3),\r\n    //   display: 'flex',\r\n    //   justifyContent: \"center\",\r\n    //   alignItems: 'center',\r\n    //   // flexDirection: \"column\",\r\n    //   // flexGrow: 0.1,\r\n    // },\r\n  }\r\n}\r\n\r\nexport default useStyles;","/* eslint-disable no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { useEffect, useState, useRef } from 'react'\r\nimport { Box, Button, Grid, Typography } from '@material-ui/core'\r\nimport { AccountCircle as AccountCircleIcon } from '@material-ui/icons'\r\nimport { withStyles } from \"@material-ui/styles\"\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { TextValidator } from 'react-material-ui-form-validator'\r\nimport { useSnackbar } from 'notistack'\r\nimport _ from 'lodash'\r\n\r\nimport { MagicdexApi } from \"@/Api\"\r\nimport { setActiveUser, setCurrentTab } from '@/Logic/redux'\r\nimport { BaseForm } from './..'\r\nimport useStyles from './styles'\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  username: state.actions.activeUser.username,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    setActiveUser: (payload) => dispatch(setActiveUser(payload)),\r\n    setCurrentTab: (payload) => dispatch(setCurrentTab(payload)),\r\n  }\r\n})\r\n\r\n\r\nconst Register = ({\r\n  /** VARS **/\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n    dispatch,\r\n    username,\r\n  } = props\r\n  const history = useHistory()\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [errorMessages, setErrorMessages] = useState([])\r\n  const [usernameInput, setUsernameInput] = useState('')\r\n  const [passwordInput, setPasswordInput] = useState('')\r\n  const [passwordRepeatInput, setPasswordRepeatInput] = useState('')\r\n  const passwordInputRef = useRef()\r\n  const formRef = useRef()\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    //onMount\r\n    dispatch.setCurrentTab({ tab: 'register' })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (username)\r\n      history.push('/')\r\n  }, [username])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleSubmit = async (e) => {\r\n    let res = null\r\n    setErrorMessages([])\r\n    setIsLoading(true)\r\n    setPasswordInput('')\r\n    setPasswordRepeatInput('')\r\n\r\n    try {\r\n      const user = await MagicdexApi.register({ username: usernameInput, password: passwordInput })\r\n\r\n      dispatch.setActiveUser(user)\r\n      enqueueSnackbar('Successfully registered', { variant: 'success' })\r\n      res = Promise.resolve(user)\r\n    }\r\n    catch (err) {\r\n      const msg = err.response.data.msg || err.response.data.message\r\n      const msgs = (msg instanceof Array) ? msg : [msg]\r\n      \r\n      err.message = msgs\r\n      res = Promise.reject(err)\r\n    }\r\n    finally {\r\n      setIsLoading(false)\r\n      return res\r\n    }\r\n  }\r\n\r\n  const handleError = (err) => {\r\n    setErrorMessages(err.message)\r\n    enqueueSnackbar('Error registering', { variant: 'error' })\r\n  }\r\n\r\n  const handleClear = (e) => {\r\n    setErrorMessages([])\r\n    setUsernameInput('')\r\n    setPasswordInput('')\r\n    setPasswordRepeatInput('')\r\n    formRef.current.resetValidations()\r\n  }\r\n\r\n\r\n  /** VALIDATORS **/\r\n  const isPasswordMatch = (value) => (\r\n    value === passwordInputRef.current.props.value\r\n  )\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <Grid container className={classes.root}>\r\n      <BaseForm\r\n        formRef={formRef}\r\n        validationRules={{ isPasswordMatch }}\r\n        onSubmit={handleSubmit}\r\n        onError={handleError}\r\n        instantValidate={false}\r\n\r\n        header='Signup'\r\n        // icon={() => <AccountCircleIcon fontSize='inherit' />}\r\n        icon={() => <Box marginBottom={2}>💁</Box>}\r\n        content={() => (\r\n          <>\r\n            <TextValidator\r\n              error={_.join(errorMessages, ';').includes('username')}\r\n              id='username'\r\n              name='username'\r\n              type='text'\r\n              label='Username'\r\n              variant='outlined'\r\n              size='small'\r\n              color='secondary'\r\n              value={usernameInput}\r\n              onChange={(e) => setUsernameInput(e.target.value)}\r\n              validators={['required', `matchRegexp:^[A-Za-z][A-Za-z0-9-_.]*$`]}\r\n              errorMessages={['Field is required', 'Special characters are not allowed']}\r\n              autoComplete='new-username'\r\n            />\r\n            <TextValidator\r\n              ref={passwordInputRef}\r\n              id='password'\r\n              name='password'\r\n              type='password'\r\n              label='Password'\r\n              variant='outlined'\r\n              size='small'\r\n              color='secondary'\r\n              value={passwordInput}\r\n              onChange={(e) => setPasswordInput(e.target.value)}\r\n              validators={['required', 'minStringLength:5']}\r\n              errorMessages={['Field is required', 'Password is too short']}\r\n              autoComplete='new-password'\r\n            />\r\n            <TextValidator\r\n              id='password_repeat'\r\n              name='password_repeat'\r\n              type='password'\r\n              label='Repeat Password'\r\n              variant='outlined'\r\n              size='small'\r\n              color='secondary'\r\n              value={passwordRepeatInput}\r\n              onChange={(e) => setPasswordRepeatInput(e.target.value)}\r\n              validators={['required', 'minStringLength:5', 'isPasswordMatch']}\r\n              errorMessages={['Field is required', 'Password is too short', 'Passwords does not match']}\r\n              autoComplete='new-password2'\r\n            />\r\n            <Grid container direction='column'>\r\n              {\r\n                Object\r\n                  .values(errorMessages)\r\n                  .map((value, i) => (\r\n                    <Grid item key={i} className={classes.errorMessages}>\r\n                      {_.upperFirst(value)}\r\n                    </Grid>\r\n                  ))\r\n              }\r\n            </Grid>\r\n          </>\r\n        )}\r\n        actions={() => (\r\n          <Grid container justifyContent='flex-end' spacing={1}>\r\n            <Grid item>\r\n              <Button\r\n                size=\"medium\"\r\n                variant=\"outlined\"\r\n                onClick={handleClear}\r\n                disabled={isLoading}\r\n              >\r\n                Clear\r\n              </Button>\r\n            </Grid>\r\n            <Grid item style={{ paddingRight: 0 }}>\r\n              <Button\r\n                type=\"submit\"\r\n                size=\"medium\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disabled={isLoading}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      />\r\n    </Grid>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default withStyles(useStyles)(\r\n  connect(mapStateToProps, mapDispatchToProps)(\r\n    Register\r\n  )\r\n)\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { Provider } from \"react-redux\"\r\n\r\nimport { store } from \"@/Logic/redux\"\r\nimport { App } from \"@/Components\"\r\nimport './index.css'\r\nimport 'fontsource-roboto'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}