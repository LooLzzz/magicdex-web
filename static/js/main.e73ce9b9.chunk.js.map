{"version":3,"sources":["Themes/index.js","Config/index.js","Logic/redux/initialState.js","Logic/redux/reducers/appReducers.js","Logic/redux/reducers/accountReducers.js","Logic/redux/reducers/themeReducers.js","Logic/redux/reducerSlice.js","Logic/redux/reducers/index.js","Logic/redux/store.js","Logic/redux/index.js","Components/Home/styles.js","Components/Home/index.js","Providers/CardPriceDataProvider/index.js","Providers/FilteredDataProvider/index.js","Providers/index.js","Api/MagicdexApi/utils.js","Api/MagicdexApi/auth.js","Api/MagicdexApi/collection.js","Api/MagicdexApi/index.js","Api/index.js","CardRenders/utils.js","CardRenders/styles.js","CardRenders/index.js","Components/Collection/Views/CardInfo/FieldsPanel/index.js","Components/Collection/Views/CardInfo/EditPanel/styles.js","Components/Collection/Views/CardInfo/EditPanel/index.js","Components/Collection/Views/CardInfo/styles.js","Components/Collection/Views/CardInfo/index.js","Components/Collection/Views/CardTableView/CardRow/styles.js","Components/Collection/Views/CardTableView/CardRow/index.js","Components/Collection/Views/CardTableView/styles.js","Components/Collection/Views/CardTableView/index.js","Components/Collection/Views/CardGridView/styles.js","Components/Collection/Views/CardGridView/index.js","Components/Collection/Views/ContextMenu/styles.js","Components/Collection/Views/ContextMenu/index.js","Components/Collection/FilterFields/utils.js","Components/Collection/FilterFields/FilterPopover/styles.js","Components/Collection/FilterFields/FilterPopover/index.js","Components/Collection/FilterFields/styles.js","Components/Collection/FilterFields/index.js","Components/Collection/MyFabs/index.js","Components/Collection/.Import/ImportWizard/styles.js","Components/Collection/.Import/ImportWizard/index.js","Components/Collection/.Import/BulkImport/index.js","Components/Collection/.Import/styles.js","Components/Collection/.Import/index.js","Components/Collection/.Export/styles.js","Components/Collection/.Export/index.js","Components/Collection/styles.js","Components/Collection/index.js","Components/App/styles.js","Components/App/index.js","Components/MenuPopover/styles.js","Components/MenuPopover/index.js","Components/TopMenu/styles.js","Components/TopMenu/index.js","Components/CardImage/ImageOverlay/styles.js","Components/CardImage/ImageOverlay/index.js","Components/CardImage/TransformableCard/styles.js","Components/CardImage/TransformableCard/index.js","Components/CardImage/styles.js","Components/CardImage/index.js","Components/BottomBar/styles.js","Components/BottomBar/index.js","Components/Decks/styles.js","Components/Decks/index.js","Components/Profile/styles.js","Components/Profile/index.js","Components/Forms/BaseForm/styles.js","Components/Forms/BaseForm/index.js","Components/Forms/Login/styles.js","Components/Forms/Login/index.js","Components/Forms/Register/styles.js","Components/Forms/Register/index.js","index.js"],"names":["baseTheme","createTheme","getContrastText","palette","sharedOverrides","MuiCssBaseline","padding","fontFamily","borderRadius","textAlign","a","textDecoration","cursor","maxWidth","spacing","concat","MuiListItemText","multiline","marginTop","marginBottom","MuiTextField","root","width","margin","MuiPaper","rounded","MuiListSubheader","display","alignItems","columnGap","MuiListItem","secondaryAction","paddingRight","darkPrimary","main","darkSecondary","darkThirdly","colors","purple","secondary","getDarkTheme","type","table","divider","primary","_objectSpread","contrastText","thridly","background","grey","overrides","code","backgroundColor","color","MuiCircularProgress","circle","getLightTheme","default","paper","axios","defaults","headers","common","Config","MODIFY_DB_ALLOWED","API_URL","process","PER_PAGE","CONDITIONS","BREAKPOINTS","xs","sm","md","lg","xl","themeType","_localStorage$getItem","localStorage","getItem","accessToken","INITIAL_STATE","activeUser","username","collection","_JSON$parse","JSON","parse","theme","currentTheme","app","currency","topMenu","currentTab","view","pageNumber","perPage","currentOpenCardId","undefined","cardsSelectableEnabled","selectedCardIds","filters","cardInfo","viewIndex","editEnabled","tableView","columns","gridView","tiltEnabled","transform3dEnabled","appReducers","setCurrency","state","action","payload","toggleCurrency","toLowerCase","setCurrentTab","tab","setView","setCurrentOpenCardId","id","setSelectedCardIds","Array","isArray","Error","Object","prototype","toString","call","_","uniq","addSelectedCardIds","_action$payload","removeSelectedCardIds","_action$payload2","difference","setFilters","addFilters","assign","removeFilters","omit","setCardsSelectableEnabled","enabled","toggleCardsSelectableEnabled","setPageNumber","setPerPage","setViewIndex_CardInfo","index","setEditEnabled_CardInfo","setColumns_TableView","setTiltEnabled_GridView","toggleTiltEnabled_GridView","setTransform3dEnabled_GridView","toggleTransform3dEnabled_GridView","accountReducers","setActiveUser","setItem","removeItem","setCurrentCollection","stringify","updateCollection","_step","cards","_iterator","_createForOfIteratorHelper","_loop","item","value","_id","card","idx","push","findIndex","splice","s","n","done","err","e","f","themeReducers","toggleThemeType","reducerSlice","combineReducers","account","createSlice","name","initialState","reducers","actions","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","useStyles","height","flexDirection","justifyContent","content","connect","dispatch","withStyles","_ref","props","_objectDestructuringEmpty","classes","useEffect","_jsx","Grid","container","className","children","_jsxs","component","Paper","src","alt","Typography","variant","varinat","Divider","password","slice","trim","split","map","i","addCardPrice","arguments","length","prices","foil","amount","price","Number","total_price","_ref$data","data","_objectWithoutProperties","_excluded","rest","_excluded2","_useState","useState","_useState2","_slicedToArray","cardPriceData","setCardPriceData","React","Children","child","cloneElement","filteredData","setFilteredData","filter","row","every","entries","_ref2","_ref3","key","Function","intersection","includes","addLayoutKeywords","arrayContains","array","values","intersectionWith","b","is_transform","layout","is_split","is_flip","Utils","getAuthHeaders","token","Authorization","authHeadersDecorator","func","args","_args","catchErrors","error","response","console","request","message","fetchScryfallCardData","_fetchScryfallCardData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","all_sets","setData","card_ids","cardData","wrap","_context","prev","next","Scryfall","getSets","sent","zipObjectDeep","set","getCollection","abrupt","set_data","set_id","stop","_x","apply","populateCardData","_populateCardData","_callee3","scryfallData","populatedCards","_context3","scryfall_id","Promise","all","_callee2","_is_transform$is_spli","_context2","date_created","Date","mana_cost","card_faces","_x3","_x4","_x2","pickCardFields","fields","_pick","c","pick","hasOwnProperty","ROUTE_URL","renameKeys","obj","keyMap","keys","reduce","acc","Auth","login","post","then","register","put","Collections","getCards","page","per_page","params","get","catch","updateCards","_updateCards","t0","t1","t2","t4","t5","t6","t7","t8","t9","t3","t10","t11","deleteCards","delete","getAllCards","deleteAllCards","getCardById","card_id","updateCardById","deleteCardById","MagicdexApi","getCardPrints","oracle_id","collector_number","res","getLangs","_args3","search","unique","include_multilingual","include_extras","order","dir","include_variations","lang","utils","addLeadingZero","date","toManaFont","txt","replace","sym","cost","style","clsx","_toConsumableArray","toColorIndicator","compact","ci","transformStringArray","arr","searchStart","searchEnd","strTransformation","str","startIdx","endIdx","transformed","substring","limitPrecision","num","precision","Math","pow","round","_widthLimit","chip","boxShadow","shadows","preWrap","whiteSpace","mana","marginRight","fontSize","colorIndicator","flavorText","fontStyle","lineBreak","condition","widthLimit","_defineProperty","breakpoints","down","renders","DefaultRender","memo","columnName","cardFace","RenderName","_ref4","_ref4$renderStyle","renderStyle","lgDown","useMediaQuery","v","noWrap","title","Hidden","mdDown","RenderOracleText","_ref6","_ref6$columnName","oracleText","align","words","match","transform","href","text","Fragment","RenderPowerToughness","_ref8","_ref9","power","toughness","RenderSet","_ref10","_ref10$renderStyle","useTheme","rarity","parent_set_code","upperFirst","RenderBoolean","_ref11","_ref11$renderStyle","Chip","label","size","RenderCondition","_ref12","cond","toUpperCase","rgb","NM","LP","MP","HP","DAMAGED","condStyles","RenderAmount","_ref13","RenderPrice","_ref14","_ref14$columnName","RenderTag","_ref15","_ref15$columnName","tags","tag","RenderManaCost","_ref16","_ref16$columnName","_ref16$renderStyle","_ref17","manaCost","cmc","RenderType","_ref18","_ref18$columnName","_ref18$renderStyle","_ref19","typeLine","color_indicator","_Fragment","RenderDate","_ref20","_ref20$columnName","_ref21","getFullYear","getMonth","getDate","year","month","day","join","RenderFlavorText","_ref22","flavor_text","RenderCell","FieldsPanel","_ref$renderStyle","artist","collectorNumber","powerToughness","direction","Box","flexGrow","paddingTop","accordion","paddingBottom","listing","editButtonContainer","tagFilters","setEditEnabled","_updateHeight","updateHeight","onMenuHover","enqueueSnackbar","useSnackbar","smDown","setTimeout","modalOpen","setModalOpen","_useState3","_useState4","newCard","setNewCard","_useState5","_useState6","printsSet","setPrintsSet","_useState7","_useState8","printsLang","setPrintsLang","_useState9","_useState10","rulings","setRulings","resetNewCard","signed","altered","misprint","fetch","rulings_uri","json","lodash","chain","reverse","published_at","sortBy","handleChipClick","handleDeleteButtonClick","confirm","clonedCard","handleCardInfoChange","field","min","max","clampInt","uniqBy","_value$split","_value$split2","selectedSet","selectedCollectorNumber","_printsSet$find","find","_printsLang$find","_rest","_excluded3","Button","onClick","cardClone","cloneDeep","Zoom","in","transformOrigin","IconButton","DeleteIcon","TextField","inputProps","inputMode","onChange","target","marginLeft","select","MenuItem","FormControlLabel","control","Checkbox","checked","disabled","SelectProps","onClose","InputProps","startAdornment","InputAdornment","position","CircularProgress","onMouseEnter","onMouseLeave","set_name","Autocomplete","multiple","freeSolo","disableClearable","limitTags","options","newValue","onInputChange","newInputValue","renderInput","helperText","borderSpacing","verticalAlign","colSpan","Tooltip","arrow","placement","enterDelay","paddingLeft","Accordion","expanded","TransitionProps","onEntering","onEntered","onExiting","onExited","AccordionSummary","expandIcon","ExpandMoreIcon","AccordionDetails","rule","oracle_text","comment","Modal","closeAfterTransition","open","BackdropProps","timeout","Fade","baseContainer","topArrow","zIndex","top","border","borderWidth","left","transition","image","setViewIndex","_swipeableViewsRef$cu2","refs","rootComponent","rootProps","topArrowProps","swipeableViewsRef","useRef","menuHoverItem","setMenuHoverItem","useImperativeHandle","_swipeableViewsRef$cu","current","handleViewIndexChange","CardImage","showPrice","mdUp","elevation","SwipeableViews","ignoreNativeScroll","ref","animateHeight","onChangeIndex","slideStyle","overflow","lgUp","alignSelf","flexItem","orientation","ChevronRightIcon","ChevronLeftIcon","EditPanel","hoverItem","floatingBackgroundColor","borderBottom","floating","checkboxCell","checkbox","addSelectedCardId","removeSelectedCardId","selectable","setRef","cardInfoRef","checkboxRef","isOpen","setIsOpen","showContent","setShowContent","clearSelectedCardsOnExit","contextMenuState","setContextMenuState","isMouseOver","setIsMouseOver","mouseY","mouseX","handleIsOpenToggle","collapseUpdate","isAppearing","_cardInfoRef$current","ContextMenu","setState","TableRow","onContextMenu","preventDefault","clientX","clientY","onMouseDown","button","selected","TableCell","stopPropagation","KeyboardArrowUpIcon","KeyboardArrowDownIcon","Collapse","mountOnEnter","unmountOnExit","onEnter","CardInfo","borderTopColor","tableContainer","tableFooter","borderTop","currentHoveringCard","setCurrentHoveringCard","setSortByCol","sortOrder","setSortOrder","sortedData","setSortedData","paginatedData","setPaginatedData","_sortBy","type_line","_card$set_data$parent","orderBy","TableContainer","Table","TableHead","tableHead","columnDisplayName","sortDirection","TableSortLabel","active","colName","indeterminate","iconCell","TableBody","CardRow","handleRowHover","TableFooter","TablePagination","rowsPerPageOptions","labelRowsPerPage","count","rowsPerPage","labelDisplayedRows","from","to","onPageChange","onRowsPerPageChange","parseInt","native","ActionsComponent","_ref5","FirstPageIcon","ceil","LastPageIcon","toggleTiltEnabled","toggleTransform3dEnabled","menuItemRef","_ref$cardWidth","cardWidth","containerRef","setRefs","_useSize","useSize","containerWidth","cardsPerRow","setCardsPerRow","selectedCard","setSelectedCard","_selectedCard$data","targetCollapse","box","floor","times","collapse","createRef","handleCardClick","selectedCardData","targetCollapseIdx","getBoundingClientRect","_refs$targetCollapseI","_refs$targetCollapseI2","_refs$targetCollapseI3","handleMiddleMouseClick","handleContextMenu","persist","onEditClick","Portal","ListItemText","_refs$targetCollapseI4","_refs$targetCollapseI5","_selectedCard$box","_selectedCard$box2","_containerRef$current","packTransformButton","showCheckbox","tiltProps","tiltMaxAngleX","tiltMaxAngleY","imageProps","offsetLeft","modal","ids","clearSelectedCards","tagArray","setTagArray","closeMenu","handleTagChange","handleMenuItemClick","confirmAction","len","clonedArr","countBy","flatMap","Menu","keepMounted","disableAutoFocusItem","Boolean","anchorReference","anchorPosition","MenuListProps","dense","ListItemIcon","minWidth","EditIcon","TagIcon","onKeyDown","TextOption","AutocompleteOptions","disableCloseOnSelect","filterSelectedOptions","ChipProps","renderTags","getTagProps","option","_props$ChipProps","icon","popover","MenuPopover","forwardRef","menuAnchor","setMenuAnchor","menuOpen","filterButtonRef","makeStyles","openMenu","handleMenuOpen","handleMenuClose","menuAnnchor","currentTarget","FilterListIcon","Popover","anchorEl","anchorOrigin","vertical","horizontal","ClickAwayListener","onClickAway","List","disablePadding","minus","rangeInput","autocompleteInput","filtersMenuRef","setsData","setSetsData","cardName","setCardName","setOracleText","setTypeLine","_useState11","_useState12","selectedSets","setSelectedSets","fetchSets","allSets","set_type","released_at","endAdornment","FilterPopover","ListSubheader","ListItem","groupBy","getOptionLabel","getOptionSelected","MyFabs","history","useHistory","handleFabClick","Fab","AddIcon","CloudDownloadIcon","_ref$updateHeight","autocomplete","input","listbox","setCard","newCards","setNewCards","cardNames","setCardNames","_useState13","_useState14","listboxOpen","setListboxOpen","_useState15","_useState16","handleSubmit","reset","handleReset","focus","handleFocus","resetCard","getCardNamed","resolve","reject","_refs$cardName$input$","source","closeModal","handleAddToNewCards","startsWith","_refs$cardName$input$2","_refs$cardName$input$3","handleCardNameChange","clearOnEscape","handleHomeEndKeys","onOpen","inputRef","disableFocusListener","disableHoverListener","disableTouchListener","gutterBottom","cardListText","setCardListText","errorMessages","setErrorMessages","bulkToCards","errors","lines","line","setPrints","flag","_flag","_iterator2","_step2","_item","setLangs","_iterator3","_step3","_item2","getCard","finish","sort","_yield$bulkToCards","_inputRef$current","fullWidth","rows","placeholder","InputLabelProps","shrink","topBottomPadding","minHeight","hoverHighlight","hover","view1Container","view2Container","viewRef","wizardRef","bulkRef","currentViewIndex","_setCurrentViewIndex","wizardBackdrop","setWizardBackdrop","_refs$viewRef$current","setCurrentViewIndex","_refs$bulkRef$current","_refs$wizardRef$curre","handleImportTypeClick","formRef","BaseForm","onSubmit","instantValidate","header","headerProps","ImportExportIcon","BulkImport","contentProps","_refs$bulkRef$current2","disableBackdrop","ImportWizard","_refs$wizardRef$curre2","ExportIcon","fontWeight","textTransform","fab","bottom","right","filtersContainer","subheader","setColumns","location","useLocation","menuRef","viewParam","URLSearchParams","handleViewChange","FilterFields","MoreVertIcon","listProps","ToggleButtonGroup","exclusive","ToggleButton","ViewListIcon","ViewModuleIcon","ViewCompactIcon","CardPriceDataProvider","FilteredDataProvider","CardTableView","CardGridView","Skeleton","leftRightPadding","bottomBar","dark","_theme","snackbarRef","routes","Route","path","Home","exact","Collection","Import","Export","Decks","Login","Register","Profile","Redirect","ThemeProvider","CssBaseline","SnackbarProvider","autoHideDuration","maxSnack","toastId","endIcon","CloseIcon","closeSnackbar","Router","basename","TopMenu","Switch","BottomBar","iconButtonProps","popoverProps","iconButtonRef","Icon","setIcon","mainSidesPadding","appBar","iconButton","dropdown_tab","_e$currentTarget$attr","_e$currentTarget$attr2","_menuRef$current","_menuRef$current2","goto","attributes","AppBar","Tabs","event","Tab","MenuIcon","AccountCircleIcon","SettingsIcon","ListItemSecondaryAction","edge","loading","opacity","backgroundSize","base","overlay","_ref$name","baseSrc","baseProps","overlaySrc","overlayEnabled","overlayProps","isLoaded","setLoaded","labelPlacement","onLoad","face","front","back","_card$card_faces$","_card$card_faces$2","_card$card_faces$3","_card$card_faces$4","_flipped","flipped","setFlipped","scaleX","setScaleX","ImageOverlay","image_uris","png","imageContainer","dfcSymbol","checkboxContainer","priceContainer","buttonContainer","buttonThridly","MyTooltip","tooltip","typography","pxToRem","_ref$arrow","_ref$enterDelay","_ref$placement","_card$card_faces$imag","_card$card_faces$imag2","_card$card_faces$imag3","_card$card_faces$imag4","_card$card_faces","_card$image_uris$png","_card$image_uris","_card$image_uris2","_card$image_uris3","_ref2$width","_ref2$height","buttonProps","_ref2$tiltEnabled","_ref2$transform3dEnab","_ref2$packTransformBu","_ref2$showPrice","_ref2$showCheckbox","handleTransform","setValueTo","Tilt","tiltEnable","glareEnable","glareBorderRadius","glarePosition","glareMaxOpacity","_isDoublesided","onLeave","TransformableCard","large","normal","handleCheckboxChange","Link","rel","LooLzzz","Bedopear","ScryfallClient","alignContent","iconSize","divider1","divider2","_ref$validationRules","validationRules","_ref$headerProps","_ref$iconProps","iconProps","_ref$contentProps","_ref$actionsProps","actionsProps","_ref$disableBackdrop","_ref$onSubmit","_ref$onError","onError","Header","setHeader","Content","setContent","Actions","setActions","isLoading","setIsLoading","rules","forEach","ValidatorForm","hasValidationRule","addValidationRule","Dialog","DialogContent","usernameInput","setUsernameInput","passwordInput","setPasswordInput","user","msg","msgs","handleClear","resetValidations","TextValidator","validators","autoComplete","passwordRepeatInput","setPasswordRepeatInput","passwordInputRef","isPasswordMatch","ReactDOM","render","StrictMode","Provider","store","App","document","getElementById"],"mappings":"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","file":"static/js/main.e73ce9b9.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\r\n\r\nimport { createTheme, colors } from \"@material-ui/core\"\r\n\r\n\r\nconst baseTheme = createTheme()\r\nconst getContrastText = baseTheme.palette.getContrastText\r\n// console.log({ baseTheme })\r\n\r\n\r\n/** SHARED VALUES **/\r\nconst sharedOverrides = {\r\n  MuiCssBaseline: {\r\n    \"@global\": {\r\n      \"code\": {\r\n        padding: '2px',\r\n        // marginLeft: '0.25em',\r\n        // backgroundColor: 'rgba(255,255,255,0.1)',\r\n        fontFamily: '\"Red Hat Mono\", Consolas, monospace',\r\n        // fontSize: '0.93em',\r\n        borderRadius: '0.5em',\r\n      },\r\n      \".alignLeft\": {\r\n        textAlign: \"left\",\r\n      },\r\n      \".alignRight\": {\r\n        textAlign: \"right\",\r\n      },\r\n      a: {\r\n        textDecoration: \"none\",\r\n      },\r\n      \"a:hover\": {\r\n        textDecoration: \"underline\",\r\n      },\r\n      \".cursor-pointer\": {\r\n        cursor: \"pointer\",\r\n      },\r\n      '.floating': {\r\n        // position: 'absolute',\r\n        // zIndex: '999',\r\n        maxWidth: baseTheme.spacing(25),\r\n        padding: `${baseTheme.spacing(0.5)}px ${baseTheme.spacing(1.25)}px ${baseTheme.spacing(0.5)}px ${baseTheme.spacing(1.25)}px`,\r\n      },\r\n    },\r\n  },\r\n  MuiListItemText: {\r\n    multiline: {\r\n      marginTop: 0,\r\n      marginBottom: 0,\r\n    },\r\n  },\r\n  MuiTextField: {\r\n    root: {\r\n      width: \"100%\",\r\n      margin: \"0.4em\",\r\n    },\r\n  },\r\n  MuiPaper: {\r\n    rounded: {\r\n      borderRadius: \"12.5px\",\r\n    },\r\n  },\r\n  MuiListSubheader: {\r\n    root: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      columnGap: '0.6em',\r\n    },\r\n  },\r\n  MuiListItem: {\r\n    secondaryAction: {\r\n      paddingRight: baseTheme.spacing(8),\r\n    },\r\n  },\r\n}\r\n\r\n\r\n/** DARK THEME **/\r\nconst darkPrimary = {\r\n  main: '#2D5295',\r\n  // main: '#2D4583',\r\n  // main: '#404664',\r\n}\r\nconst darkSecondary = {\r\n  // main: colors.purple[500],\r\n  // main: '#731FA1',\r\n  // main: '#BF9EEE',\r\n  // main: '#8A8FEE',\r\n  main: '#DA7B08',\r\n  // main: '#F3533B',\r\n  // main: '#FA9F42',\r\n  // main: '#F56C40',\r\n  // main: colors.orange['900'],\r\n  // main: colors.deepPurple['200'],\r\n}\r\nconst darkThirdly = {\r\n  main: colors.purple[800],\r\n  secondary: colors.purple[700]\r\n  // main: '#DA7B08',\r\n  // main: '#731FA1',\r\n  // main: '#45155F',\r\n}\r\n\r\nconst getDarkTheme = () =>\r\n  createTheme({\r\n    palette:\r\n    {\r\n      type: 'dark',\r\n      table: {\r\n        divider: '#424242',\r\n      },\r\n      primary: {\r\n        ...darkPrimary,\r\n        contrastText: getContrastText(darkPrimary.main)\r\n      },\r\n      secondary: {\r\n        ...darkSecondary,\r\n        contrastText: getContrastText(darkSecondary.main)\r\n      },\r\n      thridly: {\r\n        ...darkThirdly,\r\n        contrastText: getContrastText(darkThirdly.main)\r\n      },\r\n      background: {\r\n        secondary: colors.grey['700'],\r\n      }\r\n    },\r\n\r\n    overrides:\r\n    {\r\n      ...sharedOverrides,\r\n      MuiCssBaseline: {\r\n        '@global': {\r\n          ...sharedOverrides.MuiCssBaseline,\r\n          code: {\r\n            ...sharedOverrides.MuiCssBaseline.code,\r\n            backgroundColor: 'rgba(255,255,255,0.1)',\r\n          },\r\n          a: {\r\n            color: darkSecondary.main,\r\n          },\r\n          '.floating': {\r\n            ...sharedOverrides.MuiCssBaseline['.floating'],\r\n            backgroundColor: colors.grey['700'],\r\n            color: getContrastText(colors.grey['700']),\r\n          },\r\n          '.buttonThridly-root': {\r\n            color: getContrastText(darkThirdly.main),\r\n            backgroundColor: darkThirdly.main,\r\n            '&:hover': {\r\n              backgroundColor: darkThirdly.secondary,\r\n            },\r\n          },\r\n        },\r\n      },\r\n      MuiCircularProgress: {\r\n        circle: {\r\n          color: 'white',\r\n        },\r\n      },\r\n    },\r\n  })\r\n\r\n\r\n/** LIGHT THEME **/\r\nconst getLightTheme = () =>\r\n  createTheme({\r\n    palette: {\r\n      type: 'light',\r\n      secondary: {\r\n        // main: colors.orange[900],\r\n        // main: colors.purple['A400'],\r\n        // main: '#9568AD',\r\n        // main: '#D695F9',\r\n        main: '#E3468C',\r\n        contrastText: getContrastText('#E3468C'),\r\n      },\r\n      table: {\r\n        divider: 'rgba(150, 150, 150, 0.75)'\r\n      },\r\n      background: {\r\n        default: '#D5D5D5',\r\n        paper: '#F0F0F0',\r\n        secondary: colors.grey['400'],\r\n      },\r\n      thridly: {\r\n        main: colors.purple[500],\r\n        secondary: colors.purple[700],\r\n        contrastText: getContrastText(colors.purple[500]),\r\n      },\r\n    },\r\n\r\n    overrides: {\r\n      ...sharedOverrides,\r\n      MuiCssBaseline: {\r\n        '@global': {\r\n          ...sharedOverrides.MuiCssBaseline,\r\n          code: {\r\n            ...sharedOverrides.MuiCssBaseline.code,\r\n            backgroundColor: 'rgba(0,0,0,0.1)',\r\n          },\r\n          a: {\r\n            // color: '#4f6ce2',\r\n            color: '#bf9eee',\r\n          },\r\n          '.floating': {\r\n            ...sharedOverrides.MuiCssBaseline['.floating'],\r\n            backgroundColor: colors.grey['A100'],\r\n            color: getContrastText(colors.grey['A100']),\r\n          },\r\n          '.buttonThridly-root': {\r\n            color: getContrastText(colors.purple[500]),\r\n            backgroundColor: colors.purple[500],\r\n            '&:hover': {\r\n              backgroundColor: colors.purple[700],\r\n            },\r\n          },\r\n        },\r\n      },\r\n      MuiCircularProgress: {\r\n        circle: {\r\n          color: 'currentColor',\r\n        },\r\n      },\r\n    },\r\n  })\r\n\r\n\r\nexport { getDarkTheme, getLightTheme }\r\n","import axios from 'axios'\r\n\r\naxios.defaults.headers.common['access-Control-Allow-Origin'] = '*'\r\naxios.defaults.headers.common['access-Control-Allow-Credentials'] = true\r\n\r\nconst Config = {\r\n  // MODIFY_DB_ALLOWED: false,\r\n  MODIFY_DB_ALLOWED: true,\r\n\r\n  API_URL: process.env.API_URL || 'https://magicdexserver-1-h0374014.deta.app',\r\n  // API_URL: 'https://magicdex-server.herokuapp.com',\r\n  // API_URL: 'http://localhost:5000',\r\n\r\n  PER_PAGE: 25,\r\n  CONDITIONS: [\r\n    'NM',\r\n    'LP',\r\n    'MP',\r\n    'HP',\r\n    'DAMAGED',\r\n  ],\r\n\r\n  BREAKPOINTS: {\r\n    xs: 0,\r\n    sm: 600,\r\n    md: 900,\r\n    lg: 1200,\r\n    xl: 1536,\r\n  },\r\n}\r\n\r\nexport default Config\r\n\r\nexport const {\r\n  MODIFY_DB_ALLOWED,\r\n  API_URL,\r\n  CONDITIONS,\r\n  BREAKPOINTS,\r\n  PER_PAGE,\r\n} = Config","import { getDarkTheme, getLightTheme } from \"@/Themes\"\r\nimport { PER_PAGE } from '@/Config'\r\n\r\n\r\n/** LOCAL STORAGE **/\r\nlet themeType = localStorage.getItem(\"themeType\") ?? 'dark'\r\nlet accessToken = localStorage.getItem(\"accessToken\")\r\nlet username = localStorage.getItem(\"username\")\r\nlet collection = JSON.parse(localStorage.getItem(\"collection\")) ?? []\r\n\r\nthemeType = themeType ? themeType : \"dark\"\r\n\r\n\r\n/** STATE **/\r\nconst INITIAL_STATE = {\r\n  activeUser: {\r\n    username,\r\n    accessToken,\r\n    collection,\r\n  },\r\n\r\n\r\n  theme: {\r\n    currentTheme: themeType === 'dark' ? getDarkTheme() : getLightTheme(),\r\n    themeType: themeType,\r\n  },\r\n\r\n\r\n  app: {\r\n    currency: 'usd',\r\n    topMenu: {\r\n      currentTab: 'home',\r\n    },\r\n\r\n    collection: {\r\n      view: 'table',\r\n      pageNumber: 0,\r\n      perPage: PER_PAGE,\r\n      currentOpenCardId: undefined,\r\n      cardsSelectableEnabled: false,\r\n      selectedCardIds: [],\r\n      filters: {},\r\n\r\n      cardInfo: {\r\n        viewIndex: 0,\r\n        editEnabled: false,\r\n      },\r\n      tableView: {\r\n        columns: {},\r\n      },\r\n      gridView: {\r\n        tiltEnabled: false,\r\n        transform3dEnabled: false,\r\n      },\r\n    },\r\n  },\r\n}\r\n\r\nexport default INITIAL_STATE\r\n","import _ from 'lodash'\r\n\r\n\r\nconst appReducers = {\r\n  /** GENERAL APP **/\r\n  setCurrency: (state, action) => {\r\n    state.app.currency = action.payload.currency\r\n  },\r\n\r\n  toggleCurrency: (state, action) => {\r\n    const currency = state.app.currency.toLowerCase()\r\n    state.app.currency = currency === 'usd' ? 'eur' : 'usd'\r\n  },\r\n\r\n\r\n  /** TOP-MENU **/\r\n  setCurrentTab: (state, action) => {\r\n    state.app.topMenu.currentTab = action.payload.tab\r\n  },\r\n\r\n\r\n  /** COLLECTION **/\r\n  setView: (state, action) => {\r\n    state.app.collection.view = action.payload.view\r\n    state.app.collection.currentOpenCardId = null\r\n  },\r\n\r\n  setCurrentOpenCardId: (state, action) => {\r\n    state.app.collection.currentOpenCardId = action.payload.id\r\n  },\r\n\r\n  setSelectedCardIds: (state, action) => {\r\n    const { selectedCardIds } = action.payload\r\n\r\n    if (Array.isArray(selectedCardIds))\r\n      state.app.collection.selectedCardIds = _.uniq(selectedCardIds)\r\n    else\r\n      throw new Error(`Parameter ${Object.prototype.toString.call(selectedCardIds)} is not an Array`)\r\n  },\r\n\r\n  addSelectedCardIds: (state, action) => {\r\n    const { selectedCardIds, id } = action.payload\r\n\r\n    state.app.collection.selectedCardIds = _.uniq(\r\n      state.app.collection.selectedCardIds.concat(id || selectedCardIds)\r\n    )\r\n  },\r\n\r\n  removeSelectedCardIds: (state, action) => {\r\n    const { selectedCardIds, id } = action.payload\r\n\r\n    state.app.collection.selectedCardIds = _.difference(\r\n      state.app.collection.selectedCardIds,\r\n      id ? [id] : selectedCardIds\r\n    )\r\n  },\r\n\r\n  setFilters: (state, action) => {\r\n    state.app.collection.filters = action.payload.filters\r\n  },\r\n\r\n  addFilters: (state, action) => {\r\n    Object.assign(\r\n      state.app.collection.filters,\r\n      action.payload.filters // object with key-value pairs // { [key]: value }\r\n    )\r\n  },\r\n\r\n  removeFilters: (state, action) => {\r\n    state.app.collection.filters = _.omit(\r\n      state.app.collection.filters,\r\n      action.payload.filters //list of keys to remove // [keys]\r\n    )\r\n  },\r\n\r\n  setCardsSelectableEnabled: (state, action) => {\r\n    state.app.collection.cardsSelectableEnabled = action.payload.enabled\r\n\r\n    if (!state.app.collection.cardsSelectableEnabled)\r\n      state.app.collection.selectedCardIds = []\r\n  },\r\n\r\n  toggleCardsSelectableEnabled: (state, action) => {\r\n    state.app.collection.cardsSelectableEnabled = !state.app.collection.cardsSelectableEnabled\r\n\r\n    if (!state.app.collection.cardsSelectableEnabled)\r\n      state.app.collection.selectedCardIds = []\r\n  },\r\n\r\n  setPageNumber: (state, action) => {\r\n    state.app.collection.pageNumber = action.payload.pageNumber\r\n  },\r\n\r\n  setPerPage: (state, action) => {\r\n    state.app.collection.perPage = action.payload.perPage\r\n    state.app.collection.pageNumber = 0\r\n  },\r\n\r\n  //collection.cardInfo\r\n  setViewIndex_CardInfo: (state, action) => {\r\n    state.app.collection.cardInfo.viewIndex = action.payload.index\r\n  },\r\n\r\n  setEditEnabled_CardInfo: (state, action) => {\r\n    state.app.collection.cardInfo.editEnabled = action.payload.enabled\r\n  },\r\n\r\n  //collection.tableView\r\n  setColumns_TableView: (state, action) => {\r\n    state.app.collection.tableView.columns = action.payload.columns\r\n  },\r\n\r\n  //collection.gridView\r\n  setTiltEnabled_GridView: (state, action) => {\r\n    state.app.collection.gridView.tiltEnabled = action.payload.enabled\r\n  },\r\n\r\n  toggleTiltEnabled_GridView: (state, action) => {\r\n    state.app.collection.gridView.tiltEnabled = !state.app.collection.gridView.tiltEnabled\r\n  },\r\n\r\n  setTransform3dEnabled_GridView: (state, action) => {\r\n    state.app.collection.gridView.transform3dEnabled = action.payload.enabled\r\n  },\r\n\r\n  toggleTransform3dEnabled_GridView: (state, action) => {\r\n    state.app.collection.gridView.transform3dEnabled = !state.app.collection.gridView.transform3dEnabled\r\n  },\r\n}\r\n\r\nexport default appReducers\r\n","\r\nconst accountReducers = {\r\n  setActiveUser: (state, action) => {\r\n    const { username, accessToken } = action.payload\r\n\r\n    if (!username && !accessToken) {\r\n      localStorage.removeItem('username')\r\n      localStorage.removeItem('accessToken')\r\n      localStorage.removeItem('collection')\r\n    }\r\n    else {\r\n      username && localStorage.setItem('username', username)\r\n      accessToken && localStorage.setItem('accessToken', accessToken)\r\n    }\r\n\r\n    state.activeUser = {\r\n      ...state.activeUser,\r\n      accessToken,\r\n      username,\r\n    }\r\n  },\r\n\r\n  setCurrentCollection: (state, action) => {\r\n    const { collection } = action.payload\r\n\r\n    if (collection)\r\n      localStorage.setItem('collection', JSON.stringify(collection || []))\r\n    else\r\n      localStorage.removeItem('collection')\r\n\r\n    state.activeUser.collection = collection\r\n  },\r\n\r\n  updateCollection: (state, action) => {\r\n    const { cards } = action.payload\r\n    const { collection } = state.activeUser\r\n\r\n    for (const item of cards) {\r\n      const { _id, action, card } = item\r\n      let idx = -1\r\n\r\n      switch (action) {\r\n        case 'CREATED':\r\n          collection.push(card)\r\n          break\r\n\r\n        case 'UPDATED':\r\n          idx = collection.findIndex(item => item._id === _id)\r\n          if (idx !== -1)\r\n            Object.assign(collection[idx], card)\r\n          break\r\n\r\n        case 'DELETED':\r\n          idx = collection.findIndex(item => item._id === _id)\r\n          if (idx !== -1)\r\n            collection.splice(idx, 1)\r\n          break\r\n\r\n        case 'NOP':\r\n        default:\r\n          break\r\n      }\r\n    }\r\n\r\n    state.activeUser.collection = collection\r\n    localStorage.setItem('collection', JSON.stringify(collection || []))\r\n  },\r\n}\r\n\r\nexport default accountReducers","import { getDarkTheme, getLightTheme } from \"@/Themes\"\r\n\r\n\r\nconst themeReducers = {\r\n  toggleThemeType: (state, action) => {\r\n    const type = state.theme.themeType === 'dark' ? 'light' : 'dark' // toggle theme type\r\n    localStorage.setItem(\"themeType\", type)\r\n\r\n    state.theme = {\r\n      ...state.theme,\r\n      themeType: type,\r\n      currentTheme: type === 'dark' ? getDarkTheme() : getLightTheme(),\r\n    }\r\n  },\r\n}\r\n\r\nexport default themeReducers\r\n","import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nimport initialState from \"./initialState\"\r\nimport { appReducers, accountReducers, themeReducers } from \"./reducers\"\r\n\r\n\r\nexport const reducerSlice = createSlice({\r\n  name: \"actions\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    ...appReducers,\r\n    ...accountReducers,\r\n    ...themeReducers,\r\n  },\r\n})\r\n\r\nexport default reducerSlice.reducer\r\n\r\nexport const {\r\n  actions\r\n} = reducerSlice","import appReducers from './appReducers'\r\nimport accountReducers from './accountReducers'\r\nimport themeReducers from './themeReducers'\r\n\r\nimport { combineReducers } from \"redux\"\r\n\r\nexport default combineReducers({\r\n  app: appReducers,\r\n  account: accountReducers,\r\n  theme: themeReducers,\r\n})\r\n\r\nexport {\r\n  appReducers,\r\n  accountReducers,\r\n  themeReducers,\r\n}","import { configureStore } from \"@reduxjs/toolkit\"\r\nimport reducerSlice from \"./reducerSlice\"\r\n\r\nexport default configureStore({\r\n  reducer: { actions: reducerSlice },\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({\r\n    serializableCheck: false\r\n  })\r\n})\r\n","import store from \"./store\"\r\nimport reducer, { actions } from './reducerSlice'\r\n\r\nexport default reducer\r\nexport { store }\r\n\r\nexport const {\r\n  /** .activeUser **/\r\n  setActiveUser,\r\n  setCurrentCollection,\r\n  updateCollection,\r\n\r\n  /** .theme **/\r\n  toggleThemeType,\r\n\r\n  /** .app **/\r\n  setCurrency,\r\n  toggleCurrency, // toggles between 'usd' and 'eur'\r\n  \r\n  /** .app.topMenu **/\r\n  setCurrentTab,\r\n\r\n  /** .app.collection **/\r\n  setView,\r\n  setCurrentOpenCardId,\r\n  setSelectedCardIds,\r\n  removeSelectedCardIds,\r\n  addSelectedCardIds,\r\n  setFilters,\r\n  addFilters,\r\n  removeFilters,\r\n  setCardsSelectableEnabled,\r\n  toggleCardsSelectableEnabled,\r\n  setPageNumber,\r\n  setPerPage,\r\n  \r\n  /** .app.collection.cardInfo **/\r\n  setViewIndex_CardInfo,\r\n  setEditEnabled_CardInfo,\r\n\r\n  /** .app.collection.tableView **/\r\n  setColumns_TableView,\r\n  \r\n  /** .app.collection.gridView **/\r\n  setTiltEnabled_GridView,\r\n  toggleTiltEnabled_GridView,\r\n  setTransform3dEnabled_GridView,\r\n  toggleTransform3dEnabled_GridView,\r\n\r\n} = actions","\r\nconst useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  // const mainSidesPadding = theme.spacing(10)\r\n\r\n  return {\r\n    root: {\r\n      height: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    content: {\r\n      padding: `${theme.spacing(3)}px ${theme.spacing(5)}px ${theme.spacing(3)}px ${theme.spacing(5)}px`,\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { useEffect } from 'react'\r\nimport { Typography, Paper, Grid, Divider } from \"@material-ui/core\"\r\nimport { withStyles } from \"@material-ui/styles\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport Config from '@/Config'\r\nimport { setCurrentTab } from \"@/Logic/redux\"\r\nimport useStyles from \"./styles\"\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  'dispatch': {\r\n    setCurrentTab: (payload) => dispatch(setCurrentTab(payload)),\r\n  }\r\n})\r\n\r\n\r\nconst Home = ({\r\n  /** VARS **/\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n    dispatch,\r\n  } = props\r\n\r\n\r\n  //EFFECTS\r\n  useEffect(() => {\r\n    //onMount\r\n    dispatch.setCurrentTab({ tab: 'home' })\r\n  }, [])\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <Grid container justifyContent='center' className={classes.root}>\r\n      <Grid item container component={Paper} xs={12} sm={10} md={9} lg={8} className={classes.content} spacing={1}>\r\n        <Grid item container justifyContent='center' xs={12}>\r\n          <Grid item xs={11} sm={10} md={9}>\r\n            <img src='/logo.png' width='100%' alt=\"home\" />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} component={Typography} variant='h6'>\r\n          Welcome to Magicdex\r\n        </Grid>\r\n        <Grid item xs={12} component={Typography} varinat='body2'>\r\n          This is webapp is still in development, feel free to explore and report any bug you encounter.\r\n        </Grid>\r\n        <Grid item>\r\n          <Divider />\r\n        </Grid>\r\n        <Grid item xs={12} component={Typography} variant='body2'>\r\n          Active Config:\r\n          {\r\n            JSON.stringify({\r\n              MODIFY_DB_ALLOWED: Config.MODIFY_DB_ALLOWED,\r\n              API_URL: Config.API_URL,\r\n              username: 'test',\r\n              password: 'test',\r\n            }, null, 2)\r\n              .slice(2, -1)\r\n              .trim()\r\n              .split('\\n')\r\n              .map((item, i) => (\r\n                <div key={i}>\r\n                  <code>\r\n                    {item}\r\n                  </code>\r\n                </div>\r\n              ))\r\n          }\r\n        </Grid>\r\n        <Grid item xs={12} component={Typography} variant='h2'>\r\n          <span className=\"ss ss-fw ss-afr\" />\r\n          <span className=\"ss ss-fw ss-war\" />\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  connect(mapStateToProps, mapDispatchToProps)(\r\n    withStyles(useStyles)(\r\n      Home\r\n    )\r\n  )","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  currency: state.actions.app.currency,\r\n})\r\n\r\n\r\n/** UTILS **/\r\nconst addCardPrice = (card, currency = 'usd') => {\r\n  const { prices, foil, amount } = card\r\n  const price = Number(foil ? prices?.[`${currency}_foil`] : prices?.[currency])\r\n\r\n  return {\r\n    ...card,\r\n    currency,\r\n    price,\r\n    total_price: price * amount,\r\n  }\r\n}\r\n\r\n\r\n/** COMPONENT **/\r\nconst CardPriceDataProvider = ({\r\n  /** VARS **/\r\n  children,\r\n  data = [],\r\n  ...props\r\n}) => {\r\n  const {\r\n    currency,\r\n    ...rest\r\n  } = props\r\n  const [cardPriceData, setCardPriceData] = useState(data)\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    setCardPriceData(\r\n      data instanceof Array && data.map(card => addCardPrice(card, currency)))\r\n  }, [data, currency])\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    React.Children.map(children, child =>\r\n      React.cloneElement(child, {\r\n        data: cardPriceData,\r\n        ...rest,\r\n      })\r\n    )\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  connect(mapStateToProps)(\r\n    CardPriceDataProvider\r\n  )\r\n\r\nexport { addCardPrice }","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport _ from 'lodash'\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  filters: state.actions.app.collection.filters,\r\n})\r\n\r\n\r\n/** COMPONENT **/\r\nconst FilteredDataProvider = ({\r\n  /** VARS **/\r\n  children,\r\n  data = [],\r\n  ...props\r\n}) => {\r\n  const {\r\n    filters,\r\n    ...rest\r\n  } = props\r\n  const [filteredData, setFilteredData] = useState(data)\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    setFilteredData(\r\n      _.filter(data ?? [],\r\n        row => (\r\n          _.every(Object.entries(filters ?? {}),\r\n            ([key, value]) => {\r\n              if (typeof value === 'boolean')\r\n                return value\r\n\r\n              if (value instanceof Function)\r\n                return value(row[key], row)\r\n\r\n              if (Array.isArray(value)) {\r\n                if (value.length > 0) {\r\n                  if (Array.isArray(row[key]))\r\n                    return _.intersection(value, row[key]).length > 0\r\n                  return value.includes(row[key])\r\n                }\r\n                return true\r\n              }\r\n\r\n              // default\r\n              return row[key] === value\r\n            })\r\n        ))\r\n    )\r\n  }, [filters, data])\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    React.Children.map(children, child =>\r\n      React.cloneElement(child, {\r\n        data: filteredData,\r\n        ...rest,\r\n      })\r\n    )\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  connect(mapStateToProps)(\r\n    FilteredDataProvider\r\n  )","import CardPriceDataProvider, { addCardPrice } from './CardPriceDataProvider'\r\nimport FilteredDataProvider from './FilteredDataProvider'\r\nimport intersectionWith from 'lodash/intersectionWith'\r\n\r\n\r\nconst addLayoutKeywords = (card) => {\r\n  const arrayContains = (array, values, type = 'some') => {\r\n    array = array\r\n      ? array instanceof Array\r\n        ? array\r\n        : [array]\r\n      : []\r\n    values = values\r\n      ? values instanceof Array\r\n        ? values\r\n        : [values]\r\n      : []\r\n\r\n    const intersection = intersectionWith(array, values,\r\n      (a, b) => a.includes(b)\r\n    )\r\n    switch (type) {\r\n      case 'some':\r\n        return intersection.length > 0\r\n      case 'every':\r\n        return intersection.length === values.length\r\n      default:\r\n        return false\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...card,\r\n    is_transform: arrayContains(card.layout, ['modal', 'transform']),\r\n    is_split: arrayContains(card.layout, ['split', 'fuse']),\r\n    is_flip: arrayContains(card.layout, ['flip']),\r\n  }\r\n}\r\n\r\nexport {\r\n  CardPriceDataProvider,\r\n  FilteredDataProvider,\r\n  addCardPrice,\r\n  addLayoutKeywords,\r\n}","import Scryfall from \"scryfall-client\"\r\nimport pick from 'lodash/pick'\r\nimport zipObjectDeep from \"lodash/zipObjectDeep\"\r\nimport intersectionWith from 'lodash/intersectionWith'\r\n\r\n\r\nconst Utils = {\r\n  getAuthHeaders: () => {\r\n    let token = localStorage.getItem(\"accessToken\")\r\n\r\n    return token ? { Authorization: `Bearer ${token}` } : {}\r\n  },\r\n\r\n  authHeadersDecorator: (func) => (\r\n    function (args) {\r\n      args = {\r\n        ...args,\r\n        headers: {\r\n          ...args?.headers,\r\n          ...getAuthHeaders(),\r\n        },\r\n      }\r\n      return func(args)\r\n    }\r\n  ),\r\n\r\n  catchErrors: (error) => {\r\n    if (error.response)\r\n      console.error('Request made and server responded', error.response)\r\n    else if (error.request)\r\n      console.error('Request was made but no response was recieved', error.request)\r\n    else\r\n      console.error(\"Something happened in setting up the request that triggered an error\", error.message)\r\n\r\n    throw error\r\n  },\r\n\r\n  fetchScryfallCardData: async (cardInfo) => {\r\n    const all_sets = await Scryfall.getSets()\r\n    const setData = zipObjectDeep(all_sets.map(set => set.id), all_sets) // { 'M19': {...}, 'M20': {...}, ... }\r\n\r\n    const card_ids = cardInfo.map(card => ({ id: card.id }))\r\n    const cardData = await Scryfall.getCollection(card_ids)\r\n\r\n    return cardData.map((card) => ({\r\n      ...card,\r\n      set_data: setData[card.set_id],\r\n    }))\r\n  },\r\n\r\n  arrayContains: (array, values, type = 'some') => {\r\n    array = array instanceof Array ? array : [array]\r\n    values = values instanceof Array ? values : [values]\r\n\r\n    const intersection = intersectionWith(array, values,\r\n      (a, b) => a.includes(b)\r\n    )\r\n    switch (type) {\r\n      case 'some':\r\n        return intersection.length > 0\r\n      case 'every':\r\n        return intersection.length === values.length\r\n      default:\r\n        return false\r\n    }\r\n  },\r\n\r\n  populateCardData: async (cards) => {\r\n    const cardInfo =\r\n      (Array.isArray(cards) ? cards : [cards])\r\n        .map(card => {\r\n          card.id = card.scryfall_id\r\n          delete card.scryfall_id\r\n          return card\r\n        })\r\n\r\n    const scryfallData = await fetchScryfallCardData(cardInfo)\r\n\r\n    const populatedCards = await Promise.all(\r\n      cardInfo.map(async (card, i) => {\r\n        const { is_transform, is_split, is_flip } = {\r\n          is_transform: arrayContains(scryfallData[i].layout, ['modal', 'transform']),\r\n          is_split: arrayContains(scryfallData[i].layout, ['split', 'fuse']),\r\n          is_flip: arrayContains(scryfallData[i].layout, ['flip']),\r\n        }\r\n\r\n        return Object.assign(scryfallData[i], {\r\n          ...card,\r\n          is_transform,\r\n          is_split,\r\n          is_flip,\r\n          // rulings: await scryfallData[i].getRulings(),\r\n          date_created: new Date(card.date_created),\r\n          mana_cost: is_transform\r\n            ? [scryfallData[i].card_faces[0].mana_cost, scryfallData[i].card_faces[1].mana_cost]\r\n            : scryfallData[i].mana_cost,\r\n        })\r\n      })\r\n    )\r\n\r\n    return Array.isArray(cards)\r\n      ? populatedCards\r\n      : populatedCards[0]\r\n  },\r\n\r\n  pickCardFields: (cards, fields = ['_id', 'id', 'amount', 'tag', 'foil', 'condition', 'signed', 'altered', 'misprint']) => {\r\n    const _pick = (card) => {\r\n      const c = pick(card, fields)\r\n      \r\n      if (c.hasOwnProperty('id')) {\r\n        c.scryfall_id = c.id\r\n        delete c.id\r\n      }\r\n      \r\n      return c\r\n    }\r\n\r\n    if (Array.isArray(cards))\r\n      return cards\r\n        .map(_pick)\r\n\r\n    // else\r\n    return _pick(cards)\r\n  }\r\n}\r\n\r\nexport default Utils\r\n\r\nexport const {\r\n  getAuthHeaders,\r\n  authHeadersDecorator,\r\n  catchErrors,\r\n  fetchScryfallCardData,\r\n  arrayContains,\r\n  populateCardData,\r\n  pickCardFields,\r\n} = Utils\r\n","import axios from \"axios\"\r\n\r\nimport { authHeadersDecorator } from './utils'\r\nimport { API_URL } from \"@/Config\"\r\n\r\n\r\nconst ROUTE_URL = `${API_URL}/auth`\r\n\r\nconst renameKeys = (obj, keyMap) =>\r\n  Object.keys(obj)\r\n    .reduce((acc, key) => {\r\n      const newKey = keyMap[key] || key\r\n      acc[newKey] = obj[key]\r\n      return acc\r\n    }, {})\r\n\r\nconst Auth = {\r\n  /**\r\n   * Try to login with the given credentials.\r\n   * If credentials provided it will try to use the saved access token.\r\n   * @param {String?} username\r\n   * @param {String?} password\r\n   * @returns Response Object\r\n   */\r\n  login: authHeadersDecorator(({ username, password, headers }) => {\r\n    let payload = { username, password }\r\n\r\n    return axios\r\n      .post(ROUTE_URL, payload, { headers })\r\n      .then(response => renameKeys(response.data, { 'access-token': 'accessToken' }))\r\n    // .catch(err => catchErrors(err));\r\n  }),\r\n\r\n  /**\r\n   * Try to register a new user.\r\n   * @param {String?} username\r\n   * @param {String?} password\r\n   * @returns Response Object\r\n   */\r\n  register: ({ username, password }) => {\r\n    const payload = { username, password }\r\n\r\n    return axios\r\n      .put(ROUTE_URL, payload)\r\n      .then(response => renameKeys(response.data, { 'access-token': 'accessToken' }))\r\n    // .catch(err => catchErrors(err));\r\n  },\r\n}\r\n\r\nexport default Auth\r\n\r\nexport const {\r\n  login,\r\n  register,\r\n} = Auth\r\n","import axios from 'axios'\r\n\r\nimport { API_URL } from '@/Config'\r\nimport { getAuthHeaders, catchErrors, populateCardData, pickCardFields } from './utils'\r\n\r\n\r\nconst ROUTE_URL = `${API_URL}/collections`\r\n\r\n\r\nconst Collections = {\r\n  /**\r\n   * Retrieve cards from active user's collection.\r\n   */\r\n  getCards: (page, per_page, cards) => {\r\n    const headers = getAuthHeaders()\r\n    const params = { page, per_page, cards }\r\n\r\n    return axios\r\n      .get(ROUTE_URL, { params, headers })\r\n      .then(response => populateCardData(response.data.data))\r\n      .catch(err => catchErrors(err))\r\n  },\r\n\r\n  /**\r\n   * Insert or update cards from active user's collection.\r\n   */\r\n  updateCards: async (cards) => {\r\n    const headers = getAuthHeaders()\r\n\r\n    // keep only relevant data\r\n    cards = pickCardFields(cards)\r\n\r\n    try {\r\n      let response = await axios.post(ROUTE_URL, { cards }, { headers })\r\n\r\n      response = await Promise.all(response.data.map(async (item, i) => ({\r\n        ...item,\r\n        card: item.card\r\n          ? {\r\n            ...await populateCardData(item.card),\r\n            ...item.card,\r\n          }\r\n          : cards[i]\r\n      })))\r\n\r\n      return response\r\n    }\r\n    catch (error) {\r\n      catchErrors(error)\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Delete cards from active user's collection.\r\n   */\r\n  deleteCards: (cards) => {\r\n    const headers = getAuthHeaders()\r\n\r\n    return axios\r\n      .delete(ROUTE_URL, { cards }, { headers })\r\n      .then(response => response)\r\n      .catch(err => catchErrors(err))\r\n  },\r\n\r\n\r\n  /**\r\n   * Retrieve all cards from active user's collection.\r\n   */\r\n  getAllCards: (cards) => {\r\n    const headers = getAuthHeaders()\r\n    const params = { cards }\r\n\r\n    return axios\r\n      .get(`${ROUTE_URL}/all`, { params, headers })\r\n      .then(response => populateCardData(response.data.data))\r\n      .catch(err => catchErrors(err))\r\n  },\r\n\r\n  /**\r\n   * Clear active user's collection.\r\n   */\r\n  deleteAllCards: () => {\r\n    const headers = getAuthHeaders()\r\n\r\n    return axios\r\n      .delete(`${ROUTE_URL}/all`, { headers })\r\n      .then(response => response)\r\n      .catch(err => catchErrors(err))\r\n  },\r\n\r\n  /**\r\n   * Retrieve a specific card from active user's collection.\r\n   */\r\n  getCardById: (card_id) => {\r\n    const headers = getAuthHeaders()\r\n\r\n    return axios\r\n      .get(`${ROUTE_URL}/${card_id}`, { headers })\r\n      .then(response => populateCardData(response.data))\r\n      .catch(err => catchErrors(err))\r\n  },\r\n\r\n  /**\r\n   * Update a specific card from active user's collection.\r\n   */\r\n  updateCardById: (card_id, data) => {\r\n    const headers = getAuthHeaders()\r\n\r\n    return axios\r\n      .post(`${ROUTE_URL}/${card_id}`, data, { headers })\r\n      .then(response => response)\r\n      .catch(err => catchErrors(err))\r\n  },\r\n\r\n  /**\r\n   * Delete a specific card from active user's collection.\r\n   */\r\n  deleteCardById: (card_id) => {\r\n    const headers = getAuthHeaders()\r\n\r\n    return axios\r\n      .delete(`${ROUTE_URL}/${card_id}`, { headers })\r\n      .then(response => response)\r\n      .catch(err => catchErrors(err))\r\n  },\r\n}\r\n\r\n\r\n/** EXPORTS **/\r\n// const decoratedCollections =\r\n//   Object.fromEntries(\r\n//     Object\r\n//       .entries(Collections)\r\n//       .map(([k, v]) => [k, authHeadersDecorator(v)])\r\n//   )\r\n\r\n// export default decoratedCollections\r\nexport default Collections\r\n\r\nexport const {\r\n  getCards,\r\n  updateCards,\r\n  deleteCards,\r\n  getAllCards,\r\n  deleteAllCards,\r\n  getCardById,\r\n  updateCardById,\r\n  deleteCardById,\r\n  // } = decoratedCollections\r\n} = Collections\r\n","import { login, register } from \"./auth\"\r\nimport {\r\n  getAllCards,\r\n  deleteAllCards,\r\n  getCards,\r\n  updateCards,\r\n  deleteCards,\r\n  getCardById,\r\n  updateCardById,\r\n  deleteCardById,\r\n} from \"./collection\"\r\n\r\n\r\nconst MagicdexApi = {\r\n  login,\r\n  register,\r\n  getCards,\r\n  updateCards,\r\n  deleteCards,\r\n  getAllCards,\r\n  deleteAllCards,\r\n  getCardById,\r\n  updateCardById,\r\n  deleteCardById,\r\n}\r\n\r\nexport default MagicdexApi","import Scryfall from 'scryfall-client'\r\nimport filter from 'lodash/filter'\r\n\r\nimport MagicdexApi from \"./MagicdexApi\"\r\nimport { fetchScryfallCardData } from './MagicdexApi/utils'\r\n\r\n\r\n/**\r\n * get card print information from scryfall.\r\n * @param {object} card - should include {'oracle_id', 'set', 'collector_number'}\r\n * @param {string} type - search type, one of ['set', 'lang', 'both'], default 'set'\r\n */\r\nconst getCardPrints = async (card, type = 'set') => {\r\n  const { oracle_id, set, collector_number } = card\r\n  let res = []\r\n\r\n  /** METHODS **/\r\n  const getLangs = async () => {\r\n    res = await Scryfall.search(`oracleid:${oracle_id}+set:${set}+lang:any`, {\r\n      unique: 'prints',\r\n      include_multilingual: true,\r\n      include_extras: true,\r\n    })\r\n    res = filter(res, { collector_number })\r\n    return res\r\n  }\r\n\r\n  const getSets = async () => {\r\n    res = await Scryfall.search(`oracleid:${oracle_id}`, {\r\n      unique: 'prints',\r\n      order: 'released',\r\n      dir: 'desc',\r\n      include_variations: true,\r\n      include_extras: true,\r\n    })\r\n    return res\r\n  }\r\n\r\n  /** FUNCTION MAPPING **/\r\n  switch (type) {\r\n    case 'both':\r\n      try {\r\n        res = {\r\n          lang: await getLangs(),\r\n          set: await getSets(),\r\n        }\r\n      }\r\n      catch (err) {\r\n        console.error({ error: err })\r\n      }\r\n      break\r\n\r\n    case 'lang':\r\n      try {\r\n        res = await getLangs()\r\n      }\r\n      catch (err) {\r\n        console.error({ error: err })\r\n      }\r\n      break\r\n\r\n    default:\r\n    case 'set':\r\n      try {\r\n        res = await getSets()\r\n      }\r\n      catch (err) {\r\n        console.error({ error: err })\r\n      }\r\n      break\r\n  }\r\n\r\n  /** RETURN VALUE **/\r\n  res = await fetchScryfallCardData(res)\r\n  return res\r\n}\r\n\r\nexport {\r\n  MagicdexApi,\r\n  getCardPrints,\r\n}","import clsx from 'clsx'\r\nimport compact from 'lodash/compact'\r\n\r\n\r\nconst utils = {\r\n  addLeadingZero: (date) => (\r\n    date < 10\r\n      ? date = '0' + date\r\n      : date\r\n  ),\r\n\r\n  toManaFont: (txt, props) => {\r\n    if (typeof txt === 'string')\r\n      txt = txt\r\n        .replace(/(^{)|(\\/)|(}$)/g, '') // remove starting '{', trailing '}' and any '/'\r\n        .split('}{')\r\n    return txt\r\n      .map(sym => {\r\n        switch (sym) {\r\n          default:\r\n            return sym\r\n\r\n          case 'T':\r\n            return 'tap'\r\n        }\r\n      })\r\n      .map(sym => sym ? `ms-${sym.toLowerCase()}` : '')\r\n      .map((cost, i) => (\r\n        <span\r\n          key={i}\r\n          {...props}\r\n          style={props?.style}\r\n          className={clsx('ms', 'ms-cost', 'ms-shadow', 'ms-fw', cost, ...props?.className)} />\r\n      ))\r\n  },\r\n\r\n  toColorIndicator: (txt, props) => {\r\n    if (typeof txt === 'string')\r\n      txt = txt\r\n        .replace(/(^{)|(\\/)|(}$)/g, '') // remove starting '{', trailing '}' and any '/'\r\n        .split('}{')\r\n    txt = compact(txt) // remove empty strings\r\n\r\n    return txt\r\n      .map((ci, i) => (\r\n        <span\r\n          key={i}\r\n          {...props}\r\n          style={props?.style}\r\n          className={clsx('ms', 'ms-ci', `ms-ci-${ci.length}`, `ms-ci-${ci.toLowerCase()}`)} />\r\n      ))\r\n  },\r\n\r\n  transformStringArray: (arr, searchStart, searchEnd, strTransformation) => {\r\n    for (let i = 0; i < arr.length; i++) {\r\n      let str = arr[i]\r\n      if (typeof str !== 'string')\r\n        continue\r\n\r\n      let startIdx = str.search(searchStart)\r\n      let endIdx = str.search(searchEnd)\r\n\r\n      if (startIdx === -1 || endIdx === -1)\r\n        continue\r\n\r\n      let substr = str.substring(startIdx, endIdx + 1) // include search characters\r\n      let transformed = strTransformation(substr)\r\n      transformed = transformed instanceof Array ? transformed : [transformed]\r\n      // replace element at index i with transformed string\r\n      arr.splice(i, 1,\r\n        str.substring(0, startIdx),\r\n        ...transformed,\r\n        str.substring(endIdx + 1)\r\n      )\r\n    }\r\n    return compact(arr) // remove any empty strings\r\n  },\r\n\r\n  limitPrecision: (num, precision = 2) => {\r\n    precision = 10 ** precision\r\n  \r\n    return Math.round(Number(num) * precision) / precision\r\n  }\r\n}\r\n\r\nexport default utils\r\n\r\nexport const {\r\n  addLeadingZero,\r\n  toManaFont,\r\n  toColorIndicator,\r\n  transformStringArray,\r\n  limitPrecision,\r\n} = utils","const useStyles = (theme) => {\r\n  return {\r\n    chip: {\r\n      boxShadow: theme.shadows[1],\r\n    },\r\n    preWrap: {\r\n      whiteSpace: 'pre-wrap',\r\n    },\r\n    mana: {\r\n      marginRight: '0.25em',\r\n      fontSize: '0.85em',\r\n    },\r\n    colorIndicator: {\r\n      marginRight: '0.25em',\r\n      fontSize: '0.9em',\r\n    },\r\n    set: {\r\n      fontSize: '1.25em',\r\n    },\r\n    flavorText: {\r\n      // marginTop: '0.2em',\r\n      fontStyle: 'italic',\r\n      fontFamily: 'Georgia, fangsong, Times New Roman',\r\n      whiteSpace: 'pre-wrap',\r\n      '&[lang=\"ph\"]': {\r\n        fontFamily: 'PhyrexianHorizontal',\r\n        lineBreak: 'anywhere',\r\n      }\r\n    },\r\n    condition: {\r\n      padding: '3px 8px 3px 8px',\r\n      borderRadius: 12,\r\n      boxShadow: theme.shadows[1],\r\n      fontFamily: '\"Red Hat Mono\", Consolas, monospace',\r\n      fontSize: '0.93em',\r\n    },\r\n    widthLimit: {\r\n      maxWidth: '22 em',\r\n      [theme.breakpoints.down('lg')]: {\r\n        maxWidth: '17em',\r\n      },\r\n      [theme.breakpoints.down(1400)]: {\r\n        maxWidth: '10em',\r\n      },\r\n      [theme.breakpoints.down('sm')]: {\r\n        maxWidth: '7em',\r\n      },\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","import { Fragment, memo } from 'react'\r\nimport { useTheme, useMediaQuery, Chip, Hidden, Typography } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport clsx from 'clsx'\r\nimport _ from 'lodash'\r\n\r\n// import { EllipsisText } from '@/Components'\r\nimport utils from './utils'\r\nimport useStyles from './styles'\r\n\r\n\r\n/** Card render delegation helper function **/\r\nconst RenderCell = ({ card, columnName, ...rest }) => {\r\n  columnName = columnName.replace(/[ ]+/g, '_')\r\n  const props = { card, columnName, ...rest }\r\n\r\n  switch (columnName) {\r\n    case 'name':\r\n      return <renders.RenderName {...props} />\r\n\r\n    case 'set':\r\n      return <renders.RenderSet {...props} />\r\n\r\n    case 'condition':\r\n      return <renders.RenderCondition {...props} />\r\n\r\n    case 'power_toughness':\r\n      return <renders.RenderPowerToughness {...props} />\r\n\r\n    case 'oracle':\r\n    case 'oracle_text':\r\n      return <renders.RenderOracleText {...props} />\r\n\r\n    case 'signed':\r\n    case 'altered':\r\n    case 'misprint':\r\n    case 'foil':\r\n      return <renders.RenderBoolean {...props} />\r\n\r\n    case 'amount':\r\n      return <renders.RenderAmount {...props} />\r\n\r\n    case 'total_price':\r\n    case 'price':\r\n      return <renders.RenderPrice {...props} />\r\n\r\n    case 'tag':\r\n      return <renders.RenderTag {...props} />\r\n\r\n    case 'mana_cost':\r\n      return <renders.RenderManaCost {...props} />\r\n\r\n    case 'type_line':\r\n    case 'type':\r\n      return <renders.RenderType {...props} />\r\n\r\n    case 'date':\r\n    case 'date_created':\r\n    case 'date_added':\r\n      return <renders.RenderDate {...props} />\r\n\r\n    case 'flavor':\r\n    case 'flavor_text':\r\n      return <renders.RenderFlavorText {...props} />\r\n\r\n    default:\r\n      return <renders.DefaultRender {...props} />\r\n  }\r\n}\r\n\r\n\r\n/** RENDERS **/\r\nconst renders = {\r\n  DefaultRender: withStyles(useStyles)(memo(\r\n    ({ classes, card, columnName, cardFace }) => {\r\n      let { [columnName]: value } = cardFace !== undefined ? card.card_faces[cardFace] : card\r\n      value = value || card[columnName]\r\n\r\n      return (\r\n        value\r\n          ? <span className={classes.preWrap}>\r\n            {value}\r\n          </span>\r\n          : ''\r\n      )\r\n    }\r\n  )),\r\n\r\n  RenderName: withStyles(useStyles)(memo(\r\n    ({ classes, card, cardFace, renderStyle = 'row' }) => {\r\n      let { name } = cardFace !== undefined ? card.card_faces[cardFace] : card\r\n      const lgDown = useMediaQuery(theme => theme.breakpoints.down('md'))\r\n\r\n      switch (renderStyle) {\r\n        default:\r\n        case 'row':\r\n          name = name\r\n            .replace(/—/g, '-')\r\n            .replace(/Legendary/g, 'Lgd.')\r\n          const arr = name\r\n            .split('//')\r\n            .map(v => v.trim())\r\n          return (\r\n            <Typography noWrap variant='body2' className={classes.widthLimit} title={lgDown ? name : ''}>\r\n              {arr[0]}\r\n              {\r\n                arr.length > 1 &&\r\n                <Hidden mdDown>{' // ' + arr[1]}</Hidden>\r\n              }\r\n            </Typography>\r\n          )\r\n\r\n        case 'content':\r\n          return <b>{name}</b>\r\n      }\r\n    }\r\n  )),\r\n\r\n  RenderOracleText: withStyles(useStyles)(memo(\r\n    ({ classes, card, columnName = 'oracle_text', cardFace }) => {\r\n      let { [columnName]: oracleText } = cardFace !== undefined ? card.card_faces[cardFace] : card\r\n      let align = _.words(oracleText).length > 2 ? 'left' : 'center'\r\n\r\n      if (oracleText) {\r\n        oracleText = [oracleText]\r\n\r\n        /* handle `{X}` symbols */\r\n        oracleText = utils.transformStringArray(\r\n          oracleText,\r\n          /\\{/g,\r\n          /\\}/g,\r\n          match => (\r\n            utils.toManaFont(match, {\r\n              className: classes.mana,\r\n              style: {\r\n                fontSize: '0.68em',\r\n                transform: 'translateY(-1px)'\r\n              }\r\n            })\r\n          )\r\n        )\r\n\r\n        /* handle `(http://...)` paragraphs */\r\n        oracleText = utils.transformStringArray(\r\n          oracleText,\r\n          /\\(http/g,\r\n          /\\)/g,\r\n          match => {\r\n            match = match.slice(1, -1)\r\n            return (\r\n              <span style={{ fontStyle: 'italic', fontSize: '0.88em', lineBreak: 'anywhere' }}>\r\n                {'('}\r\n                <a href={match}>{match}</a>\r\n                {')'}\r\n              </span>\r\n            )\r\n          }\r\n        )\r\n\r\n        /* handle `(...)` paragraphs */\r\n        oracleText = utils.transformStringArray(\r\n          oracleText,\r\n          /\\(/g,\r\n          /\\)/g,\r\n          match => (\r\n            <span style={{ fontStyle: 'italic', fontSize: '0.88em' }}>{match}</span>\r\n          )\r\n        )\r\n      }\r\n\r\n      return (\r\n        oracleText\r\n          ?\r\n          <div align={align} className={classes.preWrap}>\r\n            {\r\n              oracleText.map((text, i) =>\r\n                <Fragment key={i}>\r\n                  {text}\r\n                </Fragment>\r\n              )\r\n            }\r\n          </div>\r\n          : ''\r\n      )\r\n    }\r\n  )),\r\n\r\n  RenderPowerToughness: withStyles(useStyles)(memo(\r\n    ({ classes, card, cardFace }) => {\r\n      const { power, toughness } = cardFace !== undefined ? card.card_faces[cardFace] : card\r\n\r\n      return power && toughness\r\n        ?\r\n        <span align='right' style={{ fontSize: '1rem' }}>\r\n          {`${power}/${toughness}`}\r\n        </span>\r\n        : ''\r\n    }\r\n  )),\r\n\r\n  RenderSet: withStyles(useStyles)(memo(\r\n    ({ classes, card, renderStyle = 'row' }) => {\r\n      const theme = useTheme()\r\n      const { set_data, rarity, foil } = card\r\n      const set = set_data?.parent_set_code ? set_data.parent_set_code : set_data.code\r\n      return (\r\n        <span\r\n          className={`${classes.set} ss ss-fw ss-${rarity} ss-${set}`}\r\n          title={renderStyle === 'content' ? `${set_data.name} - ${_.upperFirst(rarity)}${foil ? ' [F]' : ''}` : null}\r\n          style={{\r\n            ...(rarity === 'common' && theme.palette.type === 'dark' ? { color: '#CCCCCC' } : {})\r\n          }}\r\n        />\r\n      )\r\n    }\r\n  )),\r\n\r\n  RenderBoolean: withStyles(useStyles)(memo(\r\n    ({ classes, card, columnName, renderStyle = 'row' }) => {\r\n      const { [columnName]: value } = card\r\n\r\n      switch (renderStyle) {\r\n        default:\r\n        case 'row':\r\n          return value.toString() === 'true'\r\n            ? <Chip className={classes.chip} label='✔' size='small' />\r\n            : <Chip className={classes.chip} label='✖' size='small' />\r\n\r\n        case 'content':\r\n          return value.toString() === 'true'\r\n            ? <Chip className={classes.chip} label='Yes' size='small' color='secondary' />\r\n            : <Chip className={classes.chip} label='No' size='small' />\r\n      }\r\n    }\r\n  )),\r\n\r\n  RenderCondition: withStyles(useStyles)(memo(\r\n    ({ classes, card }) => {\r\n      const theme = useTheme()\r\n      const cond = card.condition.toUpperCase()\r\n\r\n      const condStyles = (cond) => {\r\n        const toStyle = (rgb) => ({\r\n          backgroundColor: rgb,\r\n          color: theme.palette.getContrastText(rgb),\r\n        })\r\n        const colors = {\r\n          NM: '#ffce10',\r\n          LP: '#ff9f10',\r\n          MP: '#ff9010',\r\n          HP: '#e84c10',\r\n          DAMAGED: '#c41313',\r\n        }\r\n\r\n        return toStyle(colors[cond])\r\n      }\r\n\r\n      return (\r\n        <code className={`${classes.condition}`} style={condStyles(cond)}>\r\n          {cond}\r\n        </code>\r\n      )\r\n    }\r\n  )),\r\n\r\n  RenderAmount: withStyles(useStyles)(memo(\r\n    ({ classes, card }) => (\r\n      <Chip\r\n        className={classes.chip}\r\n        label={'x' + card.amount}\r\n        size='small'\r\n      />\r\n    )\r\n  )),\r\n\r\n  RenderPrice: withStyles(useStyles)(memo(\r\n    ({ classes, card, columnName = 'price' }) => {\r\n      let { [columnName]: price, currency } = card\r\n      price = utils.limitPrecision(price, 2)\r\n      return (\r\n        price > 0\r\n          ? currency === 'usd'\r\n            ? '$' + price\r\n            : price + '€'\r\n          : '-'\r\n      )\r\n    }\r\n  )),\r\n\r\n  RenderTag: withStyles(useStyles)(memo(\r\n    ({ classes, card, columnName = 'tags', renderStyle = 'row' }) => {\r\n      let { [columnName]: tags } = card\r\n\r\n      return (\r\n        tags.length > 0\r\n          ? tags.map((tag, i) =>\r\n            <Chip\r\n              key={i}\r\n              label={tag}\r\n              size='small'\r\n            />\r\n          )\r\n          : ''\r\n      )\r\n    }\r\n  )),\r\n\r\n  RenderManaCost: withStyles(useStyles)(memo(\r\n    ({ classes, card, columnName = 'mana_cost', cardFace, renderStyle = 'row' }) => {\r\n      let { [columnName]: manaCost, cmc } = cardFace !== undefined ? card.card_faces[cardFace] : card\r\n      manaCost = manaCost || []\r\n\r\n      if (!(manaCost instanceof Array))\r\n        if (manaCost.includes('//'))\r\n          manaCost = manaCost.split('//').map(v => v.trim())\r\n        else\r\n          manaCost = [manaCost]\r\n      manaCost = _.compact(manaCost)\r\n\r\n      if (manaCost.length === 0)\r\n        return renderStyle === 'row' ? '-' : ''\r\n\r\n      manaCost = manaCost.map(cost => utils.toManaFont(cost, { className: classes.mana, style: { marginRight: '0.25em', fontSize: '0.85em' } }))\r\n      if (manaCost.length > 1)\r\n        manaCost.splice(1, 0, ' // ') // add a separator between the two mana costs\r\n      return (\r\n        <Typography variant=\"body2\" noWrap>\r\n          {\r\n            cmc\r\n              ? <span title={`${cmc} Cmc`}>\r\n                {manaCost}\r\n              </span>\r\n              : manaCost\r\n          }\r\n        </Typography>\r\n      )\r\n    }\r\n  )),\r\n\r\n  RenderType: withStyles(useStyles)(memo(\r\n    ({ classes, card, columnName = 'type_line', cardFace, renderStyle = 'row' }) => {\r\n      let { [columnName]: typeLine, color_indicator: colorIndicator } = cardFace !== undefined ? card.card_faces[cardFace] : card\r\n      const lgDown = useMediaQuery(theme => theme.breakpoints.down('md'))\r\n\r\n      switch (renderStyle) {\r\n        default:\r\n        case 'row':\r\n          typeLine = typeLine\r\n            .replace(/—/g, '-')\r\n            .replace(/Legendary/g, 'Lgd.')\r\n          const arr = typeLine\r\n            .split('//')\r\n            .map(v => v.trim())\r\n          return (\r\n            <Typography noWrap variant='body2' className={classes.widthLimit} title={lgDown ? typeLine : ''}>\r\n              {arr[0]}\r\n              {\r\n                arr.length > 1 &&\r\n                <Hidden mdDown>{' // ' + arr[1]}</Hidden>\r\n              }\r\n            </Typography>\r\n          )\r\n\r\n        case 'content':\r\n          typeLine = typeLine.replace(/—/g, '-')\r\n          colorIndicator = colorIndicator && utils.toColorIndicator(colorIndicator, { style: { marginRight: '0.25em', fontSize: '0.9em' } })\r\n          return (\r\n            colorIndicator\r\n              ? <>{colorIndicator}{typeLine}</>\r\n              : typeLine\r\n          )\r\n      }\r\n    }\r\n  )),\r\n\r\n  RenderDate: withStyles(useStyles)(memo(\r\n    ({ classes, card, columnName = 'date_added' }) => {\r\n      const date = new Date(card[columnName])\r\n      let [year, month, day] = [date.getFullYear(), date.getMonth() + 1, date.getDate()]\r\n\r\n      return (\r\n        [utils.addLeadingZero(day), utils.addLeadingZero(month), year].join('/')\r\n      )\r\n    }\r\n  )),\r\n\r\n  RenderFlavorText: withStyles(useStyles)(memo(\r\n    ({ classes, card, cardFace }) => {\r\n      const { lang } = card\r\n      const { flavor_text } = cardFace !== undefined ? card.card_faces[cardFace] : card\r\n      let align = _.words(flavor_text).length > 2 ? 'left' : 'center'\r\n\r\n      return (\r\n        flavor_text\r\n          ? <div align={align} lang={lang} className={clsx(classes.flavorText)}>\r\n            {flavor_text}\r\n          </div>\r\n          : ''\r\n      )\r\n    }\r\n  )),\r\n}\r\n\r\n/** EXPORTS **/\r\nexport default RenderCell\r\n\r\nexport const {\r\n  DefaultRender,\r\n  RenderName,\r\n  RenderOracleText,\r\n  RenderPowerToughness,\r\n  RenderSet,\r\n  RenderBoolean,\r\n  RenderAmount,\r\n  RenderPrice,\r\n  RenderTag,\r\n  RenderManaCost,\r\n  RenderType,\r\n  RenderDate,\r\n  RenderFlavorText,\r\n} = renders\r\n","// import { useEffect } from 'react'\r\nimport { Box, Grid, Typography } from '@material-ui/core'\r\n\r\nimport RenderCell from '@/CardRenders'\r\n\r\n\r\nconst FieldsPanel = ({\r\n  /** VARS **/\r\n  card,\r\n  renderStyle = 'content',\r\n  ...props\r\n}) => {\r\n  const {\r\n    ...rest\r\n  } = props\r\n\r\n  const [name, manaCost, typeLine, set, oracleText, flavorText, artist, collectorNumber, powerToughness] = [\r\n    card && RenderCell({ card, columnName: 'name', renderStyle, ...rest }),\r\n    card && RenderCell({ card, columnName: 'mana_cost', renderStyle, ...rest }),\r\n    card && RenderCell({ card, columnName: 'type_line', renderStyle, ...rest }),\r\n    card && RenderCell({ card, columnName: 'set', renderStyle, ...rest }),\r\n    card && RenderCell({ card, columnName: 'oracle_text', renderStyle, ...rest }),\r\n    card && RenderCell({ card, columnName: 'flavor_text', renderStyle, ...rest }),\r\n    card && RenderCell({ card, columnName: 'artist', renderStyle, ...rest }),\r\n    card && RenderCell({ card, columnName: 'collector_number', renderStyle, ...rest }),\r\n    card && RenderCell({ card, columnName: 'power_toughness', renderStyle, ...rest }),\r\n  ]\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <Grid item container justifyContent='space-between' direction='column' style={{ height: '100%' }}>\r\n\r\n\r\n      <Grid item container justifyContent='center' spacing={2}>\r\n        <Grid item name='name'>\r\n          {name}\r\n        </Grid>\r\n        {manaCost && <Grid item name='mana-cost'>\r\n          {manaCost}\r\n        </Grid>}\r\n      </Grid>\r\n      <Grid item container component={Box} justifyContent='center' spacing={1} flexGrow={1}>\r\n        <Grid item name='type-line'>\r\n          {typeLine}\r\n        </Grid>\r\n        <Grid item name='set'>\r\n          {set}\r\n        </Grid>\r\n      </Grid>\r\n\r\n\r\n      {oracleText && <Grid item name='oracle-text' component={Box} paddingTop={1} flexGrow={1}>\r\n        {oracleText}\r\n      </Grid>}\r\n      {flavorText && <Grid item name='flavor-text' component={Box} align='left' flexGrow={1} paddingTop='0.45em'>\r\n        {flavorText}\r\n      </Grid>}\r\n\r\n\r\n      <Grid item container justifyContent='space-between' alignItems='baseline' wrap='nowrap' component={Typography} variant='overline' style={{ marginTop: '0.3em' }}>\r\n        <Grid item container spacing={1}>\r\n          <Grid item name='collector-number'>\r\n            #{collectorNumber}\r\n          </Grid>\r\n          <Grid item name='artist'>\r\n            <span className='ms ms-shadow ms-artist-nib' />{artist}\r\n          </Grid>\r\n        </Grid>\r\n        {powerToughness && <Grid item name='power-toughness'>\r\n          {powerToughness}\r\n        </Grid>}\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default FieldsPanel","\r\nconst useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  // const mainSidesPadding = theme.spacing(10)\r\n\r\n  return {\r\n    root: {\r\n      // position: 'relative',\r\n    },\r\n    accordion: {\r\n      // backgroundColor: theme.palette.background.secondary,\r\n      backgroundColor: theme.palette.type === 'dark' ? 'rgba(255,255,255,0.12)' : 'rgba(0,0,0,0.12)',\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n    'accordion-expanded': {\r\n      paddingBottom: theme.spacing(1),\r\n    },\r\n    listing: {\r\n      margin: 0,\r\n      '& > li': {\r\n        margin: '8px 1.25em 8px 0',\r\n      },\r\n      '& > li:first-child': {\r\n        paddingTop: 0,\r\n      },\r\n      '& > li:last-child': {\r\n        paddingBottom: 0,\r\n      },\r\n    },\r\n    editButtonContainer: {\r\n      // position: 'absolute',\r\n      // top: 0,\r\n      // right: 0,\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { Fragment, useState, useEffect } from 'react'\r\nimport { Tooltip, Chip, useMediaQuery, Accordion, AccordionDetails, AccordionSummary, InputAdornment, Divider, Typography, Paper, Modal, CircularProgress, Grid, IconButton, Button, Fade, Zoom, FormControlLabel, TextField, Checkbox, MenuItem } from '@material-ui/core'\r\nimport { Autocomplete } from '@material-ui/lab'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport { Delete as DeleteIcon, ExpandMore as ExpandMoreIcon } from '@material-ui/icons'\r\nimport { useSnackbar } from 'notistack'\r\nimport { connect } from 'react-redux'\r\nimport lodash from 'lodash'\r\n\r\nimport { updateCollection, addFilters, setEditEnabled_CardInfo } from '@/Logic/redux'\r\nimport { getCardPrints, MagicdexApi } from '@/Api'\r\nimport Config from '@/Config'\r\nimport RenderCell from '@/CardRenders'\r\nimport useStyles from './styles'\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  tagFilters: state.actions.app.collection.filters.tag || [],\r\n  editEnabled: state.actions.app.collection.cardInfo.editEnabled,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    updateCollection: (cards) => dispatch(updateCollection({ cards })),\r\n    addFilters: (filters) => dispatch(addFilters({ filters })),\r\n    setEditEnabled: (enabled) => dispatch(setEditEnabled_CardInfo({ enabled })),\r\n  }\r\n})\r\n\r\n/** UTILS **/\r\nconst clampInt = (value, min, max) => Math.max(Math.min(value, max), min)\r\n\r\n\r\nconst EditPanel = ({\r\n  /** VARS **/\r\n  card,\r\n  updateHeight: _updateHeight,\r\n  onMenuHover,\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n    dispatch,\r\n    tagFilters,\r\n    editEnabled,\r\n  } = props\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  const smDown = useMediaQuery(theme => theme.breakpoints.down('sm'))\r\n  const updateHeight = () => setTimeout(() => _updateHeight(), 150)\r\n  const [modalOpen, setModalOpen] = useState(false)\r\n\r\n  const [newCard, setNewCard] = useState({})\r\n  const [printsSet, setPrintsSet] = useState([])\r\n  const [printsLang, setPrintsLang] = useState([])\r\n  const [rulings, setRulings] = useState(undefined)\r\n\r\n\r\n  /** FUNCTIONS **/\r\n  const resetNewCard = () => {\r\n    setPrintsSet([])\r\n    setPrintsLang([])\r\n    onMenuHover(null)\r\n    setModalOpen(false)\r\n    dispatch.setEditEnabled(false)\r\n\r\n    setNewCard({\r\n      id: card.id,\r\n      tag: card.tag,\r\n      amount: card.amount,\r\n      foil: card.foil,\r\n      condition: card.condition,\r\n      signed: card.signed,\r\n      altered: card.altered,\r\n      misprint: card.misprint,\r\n      set: card.set,\r\n      collector_number: card.collector_number,\r\n      lang: card.lang,\r\n    })\r\n\r\n    Promise\r\n      .all([\r\n        getCardPrints(card, 'set'),\r\n        getCardPrints(card, 'lang'),\r\n      ])\r\n      .then(([set, lang]) => {\r\n        setPrintsSet(set)\r\n        setPrintsLang(lang)\r\n      })\r\n  }\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    resetNewCard()\r\n\r\n    fetch(card.rulings_uri)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setRulings(lodash\r\n          .chain(data['data'])\r\n          .reverse()\r\n          .map(item => Object.assign(item, { published_at: new Date(item.published_at) }))\r\n          .sortBy('published_at')\r\n          .value()\r\n        )\r\n      })\r\n  }, [card])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleChipClick = (tag) => (e) => {\r\n    if (Array.isArray(tagFilters)) {\r\n      dispatch.addFilters({\r\n        tag: tagFilters.includes(tag)\r\n          ? tagFilters.filter(item => item !== tag)\r\n          : tagFilters.concat(tag)\r\n      })\r\n    }\r\n    else\r\n      dispatch.addFilters({\r\n        tag: [tag]\r\n      })\r\n  }\r\n\r\n  const handleEditButtonClick = (e) => {\r\n    if (editEnabled) {\r\n      // save changes\r\n      let cardClone = Object.assign(\r\n        lodash.cloneDeep(card),\r\n        newCard\r\n      )\r\n\r\n      if (Config.MODIFY_DB_ALLOWED)\r\n        MagicdexApi.updateCards([cardClone])\r\n          .then(res => {\r\n            dispatch.updateCollection(res)\r\n            enqueueSnackbar(`Updated ${card.name} [${card.set.toUpperCase()}]`, { variant: 'info' })\r\n          })\r\n          .catch(error => {\r\n            enqueueSnackbar(`Error updating ${card.name} [${card.set.toUpperCase()}]`, { variant: 'error' })\r\n            console.error({ error })\r\n          })\r\n      else {\r\n        dispatch.updateCollection([{ action: 'UPDATED', card: cardClone }])\r\n        enqueueSnackbar(`Updated ${card.name} [${card.set.toUpperCase()}]`, { variant: 'info' })\r\n      }\r\n    }\r\n\r\n    onMenuHover(null)\r\n    dispatch.setEditEnabled(!editEnabled)\r\n    updateHeight()\r\n  }\r\n\r\n  const handleCancelButtonClick = (e) => {\r\n    resetNewCard()\r\n    onMenuHover(null)\r\n    dispatch.setEditEnabled(false)\r\n    updateHeight()\r\n  }\r\n\r\n  const handleDeleteButtonClick = (confirm) => (e) => {\r\n    if (confirm) {\r\n      const clonedCard = { _id: card._id, amount: 0 }\r\n\r\n      if (Config.MODIFY_DB_ALLOWED)\r\n        MagicdexApi.updateCards([clonedCard])\r\n          .then(res => {\r\n            dispatch.updateCollection(res)\r\n            enqueueSnackbar(`Deleted ${card.name} [${card.set.toUpperCase()}]`, { variant: 'success' })\r\n          })\r\n          .catch(error => {\r\n            enqueueSnackbar(`Failed to delete ${card.name} [${card.set.toUpperCase()}]`, { variant: 'error' })\r\n          })\r\n      else {\r\n        dispatch.updateCollection(clonedCard.map(card => ({ action: 'UPDATED', card })))\r\n        enqueueSnackbar(`Deleted ${card.name} [${card.set.toUpperCase()}]`, { variant: 'success' })\r\n      }\r\n    }\r\n    else\r\n      setModalOpen(true)\r\n  }\r\n\r\n  const handleCardInfoChange = (field, value) => {\r\n    switch (field) {\r\n      case 'amount':\r\n        value = clampInt(value, 1, 999999)\r\n        setNewCard(card => ({ ...card, amount: value }))\r\n        onMenuHover({ ...card, ...newCard, amount: value })\r\n        break\r\n\r\n      case 'foil':\r\n        setNewCard(card => ({ ...card, foil: value }))\r\n        onMenuHover({ ...card, ...newCard, foil: value })\r\n        break\r\n\r\n      case 'condition':\r\n      case 'signed':\r\n      case 'altered':\r\n      case 'misprint':\r\n        setNewCard(card => ({ ...card, [field]: value }))\r\n        break\r\n\r\n      case 'tag':\r\n        value = lodash.chain(value)\r\n          .map(v => v.trim())\r\n          .compact()\r\n          .uniqBy(v => v.toLowerCase())\r\n          .value()\r\n        setNewCard(card => ({ ...card, tag: value }))\r\n        break\r\n\r\n      case 'set':\r\n        const [selectedSet, selectedCollectorNumber] = value.split(':')\r\n        const { foil, ...rest } = printsSet.find(card => card.set === selectedSet && card.collector_number === selectedCollectorNumber)\r\n        setNewCard(card => ({\r\n          ...card,\r\n          ...rest,\r\n        }))\r\n\r\n        // onMenuHover(null)\r\n        setPrintsLang([])\r\n        getCardPrints(rest, 'lang')\r\n          .then(setPrintsLang)\r\n        break\r\n\r\n      case 'lang':\r\n        const { foil: _, ..._rest } = printsLang.find(item => item.lang === value)\r\n        setNewCard(card => ({\r\n          ...card,\r\n          ..._rest,\r\n        }))\r\n        break\r\n\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <>\r\n      <Grid item container xs={12} spacing={1} justifyContent='center' alignItems='center' className={classes.root}>\r\n\r\n        <Grid item container xs={12} spacing={1} direction='row-reverse' justifyContent='flex-start' alignItems='center' className={classes.editButtonContainer}>\r\n          <Grid item>\r\n            <Button size='small' variant='contained' color='primary' onClick={handleEditButtonClick}>\r\n              {editEnabled ? 'Save' : 'Edit'}\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Zoom in={editEnabled} style={{ transformOrigin: 'center right' }}>\r\n              <Button size='small' variant='outlined' onClick={handleCancelButtonClick}>\r\n                cancel\r\n              </Button>\r\n            </Zoom>\r\n          </Grid>\r\n          <Grid item>\r\n            <Zoom in={editEnabled} style={{ transformOrigin: 'center right' }}>\r\n              <IconButton title='Delete' size='small' onClick={handleDeleteButtonClick(false)}>\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </Zoom>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {\r\n          editEnabled\r\n            ? (\r\n              <Grid item container justifyContent='center' alignItems='flex-start' spacing={1}>\r\n                <Grid item container direction='column' justifyContent='center' alignItems='flex-start' style={{ maxWidth: 'min-content' }}>\r\n                  <Grid item>\r\n                    <TextField\r\n                      size='small'\r\n                      variant='outlined'\r\n                      type='number'\r\n                      label='Amount'\r\n                      color='secondary'\r\n                      value={newCard.amount}\r\n                      inputProps={{\r\n                        inputMode: 'numeric',\r\n                        min: 1,\r\n                      }}\r\n                      onChange={e => handleCardInfoChange('amount', e.target.value)}\r\n                      style={{ marginLeft: 0 }}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item style={{ width: '9em', paddingTop: 8 }}>\r\n                    <TextField select\r\n                      color='secondary'\r\n                      variant='outlined'\r\n                      margin='dense'\r\n                      size='small'\r\n                      align='left'\r\n                      label='Condition'\r\n                      value={newCard.condition || ''}\r\n                      onChange={e => handleCardInfoChange('condition', e.target.value)}\r\n                      style={{ marginLeft: 0 }}\r\n                    >\r\n                      {\r\n                        [['NM', 'NM'], ['LP', 'LP'], ['MP', 'MP'], ['HP', 'HP'], ['DAMAGED', 'Damaged']]\r\n                          .map(cond =>\r\n                            <MenuItem key={cond[0]} value={cond[0]}>{cond[1]}</MenuItem>)\r\n                      }\r\n                    </TextField>\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <FormControlLabel\r\n                      label='Foil'\r\n                      control={\r\n                        <Checkbox\r\n                          checked={newCard.foil}\r\n                          onChange={e => handleCardInfoChange('foil', e.target.checked)}\r\n                        />\r\n                      }\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <FormControlLabel\r\n                      label='Signed'\r\n                      control={\r\n                        <Checkbox\r\n                          checked={newCard.signed}\r\n                          onChange={e => handleCardInfoChange('signed', e.target.checked)}\r\n                        />\r\n                      }\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <FormControlLabel\r\n                      label='Altered'\r\n                      control={\r\n                        <Checkbox\r\n                          checked={newCard.altered}\r\n                          onChange={e => handleCardInfoChange('altered', e.target.checked)}\r\n                        />\r\n                      }\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <FormControlLabel\r\n                      label='Misprint'\r\n                      control={\r\n                        <Checkbox\r\n                          checked={newCard.misprint}\r\n                          onChange={e => handleCardInfoChange('misprint', e.target.checked)}\r\n                        />\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid item container direction='column' spacing={1} xs={12} sm={10} md>\r\n                  <Grid item container wrap='nowrap' spacing={1}>\r\n                    <Grid item xs style={{ width: '1px' }}>\r\n                      <TextField select\r\n                        color='secondary'\r\n                        variant='outlined'\r\n                        margin='dense'\r\n                        size='small'\r\n                        align='left'\r\n                        disabled={printsSet.length <= 1}\r\n                        label='Set'\r\n                        value={(printsSet || []).length === 0 ? '' : `${newCard.set}:${newCard.collector_number}`}\r\n                        onChange={e => handleCardInfoChange('set', e.target.value)}\r\n                        SelectProps={{\r\n                          onClose: e => onMenuHover({ ...card, ...newCard })\r\n                        }}\r\n                        InputProps={printsSet.length === 0\r\n                          ? {\r\n                            startAdornment: (\r\n                              <InputAdornment position='start'>\r\n                                <CircularProgress size={20} />\r\n                              </InputAdornment>\r\n                            )\r\n                          }\r\n                          : {}\r\n                        }\r\n                      >\r\n                        {\r\n                          (printsSet || [])\r\n                            .map(item =>\r\n                              <MenuItem\r\n                                key={`${item.set}:${item.collector_number}`}\r\n                                value={`${item.set}:${item.collector_number}`}\r\n                                onMouseEnter={e => onMenuHover({ ...item, foil: newCard.foil })}\r\n                                onMouseLeave={e => onMenuHover({ ...card, ...newCard })}\r\n                              >\r\n                                {`${item.set_name} - #${item.collector_number}`}\r\n                              </MenuItem>\r\n                            )\r\n                        }\r\n                      </TextField>\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                      <TextField select\r\n                        color='secondary'\r\n                        variant='outlined'\r\n                        margin='dense'\r\n                        size='small'\r\n                        align='left'\r\n                        label='Language'\r\n                        disabled={printsLang.length <= 1}\r\n                        value={(printsLang || []).length === 0 ? '' : newCard.lang}\r\n                        style={{ width: '6em' }}\r\n                        onChange={e => handleCardInfoChange('lang', e.target.value)}\r\n                        SelectProps={{\r\n                          onClose: e => onMenuHover({ ...card, ...newCard })\r\n                        }}\r\n                        InputProps={printsLang.length === 0\r\n                          ? {\r\n                            startAdornment: (\r\n                              <InputAdornment position='start'>\r\n                                <CircularProgress size={20} />\r\n                              </InputAdornment>\r\n                            )\r\n                          }\r\n                          : {}\r\n                        }\r\n                      >\r\n                        {\r\n                          (printsLang || [])\r\n                            .map(item =>\r\n                              <MenuItem\r\n                                key={item.lang}\r\n                                value={item.lang}\r\n                                onMouseEnter={e => onMenuHover({ ...item, foil: newCard.foil })}\r\n                                onMouseLeave={e => onMenuHover({ ...card, ...newCard })}\r\n                              >\r\n                                {item.lang}\r\n                              </MenuItem>\r\n                            )\r\n                        }\r\n                      </TextField>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid item style={{ marginRight: 11 }}>\r\n                    <Autocomplete multiple freeSolo disableClearable //autoSelect\r\n                      limitTags={4}\r\n                      label='Tags'\r\n                      variant='outlined'\r\n                      margin='dense'\r\n                      size='small'\r\n                      color='secondary'\r\n                      options={[]}\r\n                      value={newCard.tag}\r\n                      onChange={(e, newValue) => { handleCardInfoChange('tag', newValue) }}\r\n                      onInputChange={(e, newInputValue) => {\r\n                        if (newInputValue?.match(/[;,]/g)) {\r\n                          const values = lodash\r\n                            .chain(newInputValue)\r\n                            .split(/[;,]/)\r\n                            .map(v => v.trim())\r\n                            .compact()\r\n                            .uniqBy(v => v.toLowerCase())\r\n                            .value()\r\n                          if (values.length > 0)\r\n                            handleCardInfoChange('tag', newCard.tag.concat(values))\r\n                          else\r\n                            handleCardInfoChange('tag', newCard.tag)\r\n                        }\r\n                      }}\r\n                      renderInput={(props) => (\r\n                        <TextField multiline\r\n                          {...props}\r\n                          color='secondary'\r\n                          variant='outlined'\r\n                          label='Tags'\r\n                          helperText={\r\n                            ['Tags are seperated by ', <code>{'Enter'}</code>, ' or ', <code>{'[;,]'}</code>]\r\n                              .map((item, i) =>\r\n                                <Fragment key={i}>{item}</Fragment>\r\n                              )\r\n                          }\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            )\r\n            : (\r\n              <Grid item container spacing={2}>\r\n                <Grid item xs={4} component='table' style={{ borderSpacing: 8, height: 'fit-content' }}>\r\n                  <tbody>\r\n                    {\r\n                      ['amount', 'condition', '', 'foil', 'signed', 'altered', 'misprint']\r\n                        .map((columnName, i) =>\r\n                          <tr key={i} style={{ verticalAlign: columnName === 'condition' ? 'baseline' : 'middle' }}>\r\n                            {\r\n                              columnName\r\n                                ? <>\r\n                                  <td style={{ width: 0 }}>\r\n                                    <Typography>\r\n                                      {lodash.upperFirst(columnName)}\r\n                                    </Typography>\r\n                                  </td>\r\n                                  <td align='center'>\r\n                                    <RenderCell\r\n                                      card={card}\r\n                                      columnName={columnName}\r\n                                      renderStyle='content'\r\n                                    />\r\n                                  </td>\r\n                                </>\r\n                                : <td colSpan={2}>\r\n                                  <Divider />\r\n                                </td>\r\n                            }\r\n                          </tr>\r\n                        )\r\n                    }\r\n                  </tbody>\r\n                </Grid>\r\n\r\n                <Grid item container xs justifyContent='flex-start' alignItems='flex-start'>\r\n                  <Grid item container xs={12} spacing={1}>\r\n                    <Grid item xs={12} component={Typography} variant='h6' align='left'>\r\n                      <Tooltip arrow\r\n                        placement='right'\r\n                        enterDelay={300}\r\n                        style={{ cursor: 'help' }}\r\n                        title={card.tag.length > 0 ? <>Click a tag to search for <br /> more cards with that tag</> : ''}\r\n                      >\r\n                        <span>Tags</span>\r\n                      </Tooltip>\r\n                    </Grid>\r\n                    <Grid item container spacing={1} style={{ paddingLeft: 16 }} >\r\n                      {\r\n                        card.tag.length > 0\r\n                          ? card.tag.map((tag, i) =>\r\n                            <Grid item key={i}>\r\n                              <Chip\r\n                                label={tag}\r\n                                color={Array.isArray(tagFilters) && tagFilters.includes(tag) ? 'secondary' : 'default'}\r\n                                onClick={handleChipClick(tag)}\r\n                                size='small'\r\n                                variant='outlined'\r\n                              />\r\n                            </Grid>\r\n                          )\r\n                          : <Typography style={{ fontFamily: 'Determination Mono' }}>\r\n                            * But nobody came.\r\n                          </Typography>\r\n                      }\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                {\r\n                  rulings?.length > 0 &&\r\n                  <>\r\n                    <Grid item xs={12}>\r\n                      <Divider />\r\n                    </Grid>\r\n                    <Grid item container style={{ paddingTop: 12 }}>\r\n                      <Accordion\r\n                        className={classes.accordion}\r\n                        classes={{ expanded: classes['accordion-expanded'] }}\r\n                        TransitionProps={{\r\n                          onEntering: updateHeight,\r\n                          onEntered: updateHeight,\r\n                          onExiting: updateHeight,\r\n                          onExited: updateHeight,\r\n                        }}\r\n                      >\r\n                        <AccordionSummary expandIcon={<ExpandMoreIcon />} >\r\n                          <Typography variant='h6'>\r\n                            {smDown ? 'Rulings' : 'Additional Rulings'}\r\n                          </Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails style={{ padding: 0 }}>\r\n                          <ul className={classes.listing}>\r\n                            {\r\n                              rulings.map((rule, i) =>\r\n                                <li key={i}>\r\n                                  <RenderCell\r\n                                    card={{ oracle_text: rule.comment }}\r\n                                    columnName='oracle_text'\r\n                                  />\r\n                                </li>\r\n                              )\r\n                            }\r\n                          </ul>\r\n                        </AccordionDetails>\r\n                      </Accordion>\r\n                    </Grid>\r\n                  </>\r\n                }\r\n              </Grid>\r\n            )\r\n        }\r\n      </Grid>\r\n\r\n      <Grid container spacing={5} justifyContent='center' alignItems='center'\r\n        component={Modal} closeAfterTransition\r\n        onClose={e => setModalOpen(false)}\r\n        open={modalOpen}\r\n        BackdropProps={{ timeout: 500 }}\r\n      >\r\n        <Grid item component={Fade} in={modalOpen}>\r\n          <Paper>\r\n            <Grid container justifyContent='center' alignItems='center' spacing={2}>\r\n              <Grid item xs={12} align='center'>\r\n                <Typography noWrap variant='h5' align='left'>\r\n                  Confirm Action\r\n                </Typography>\r\n                <Typography noWrap variant='body1' align='left'>\r\n                  Are you sure you want to delete this card?\r\n                </Typography>\r\n                <Typography noWrap variant='body2' align='left' color='error'>\r\n                  This action is irreversible.\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item container justifyContent='flex-end' xs={12} spacing={1}>\r\n                <Grid item>\r\n                  <Button variant='outlined' onClick={e => setModalOpen(false)}>\r\n                    Nop\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button variant='contained' color='secondary' onClick={handleDeleteButtonClick(true)}>\r\n                    Yep\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    connect(mapStateToProps, mapDispatchToProps)(\r\n      EditPanel\r\n    )\r\n  )","\r\nconst useStyles = (theme) => {\r\n  const smDown = theme.breakpoints.down('sm')\r\n\r\n  return {\r\n    baseContainer: {\r\n      position: 'relative',\r\n    },\r\n    root: {\r\n      // width: '100%',\r\n      backgroundColor: theme.palette.background.secondary,\r\n      position: 'relative',\r\n      marginTop: theme.spacing(1),\r\n      padding: `${theme.spacing(5)}px ${theme.spacing(5)}px ${theme.spacing(5)}px ${theme.spacing(4)}px`,\r\n      // display: 'flex',\r\n      // flexWrap: 'wrap',\r\n      // alignItems: 'baseline',\r\n      // flexDirection: 'column',\r\n      // justifyContent: 'center',\r\n      // alignContent: 'center',\r\n    },\r\n    topArrow: {\r\n      content: '\"\"',\r\n      zIndex: 1,\r\n      top: -1,\r\n      width: 0,\r\n      height: 0,\r\n      position: 'absolute',\r\n      backgroundColor: 'unset',\r\n      border: 'solid transparent',\r\n      borderWidth: '1.5rem 1.75rem 0rem 1.75rem',\r\n      left: `calc(50% - (1.75rem / 2))`,\r\n      transition: 'all 0.3s ease',\r\n    },\r\n    image: {\r\n      marginRight: -theme.spacing(1),\r\n      // width: 'fit-content',\r\n    },\r\n    content: {\r\n      transition: 'all 0.3s ease',\r\n      padding: theme.spacing(2),\r\n      marginTop: 0,\r\n      maxWidth: '42.5vw',\r\n      [smDown]: {\r\n        maxWidth: '70vw',\r\n      },\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { useState, useEffect, useRef, useImperativeHandle } from 'react'\r\nimport { IconButton, Grid, Paper, Hidden, Divider, useMediaQuery } from '@material-ui/core'\r\nimport { ChevronRight as ChevronRightIcon, ChevronLeft as ChevronLeftIcon } from '@material-ui/icons'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport { connect } from 'react-redux'\r\nimport SwipeableViews from 'react-swipeable-views'\r\n\r\nimport { setViewIndex_CardInfo } from '@/Logic/redux'\r\nimport { CardImage } from '@/Components'\r\nimport { addCardPrice, addLayoutKeywords } from '@/Providers'\r\nimport FieldsPanel from './FieldsPanel'\r\nimport EditPanel from './EditPanel'\r\nimport useStyles from './styles'\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  viewIndex: state.actions.app.collection.cardInfo.viewIndex,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    setViewIndex: (index) => dispatch(setViewIndex_CardInfo({ index })),\r\n  }\r\n})\r\n\r\n\r\nconst CardInfo = ({\r\n  /** VARS **/\r\n  refs,\r\n  card,\r\n  rootComponent,\r\n  rootProps,\r\n  topArrowProps,\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n    dispatch,\r\n    viewIndex,\r\n  } = props\r\n  const swipeableViewsRef = useRef()\r\n  const [menuHoverItem, setMenuHoverItem] = useState()\r\n\r\n  // const xsDown = useMediaQuery(theme => theme.breakpoints.down('xm'))\r\n  const smDown = useMediaQuery(theme => theme.breakpoints.down('sm'))\r\n  const mdDown = useMediaQuery(theme => theme.breakpoints.down('md'))\r\n  // const lgDown = useMediaQuery(theme => theme.breakpoints.down('lg'))\r\n  // const xlDown = useMediaQuery(theme => theme.breakpoints.down('xl'))\r\n\r\n\r\n  /** EFFECTS **/\r\n  useImperativeHandle(refs, () => ({\r\n    updateHeight: swipeableViewsRef.current?.updateHeight || (() => { }),\r\n  }))\r\n\r\n  useEffect(() => {\r\n    //onMount\r\n    dispatch.setViewIndex(0)\r\n  }, [])\r\n\r\n  // useEffect(() => {\r\n  //   // onMount\r\n  //   const params = new URLSearchParams(location.search)\r\n  //   params.set('card_id', card._id)\r\n  //   history.push({\r\n  //     search: params.toString()\r\n  //   })\r\n\r\n  //   // onUnmount\r\n  //   return () => {\r\n  //     const params = new URLSearchParams(location.search)\r\n  //     params.delete('card_id')\r\n  //     history.push({\r\n  //       search: params.toString()\r\n  //     })\r\n  //   }\r\n  // }, [card])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleViewIndexChange = value => e => {\r\n    dispatch.setViewIndex(value)\r\n  }\r\n\r\n  const onMenuHover = (hoverItem) => {\r\n    if (hoverItem) {\r\n      // hoverItem.foil = card.foil\r\n      hoverItem = addCardPrice(hoverItem, card.currency)\r\n      hoverItem = addLayoutKeywords(hoverItem)\r\n      setMenuHoverItem(hoverItem)\r\n    }\r\n    else\r\n      setMenuHoverItem(null)\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <div className={classes.baseContainer}>\r\n      <div\r\n        className={classes.topArrow}\r\n        {...topArrowProps}\r\n      />\r\n\r\n      <Grid container\r\n        justifyContent='center'\r\n        alignItems={smDown ? 'center' : 'flex-start'}\r\n        direction={smDown ? 'column' : 'row'}\r\n        component={rootComponent}\r\n        wrap='nowrap'\r\n        className={classes.root}\r\n        {...rootProps}\r\n      >\r\n\r\n        {/* CARD PREVIEW */}\r\n        <Hidden smDown>\r\n          <Grid item className={classes.image}>\r\n            <CardImage showPrice tiltEnabled transform3dEnabled\r\n              card={menuHoverItem || card}\r\n            />\r\n          </Grid>\r\n        </Hidden>\r\n        <Hidden mdUp>\r\n          <Grid item style={{ marginBottom: 16 }}>\r\n            <CardImage showPrice tiltEnabled transform3dEnabled\r\n              card={menuHoverItem || card}\r\n            />\r\n          </Grid>\r\n        </Hidden>\r\n\r\n        <Grid item xs={12} md={9} lg={8} xl={7}\r\n          align='center'\r\n          component={Paper}\r\n          elevation={3}\r\n          className={classes.content}\r\n        >\r\n          <SwipeableViews ignoreNativeScroll\r\n            ref={swipeableViewsRef}\r\n            animateHeight\r\n            index={viewIndex}\r\n            onChangeIndex={handleViewIndexChange}\r\n            slideStyle={{ overflow: 'hidden' }}\r\n          >\r\n\r\n            {/* VIEW 1 */}\r\n            <Grid container justifyContent='center' alignItems='center' wrap='nowrap' style={{ padding: 1.5 }}>\r\n              <Grid item xs={12}>\r\n                {\r\n                  card.is_transform || card.is_split || card.is_flip\r\n                    ?\r\n                    <Grid item container justifyContent='center' alignItems='stretch' spacing={mdDown ? 0 : 2}>\r\n                      {/* Front Face */}\r\n                      <Grid item container justifyContent='center' xs={12} sm={11} lg>\r\n                        <FieldsPanel\r\n                          card={card}\r\n                          cardFace={0}\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Hidden lgUp>\r\n                        <Grid container wrap='nowrap' alignItems='center' style={{ alignSelf: 'center' }}>\r\n                          <Grid item xs component={Divider} style={{ marginBottom: 8 }} />\r\n                        </Grid>\r\n                      </Hidden>\r\n                      <Hidden mdDown>\r\n                        <Divider flexItem orientation='vertical' />\r\n                      </Hidden>\r\n\r\n                      {/* Back Face */}\r\n                      <Grid item container justifyContent='center' xs={12} sm={11} lg>\r\n                        <FieldsPanel\r\n                          card={card}\r\n                          cardFace={1}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n\r\n                    : /* Single faced card */\r\n                    <Grid item container justifyContent='center' xs={12} md={10} lg={9} xl={8}>\r\n                      <FieldsPanel\r\n                        card={card}\r\n                      />\r\n                    </Grid>\r\n                }\r\n              </Grid>\r\n\r\n              <Grid item style={{ alignSelf: 'flex-start' }}>\r\n                <IconButton size='small' onClick={handleViewIndexChange(1)}>\r\n                  <ChevronRightIcon />\r\n                </IconButton>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* VIEW 2 */}\r\n            <Grid container justifyContent='center' alignItems='center' wrap='nowrap' style={{ padding: 1.5 }}>\r\n              <Grid item style={{ alignSelf: 'flex-start' }}>\r\n                <IconButton size='small' onClick={handleViewIndexChange(0)}>\r\n                  <ChevronLeftIcon />\r\n                </IconButton>\r\n              </Grid>\r\n\r\n              <Grid item container xs>\r\n                <EditPanel\r\n                  card={card}\r\n                  updateHeight={swipeableViewsRef.current?.updateHeight}\r\n                  onMenuHover={onMenuHover}\r\n                />\r\n              </Grid>\r\n\r\n            </Grid>\r\n\r\n          </SwipeableViews>\r\n        </Grid>\r\n\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    connect(mapStateToProps, mapDispatchToProps)(\r\n      CardInfo\r\n    )\r\n  )\r\n","import grey from \"@material-ui/core/colors/grey\"\r\n\r\n\r\nconst useStyles = (theme) => {\r\n  const floatingBackgroundColor = theme.palette.type === 'dark' ? grey[700] : grey['A100']\r\n\r\n  return {\r\n    root: {\r\n      '& > *': {\r\n        borderBottom: 'unset',\r\n      },\r\n    },\r\n    content: {\r\n      position: 'relative',\r\n    },\r\n    floating: {\r\n      zIndex: 2,\r\n      position: 'absolute',\r\n      top: theme.spacing(1),\r\n      left: theme.spacing(9),\r\n      maxWidth: theme.spacing(25),\r\n      width: 'max-content',\r\n      padding: `${theme.spacing(0.5)}px ${theme.spacing(1.25)}px ${theme.spacing(0.5)}px ${theme.spacing(1.25)}px`,\r\n      backgroundColor: floatingBackgroundColor,\r\n      color: theme.palette.getContrastText(floatingBackgroundColor),\r\n    },\r\n    checkboxCell: {\r\n      // borderLeft: `1px solid ${theme.palette.divider}`,\r\n      // paddingRight: 0,\r\n    },\r\n    checkbox: {\r\n      padding: '5px 0 5px 8px',\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { Fragment, useState, useEffect, useRef } from 'react'\r\nimport { Hidden, TableRow, TableCell, Collapse, IconButton, Checkbox, Paper } from '@material-ui/core'\r\nimport { withStyles, useTheme } from '@material-ui/styles'\r\nimport { connect } from 'react-redux'\r\nimport upperFirst from 'lodash/upperFirst'\r\nimport clsx from 'clsx'\r\nimport {\r\n  KeyboardArrowDown as KeyboardArrowDownIcon,\r\n  KeyboardArrowUp as KeyboardArrowUpIcon\r\n} from '@material-ui/icons'\r\n\r\nimport { addSelectedCardIds, removeSelectedCardIds, setCurrentOpenCardId } from '@/Logic/redux'\r\nimport RenderCell from '@/CardRenders'\r\nimport { CardInfo, ContextMenu } from '@/Components/Collection/Views'\r\nimport useStyles from './styles'\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  selectedCardIds: state.actions.app.collection.selectedCardIds,\r\n  cardsSelectableEnabled: state.actions.app.collection.cardsSelectableEnabled,\r\n  currentOpenCardId: state.actions.app.collection.currentOpenCardId,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    addSelectedCardId: (id) => dispatch(addSelectedCardIds({ id })),\r\n    removeSelectedCardId: (id) => dispatch(removeSelectedCardIds({ id })),\r\n    setCurrentOpenCardId: (id) => dispatch(setCurrentOpenCardId({ id })),\r\n  }\r\n})\r\n\r\n\r\nconst CardRow = ({\r\n  /** VARS **/\r\n  columns,\r\n  key,\r\n  card,\r\n  onMouseEnter,\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n    dispatch,\r\n    cardsSelectableEnabled: selectable,\r\n    selectedCardIds,\r\n    currentOpenCardId,\r\n  } = props\r\n  const theme = useTheme()\r\n  const setRef = useRef()\r\n  const cardInfoRef = useRef()\r\n  const checkboxRef = useRef()\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [showContent, setShowContent] = useState(false)\r\n  const [contextMenuState, setContextMenuState] = useState({ clearSelectedCardsOnExit: false })\r\n\r\n  const [isMouseOver, setIsMouseOver] = useState(false)\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    setIsOpen(currentOpenCardId === card._id)\r\n  }, [currentOpenCardId])\r\n\r\n  useEffect(() => {\r\n    if (contextMenuState.mouseY && contextMenuState.mouseX) {\r\n      //opening\r\n      if (selectedCardIds.length === 0) {\r\n        dispatch.addSelectedCardId(card._id)\r\n        setContextMenuState(state => ({\r\n          ...state,\r\n          clearSelectedCardsOnExit: true,\r\n        }))\r\n      }\r\n    }\r\n    else {\r\n      //closing\r\n      if (contextMenuState.clearSelectedCardsOnExit) {\r\n        dispatch.removeSelectedCardId(card._id)\r\n        setContextMenuState({\r\n          clearSelectedCardsOnExit: false,\r\n        })\r\n      }\r\n    }\r\n  }, [contextMenuState.mouseY, contextMenuState.mouseX])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleSelectChange = (e) => {\r\n    e.target.checked\r\n      ? dispatch.addSelectedCardId(card._id)\r\n      : dispatch.removeSelectedCardId(card._id)\r\n  }\r\n\r\n  const handleCheckboxCellClick = (e) => {\r\n    e.stopPropagation()\r\n\r\n    !checkboxRef.current.checked\r\n      ? dispatch.addSelectedCardId(card._id)\r\n      : dispatch.removeSelectedCardId(card._id)\r\n  }\r\n\r\n  const handleMiddleMouseClick = (e) => {\r\n    e.preventDefault()\r\n    if (e.button === 1) // middle mouse click\r\n      selectedCardIds.includes(card._id)\r\n        ? dispatch.removeSelectedCardId(card._id)\r\n        : dispatch.addSelectedCardId(card._id)\r\n  }\r\n\r\n  const handleContextMenu = (e) => {\r\n    e.preventDefault()\r\n    setContextMenuState(state => ({\r\n      ...state,\r\n      mouseX: e.clientX,\r\n      mouseY: e.clientY,\r\n    }))\r\n  }\r\n\r\n  const handleIsOpenToggle = () => {\r\n    if (!isOpen)\r\n      dispatch.setCurrentOpenCardId(card._id)\r\n    else\r\n      dispatch.setCurrentOpenCardId(null)\r\n  }\r\n\r\n  const collapseUpdate = (showContent) => (isAppearing) => {\r\n    if (showContent != null)\r\n      setShowContent(showContent)\r\n    cardInfoRef.current?.updateHeight()\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <Fragment key={key}>\r\n      <ContextMenu\r\n        setState={setContextMenuState}\r\n        {...contextMenuState}\r\n      />\r\n\r\n      <TableRow\r\n        className={clsx(classes.root, 'cursor-pointer')}\r\n        onClick={handleIsOpenToggle}\r\n        onMouseEnter={onMouseEnter}\r\n        onContextMenu={handleContextMenu}\r\n        onMouseDown={handleMiddleMouseClick}\r\n        style={{\r\n          backgroundColor: (\r\n            selectedCardIds.includes(card._id)\r\n              ? theme.palette.action.selected\r\n              : 'unset'\r\n          ),\r\n        }}\r\n      >\r\n        {\r\n          Object\r\n            .entries(columns)\r\n            .map(\r\n              ([columnName, columnDisplayName], i) => (\r\n                <TableCell\r\n                  key={i}\r\n                  align='center'\r\n                  className={classes.content}\r\n                  {...( /* renderSet() setup */\r\n                    columnName === 'set'\r\n                      ? {\r\n                        ref: setRef,\r\n                        onMouseEnter: e => setIsMouseOver(true),\r\n                        onMouseLeave: e => setIsMouseOver(false),\r\n                      }\r\n                      : {}\r\n                  )} /* renderSet() setup */\r\n                >\r\n                  <RenderCell\r\n                    card={card}\r\n                    columnName={columnName}\r\n                  />\r\n                  {\r\n                    columnName === 'set' && isMouseOver && (\r\n                      <Paper elevation={5} className={classes.floating} onMouseEnter={e => setIsMouseOver(false)}>\r\n                        {[card.set_name, upperFirst(card.rarity), '#' + card.collector_number].join(' - ')}\r\n                      </Paper>\r\n                    )\r\n                  }\r\n                </TableCell>\r\n              )\r\n            )\r\n        }\r\n\r\n        {/* CHECKBOX / DROPDOWN-ARROW */}\r\n        {\r\n          selectable\r\n            ?\r\n            <TableCell onClick={handleCheckboxCellClick} className={classes.checkboxCell}>\r\n              <Checkbox\r\n                size='small'\r\n                checked={selectedCardIds.includes(card._id)}\r\n                onChange={handleSelectChange}\r\n                className={classes.checkbox}\r\n                inputProps={{\r\n                  ref: checkboxRef,\r\n                }}\r\n              />\r\n            </TableCell>\r\n            :\r\n            <Hidden smDown>\r\n              <TableCell>\r\n                <IconButton size='small' onClick={handleIsOpenToggle}>\r\n                  {\r\n                    isOpen\r\n                      ? <KeyboardArrowUpIcon />\r\n                      : <KeyboardArrowDownIcon />\r\n                  }\r\n                </IconButton>\r\n              </TableCell>\r\n            </Hidden>\r\n        }\r\n      </TableRow>\r\n\r\n      <TableRow onMouseEnter={onMouseEnter} className={classes.row} style={{ display: showContent ? 'table-row' : 'none' }}>\r\n        <TableCell colSpan={10} style={{ padding: 0 }}>\r\n          <Collapse mountOnEnter unmountOnExit\r\n            timeout='auto'\r\n            in={isOpen}\r\n            onEnter={collapseUpdate(true)}\r\n            onExited={collapseUpdate(false)}\r\n            onEntering={collapseUpdate()}\r\n          >\r\n            <CardInfo\r\n              card={card}\r\n              refs={cardInfoRef}\r\n              topArrowProps={{\r\n                style: {\r\n                  borderTopColor: theme.palette.background.paper,\r\n                },\r\n              }}\r\n            />\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    connect(mapStateToProps, mapDispatchToProps)(\r\n      CardRow\r\n    )\r\n  )","\r\nconst useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  // const mainSidesPadding = theme.spacing(10)\r\n\r\n  return {\r\n    root: {\r\n      paddingBottom: theme.spacing(1),\r\n    },\r\n    'card-image': {\r\n      zIndex: 1,\r\n      position: 'sticky',\r\n      top: theme.spacing(8),\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    tableContainer: {\r\n      maxWidth: '90vw',\r\n      // overflow: 'visible',\r\n    },\r\n    tableFooter: {\r\n      borderTop: `1px solid ${theme.palette.divider}`,\r\n    }\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport { Grid, Tooltip, Checkbox, IconButton, Paper, Hidden, Table, TableContainer, TableRow, TableHead, TableBody, TableFooter, TableCell, TableSortLabel, TablePagination } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport {\r\n  ChevronRight as ChevronRightIcon,\r\n  ChevronLeft as ChevronLeftIcon,\r\n  FirstPage as FirstPageIcon,\r\n  LastPage as LastPageIcon,\r\n} from '@material-ui/icons'\r\nimport { connect } from 'react-redux'\r\nimport _ from 'lodash'\r\n\r\nimport { setSelectedCardIds, setPageNumber, setPerPage } from '@/Logic/redux'\r\nimport { CardImage } from '@/Components'\r\nimport CardRow from './CardRow'\r\nimport useStyles from './styles'\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  columns: state.actions.app.collection.tableView.columns,\r\n  cardsSelectableEnabled: state.actions.app.collection.cardsSelectableEnabled,\r\n  selectedCardIds: state.actions.app.collection.selectedCardIds,\r\n  pageNumber: state.actions.app.collection.pageNumber,\r\n  perPage: state.actions.app.collection.perPage,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    setSelectedCardIds: (selectedCardIds) => dispatch(setSelectedCardIds({ selectedCardIds })),\r\n    setPageNumber: (pageNumber) => dispatch(setPageNumber({ pageNumber })),\r\n    setPerPage: (perPage) => dispatch(setPerPage({ perPage })),\r\n  }\r\n})\r\n\r\n\r\nconst CardTableView = ({\r\n  /** VARS **/\r\n  data,\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n    dispatch,\r\n    columns,\r\n    pageNumber,\r\n    perPage,\r\n    cardsSelectableEnabled,\r\n    selectedCardIds,\r\n  } = props\r\n  const [currentHoveringCard, setCurrentHoveringCard] = useState()\r\n  const [sortBy, setSortByCol] = useState()\r\n  const [sortOrder, setSortOrder] = useState('desc')\r\n  const [sortedData, setSortedData] = useState(data)\r\n  const [paginatedData, setPaginatedData] = useState(data)\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    setPaginatedData(() =>\r\n      perPage === -1\r\n        ? sortedData // show all\r\n        : sortedData.slice(\r\n          pageNumber * perPage,\r\n          pageNumber * perPage + perPage\r\n        )\r\n    )\r\n  }, [sortedData, pageNumber, perPage])\r\n\r\n  useEffect(() => {\r\n    let _sortBy //= sortBy === 'mana_cost' ? 'cmc' : sortBy\r\n    switch (sortBy) {\r\n      case 'mana_cost':\r\n      case 'mana_value':\r\n        _sortBy = ['cmc']\r\n        break\r\n\r\n      case 'total_price':\r\n      case 'prices':\r\n      case 'price':\r\n        _sortBy = ['price']\r\n        break\r\n\r\n      case 'type':\r\n      case 'type_line':\r\n        _sortBy = [(card) => card.type_line.replace('Legendary ', '')]\r\n        break\r\n\r\n      case 'set':\r\n      case 'rarity':\r\n        _sortBy = [\r\n          (card) => {\r\n            return card.set_data.parent_set_code ?? card.set\r\n          },\r\n          (card) => {\r\n            switch (card.rarity) {\r\n              default:\r\n                return 4\r\n              case 'common':\r\n                return 3\r\n              case 'uncommon':\r\n                return 2\r\n              case 'rare':\r\n                return 1\r\n              case 'mythic':\r\n                return 0\r\n            }\r\n          }\r\n        ]\r\n        break\r\n\r\n      default:\r\n        _sortBy = [sortBy]\r\n        break\r\n\r\n      /* if `sortBy` is not specified, then sort by `date_created` */\r\n      case null:\r\n      case undefined:\r\n      case '':\r\n        _sortBy = [(card) => new Date(card.date_created)]\r\n        break\r\n    }\r\n\r\n    setSortedData(\r\n      _.orderBy(data, [..._sortBy, 'name', 'collector_number'], sortOrder)\r\n    )\r\n    dispatch.setPageNumber(0)\r\n  }, [data, sortOrder, sortBy])\r\n\r\n  useEffect(() => {\r\n    setCurrentHoveringCard(null)\r\n  }, [sortedData, paginatedData])\r\n\r\n  useEffect(() => {\r\n    dispatch.setSelectedCardIds([])\r\n  }, [data])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleRowHover = (card, i) => {\r\n    setCurrentHoveringCard(card)\r\n  }\r\n\r\n  const handleHeaderClick = (event, colName) => {\r\n    if (colName === sortBy) {\r\n      switch (sortOrder) {\r\n        case 'desc': //second click\r\n          setSortOrder('asc')\r\n          break\r\n\r\n        case 'asc': //third click, reset sorting\r\n        default:\r\n          setSortByCol('')\r\n          setSortOrder('desc')\r\n          break\r\n      }\r\n    }\r\n    else {\r\n      // first click\r\n      setSortByCol(colName)\r\n      setSortOrder('desc')\r\n    }\r\n  }\r\n\r\n  const handleSelectAllChange = (e) => {\r\n    e.target.checked\r\n      ? dispatch.setSelectedCardIds(data.map(card => card._id))\r\n      : dispatch.setSelectedCardIds([])\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <Grid item container spacing={1} xs={11} className={classes.root}>\r\n      <Grid item container wrap='nowrap' justifyContent='center'>\r\n\r\n        {/** CARD PREVIEW **/}\r\n        <Hidden mdDown>\r\n          <Grid item>\r\n            <div className={classes['card-image']}>\r\n              <CardImage tiltEnabled transform3dEnabled\r\n                card={currentHoveringCard}\r\n              />\r\n            </div>\r\n          </Grid>\r\n        </Hidden>\r\n\r\n        {/** TABLE VIEW **/}\r\n        <Grid item md>\r\n          <TableContainer component={Paper} className={classes.tableContainer} elevation={5}>\r\n            <Table size=\"small\">\r\n              <TableHead className={classes.tableHead}>\r\n                <TableRow>\r\n                  {\r\n                    Object\r\n                      .entries(columns)\r\n                      .map(([columnName, columnDisplayName]) => (\r\n                        <TableCell\r\n                          style={{ paddingLeft: '16px' }}\r\n                          key={columnName}\r\n                          align=\"center\"\r\n                          sortDirection={sortBy === columnName ? sortOrder : false}\r\n                        >\r\n                          <TableSortLabel\r\n                            style={{ whiteSpace: 'nowrap' }}\r\n                            active={sortBy === columnName}\r\n                            direction={sortBy === columnName ? sortOrder : 'asc'}\r\n                            onClick={e => handleHeaderClick(e, columnName)}\r\n                          >\r\n                            {columnDisplayName}\r\n                          </TableSortLabel>\r\n                        </TableCell>\r\n                      ))\r\n                  }\r\n\r\n                  {/** Checkbox / DropdownIcon **/}\r\n                  {\r\n                    cardsSelectableEnabled\r\n                      ?\r\n                      // <TableCell className={classes.iconCell} />\r\n                      <TableCell onClick={e => e.stopPropagation()} className={classes.checkbox}>\r\n                        <Tooltip arrow placement='top' title={selectedCardIds.length >= data.length ? 'Clear Selection' : 'Select All'}>\r\n                          <Checkbox\r\n                            size='small'\r\n                            checked={selectedCardIds.length >= data.length}\r\n                            indeterminate={selectedCardIds.length > 0 && selectedCardIds.length < data.length}\r\n                            onChange={handleSelectAllChange}\r\n                          />\r\n                        </Tooltip>\r\n                      </TableCell>\r\n                      :\r\n                      <Hidden smDown>\r\n                        <TableCell className={classes.iconCell} />\r\n                      </Hidden>\r\n                  }\r\n\r\n                </TableRow>\r\n              </TableHead>\r\n\r\n              <TableBody>\r\n                {paginatedData instanceof Array && paginatedData.map(card => (\r\n                  <CardRow\r\n                    onMouseEnter={e => handleRowHover(card)}\r\n                    key={card._id}\r\n                    columns={columns}\r\n                    card={card}\r\n                  />\r\n                ))}\r\n              </TableBody>\r\n\r\n              <TableFooter className={classes.tableFooter}>\r\n                <TableRow>\r\n                  <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 50, 100, { label: 'All', value: -1 }]}\r\n                    labelRowsPerPage='Cards per page:'\r\n                    colSpan={9}\r\n                    count={data.length}\r\n                    rowsPerPage={perPage}\r\n                    page={pageNumber}\r\n                    // labelDisplayedRows={({ from, to, count }) => `${from}-${to === -1 ? count : to} of ${count}`}\r\n                    labelDisplayedRows={({ from, to, count }) => `${from}-${to !== -1 ? to : count} of ${count !== -1 ? count : `more than ${to}`}`}\r\n                    onPageChange={(e, v) => dispatch.setPageNumber(v)}\r\n                    onRowsPerPageChange={(e) => dispatch.setPerPage(parseInt(e.target.value))}\r\n                    SelectProps={{\r\n                      native: true,\r\n                    }}\r\n                    ActionsComponent={({ count, page, rowsPerPage, onPageChange }) => (\r\n                      <>\r\n                        <IconButton\r\n                          size='small'\r\n                          onClick={e => onPageChange(e, 0)}\r\n                          disabled={page === 0}\r\n                          aria-label=\"first page\"\r\n                        >\r\n                          <FirstPageIcon />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          size='small'\r\n                          onClick={e => onPageChange(e, page - 1)}\r\n                          disabled={page === 0}\r\n                          aria-label=\"previous page\"\r\n                        >\r\n                          <ChevronLeftIcon />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          size='small'\r\n                          onClick={e => onPageChange(e, page + 1)}\r\n                          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                          aria-label=\"next page\"\r\n                        >\r\n                          <ChevronRightIcon />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          size='small'\r\n                          onClick={e => onPageChange(e, Math.max(0, Math.ceil(count / rowsPerPage) - 1))}\r\n                          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                          aria-label=\"last page\"\r\n                        >\r\n                          <LastPageIcon />\r\n                        </IconButton>\r\n                      </>\r\n                    )}\r\n                  />\r\n                </TableRow>\r\n              </TableFooter>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid >\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    connect(mapStateToProps, mapDispatchToProps)(\r\n      CardTableView\r\n    )\r\n  )","\r\nconst useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  // const mainSidesPadding = theme.spacing(10)\r\n\r\n  return {\r\n    root: {},\r\n    topArrow: {\r\n      borderTopColor: theme.palette.background.default\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { Fragment, useEffect, useState, useRef, createRef } from 'react'\r\nimport { Portal, MenuItem, ListItemText, Paper, Grid, Collapse } from '@material-ui/core'\r\nimport { withStyles, useTheme } from '@material-ui/styles'\r\nimport { connect } from 'react-redux'\r\n// import scrollIntoView from 'scroll-into-view-if-needed'\r\nimport useSize from '@react-hook/size'\r\nimport _ from 'lodash'\r\n\r\nimport {\r\n  addSelectedCardIds, removeSelectedCardIds, setViewIndex_CardInfo,\r\n  toggleTiltEnabled_GridView, toggleTransform3dEnabled_GridView\r\n} from '@/Logic/redux'\r\nimport { CardImage } from '@/Components'\r\nimport { CardInfo, ContextMenu } from '@/Components/Collection/Views'\r\nimport useStyles from './styles'\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  selectedCardIds: state.actions.app.collection.selectedCardIds,\r\n  tiltEnabled: state.actions.app.collection.gridView.tiltEnabled,\r\n  transform3dEnabled: state.actions.app.collection.gridView.transform3dEnabled,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    toggleTiltEnabled: () => dispatch(toggleTiltEnabled_GridView()),\r\n    toggleTransform3dEnabled: () => dispatch(toggleTransform3dEnabled_GridView()),\r\n    addSelectedCardId: (id) => dispatch(addSelectedCardIds({ id })),\r\n    removeSelectedCardId: (id) => dispatch(removeSelectedCardIds({ id })),\r\n    setViewIndex: (index) => dispatch(setViewIndex_CardInfo({ index })),\r\n  }\r\n})\r\n\r\n\r\nconst CardGridView = ({\r\n  /** VARS **/\r\n  data,\r\n  menuItemRef,\r\n  cardWidth = 209,\r\n  ...props\r\n}) => {\r\n  const {\r\n    // classes,\r\n    dispatch,\r\n    tiltEnabled,\r\n    transform3dEnabled,\r\n    selectedCardIds,\r\n  } = props\r\n  const theme = useTheme()\r\n\r\n  const containerRef = useRef()\r\n  const [refs, setRefs] = useState([])\r\n  const [containerWidth,] = useSize(containerRef)\r\n  const [cardsPerRow, setCardsPerRow] = useState()\r\n\r\n  const [contextMenuState, setContextMenuState] = useState({ clearSelectedCardsOnExit: false })\r\n  const [selectedCard, setSelectedCard] = useState({})\r\n  const [sortedData, setSortedData] = useState([])\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    setSortedData(\r\n      _.sortBy(data, card => card.type_line.replace('Legendary', ''))\r\n    )\r\n\r\n    setSelectedCard(selectedCard => {\r\n      const newCard = data.find(card => card._id === selectedCard?.data?._id)\r\n\r\n      return newCard\r\n        ? {\r\n          ...selectedCard,\r\n          data: newCard,\r\n        }\r\n        : {\r\n          data: undefined,\r\n          targetCollapse: undefined,\r\n          box: undefined,\r\n        }\r\n    })\r\n  }, [data])\r\n\r\n  useEffect(() => {\r\n    let n = Math.floor(containerWidth / (cardWidth + 16))\r\n    n = n > 0 ? n : 1\r\n    setCardsPerRow(n)\r\n\r\n    setRefs(\r\n      _.times(\r\n        Math.floor(data.length / n) + 1,\r\n        () => ({\r\n          collapse: createRef(),\r\n          cardInfo: createRef()\r\n        })\r\n      )\r\n    )\r\n  }, [containerWidth, cardWidth, data])\r\n\r\n  useEffect(() => {\r\n    if (contextMenuState.mouseY && contextMenuState.mouseX) {\r\n      //opening\r\n      if (selectedCardIds.length === 0) {\r\n        dispatch.addSelectedCardId(contextMenuState.card._id)\r\n        setContextMenuState(state => ({\r\n          ...state,\r\n          clearSelectedCardsOnExit: true,\r\n        }))\r\n      }\r\n    }\r\n    else {\r\n      //closing\r\n      if (contextMenuState.clearSelectedCardsOnExit) {\r\n        dispatch.removeSelectedCardId(contextMenuState.card._id)\r\n        setContextMenuState({\r\n          clearSelectedCardsOnExit: false,\r\n        })\r\n      }\r\n    }\r\n  }, [contextMenuState.mouseY, contextMenuState.mouseX])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleCardClick = ({ card, key }) => (e) => {\r\n    const { data: selectedCardData, targetCollapse } = selectedCard\r\n    const targetCollapseIdx = Math.floor(key / cardsPerRow) || 0\r\n\r\n    if (targetCollapse !== undefined && selectedCardData?._id === card._id) {\r\n      // a collapse is open & the same card is clicked ->\r\n      //                                               -> close the collapse\r\n      setSelectedCard({\r\n        ...selectedCard,\r\n        targetCollapse: undefined,\r\n        box: e.target.getBoundingClientRect(),\r\n      })\r\n    }\r\n    else {\r\n      // a new card is clicked, open the collapse\r\n      setSelectedCard({\r\n        data: card,\r\n        targetCollapse: targetCollapseIdx,\r\n        box: e.target.getBoundingClientRect(),\r\n      })\r\n\r\n      setTimeout(() => {\r\n        dispatch.setViewIndex(0)\r\n        refs[targetCollapseIdx]?.cardInfo?.current?.updateHeight()\r\n      }, 10)\r\n    }\r\n  }\r\n\r\n  const handleMiddleMouseClick = (card) => (e) => {\r\n    e.preventDefault()\r\n    if (e.button === 1) // middle mouse click\r\n      selectedCardIds.includes(card._id)\r\n        ? dispatch.removeSelectedCardId(card._id)\r\n        : dispatch.addSelectedCardId(card._id)\r\n  }\r\n\r\n  const handleContextMenu = ({ card, key }) => (e) => {\r\n    e.preventDefault()\r\n    e.persist()\r\n    setContextMenuState(state => ({\r\n      ...state,\r\n      mouseX: e.clientX,\r\n      mouseY: e.clientY,\r\n      card,\r\n      onEditClick: () => handleCardClick({ card, key })(e),\r\n    }))\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <>\r\n      <ContextMenu\r\n        setState={setContextMenuState}\r\n        {...contextMenuState}\r\n      />\r\n\r\n      {\r\n        <Portal container={menuItemRef.current}>\r\n          <MenuItem onClick={dispatch.toggleTiltEnabled}>\r\n            <ListItemText\r\n              primary='Card Tilt'\r\n              secondary={tiltEnabled ? 'Enabled' : 'Disabled'}\r\n            />\r\n          </MenuItem>\r\n          <MenuItem onClick={dispatch.toggleTransform3dEnabled}>\r\n            <ListItemText\r\n              primary='3D Transform'\r\n              secondary={transform3dEnabled ? 'Enabled' : 'Disabled'}\r\n            />\r\n          </MenuItem>\r\n        </Portal>\r\n      }\r\n\r\n      <Grid item container ref={containerRef} xs={12} lg={10} spacing={2} justifyContent='center'>\r\n        {\r\n          sortedData && sortedData.map((card, i) => {\r\n            const targetCollapseIdx = Math.floor(i / cardsPerRow)\r\n\r\n            return (\r\n              <Fragment key={i}>\r\n                {\r\n                  card &&\r\n                  <Grid item xs='auto'>\r\n                    <CardImage packTransformButton showCheckbox\r\n                      transform3dEnabled={transform3dEnabled}\r\n                      tiltEnabled={tiltEnabled}\r\n                      card={card}\r\n                      width={cardWidth}\r\n                      height={cardWidth * 1.4}\r\n                      tiltProps={{\r\n                        tiltMaxAngleX: 12.5,\r\n                        tiltMaxAngleY: 12.5,\r\n                      }}\r\n                      imageProps={{\r\n                        width: cardWidth,\r\n                        height: cardWidth * 1.4,\r\n                      }}\r\n                      rootProps={{\r\n                        className: 'cursor-pointer',\r\n                        onClick: handleCardClick({ card, key: i }),\r\n                        // onClick: (e) => {console.log(e)},\r\n                        onContextMenu: handleContextMenu({ card, key: i }),\r\n                        onMouseDown: handleMiddleMouseClick(card),\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                }\r\n                {\r\n                  (((i + 1) % cardsPerRow === 0) || (i === sortedData.length - 1)) &&\r\n                  <Grid item xs={12}>\r\n                    <Collapse mountOnEnter unmountOnExit\r\n                      ref={refs[targetCollapseIdx]?.collapse}\r\n                      timeout=\"auto\"\r\n                      in={targetCollapseIdx === selectedCard.targetCollapse}\r\n                    // onEntering={() => scrollIntoView(refs[targetCollapseIdx]?.collapse?.current, { scrollMode: 'if-needed', behavior: 'smooth', block: 'start' })}\r\n                    // onEntered={() => scrollIntoView(refs[targetCollapseIdx]?.collapse?.current, { scrollMode: 'if-needed', behavior: 'smooth', block: 'end' })}\r\n                    >\r\n                      {\r\n                        selectedCard?.data &&\r\n                        <CardInfo\r\n                          refs={refs[targetCollapseIdx]?.cardInfo}\r\n                          card={selectedCard.data}\r\n                          rootComponent={Paper}\r\n                          rootProps={{\r\n                            elevation: 1,\r\n                          }}\r\n                          topArrowProps={{\r\n                            style: {\r\n                              borderTopColor: theme.palette.background.default,\r\n                              left: `calc(${selectedCard?.box?.left + (selectedCard?.box?.width * 0.5) - containerRef?.current?.offsetLeft}px - 2.25rem)`,\r\n                            },\r\n                          }}\r\n                        />\r\n                      }\r\n                    </Collapse>\r\n                  </Grid>\r\n                }\r\n              </Fragment>\r\n            )\r\n          })\r\n        }\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    connect(mapStateToProps, mapDispatchToProps)(\r\n      CardGridView\r\n    )\r\n  )","\r\nconst useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  // const mainSidesPadding = theme.spacing(10)\r\n\r\n  return {\r\n    root: {},\r\n    modal: {\r\n      maxWidth: '90vw',\r\n    }\r\n  }\r\n}\r\n\r\nexport default useStyles","import { Fragment, useState } from 'react'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport { Menu, TextField, MenuItem, ListItemIcon, Grid, Button, Modal, Typography, Paper, Fade } from '@material-ui/core'\r\nimport { Autocomplete } from '@material-ui/lab'\r\nimport {\r\n  Edit as EditIcon,\r\n  LocalOffer as TagIcon,\r\n  Delete as DeleteIcon,\r\n} from '@material-ui/icons'\r\nimport { useSnackbar } from 'notistack'\r\nimport { connect } from 'react-redux'\r\nimport _ from 'lodash'\r\nimport clsx from 'clsx'\r\n\r\nimport {\r\n  updateCollection, addSelectedCardIds, setSelectedCardIds,\r\n  setCurrentOpenCardId, setViewIndex_CardInfo, setEditEnabled_CardInfo\r\n} from '@/Logic/redux'\r\nimport { MagicdexApi } from '@/Api'\r\nimport Config from '@/Config'\r\nimport useStyles from './styles'\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  collection: state.actions.activeUser.collection,\r\n  selectedCardIds: state.actions.app.collection.selectedCardIds,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    updateCollection: (cards) => dispatch(updateCollection({ cards })),\r\n    addSelectedCardId: (id) => dispatch(addSelectedCardIds({ id })),\r\n    setSelectedCardIds: (ids) => dispatch(setSelectedCardIds({ selectedCardIds: ids })),\r\n    setCurrentOpenCardId: (id) => dispatch(setCurrentOpenCardId({ id })),\r\n    setViewIndex: (index) => dispatch(setViewIndex_CardInfo({ index })),\r\n    setEditEnabled: (enabled) => dispatch(setEditEnabled_CardInfo({ enabled })),\r\n  }\r\n})\r\n\r\n\r\nconst ContextMenu = ({\r\n  /** VARS **/\r\n  mouseY,\r\n  mouseX,\r\n  setState,\r\n  clearSelectedCards,\r\n  card,\r\n  onEditClick,\r\n  clearSelectedCardsOnExit = false,\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n    dispatch,\r\n    selectedCardIds,\r\n    collection,\r\n    ...rest\r\n  } = props\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  const [modalOpen, setModalOpen] = useState(false)\r\n  const [tagArray, setTagArray] = useState([])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const closeMenu = () => {\r\n    setState(state => ({\r\n      ...state,\r\n      mouseY: null,\r\n      mouseX: null\r\n    }))\r\n    setModalOpen(false)\r\n  }\r\n\r\n  const handleTagChange = (value) => {\r\n    setTagArray(state => (\r\n      _.chain(value)\r\n        .map(v => v.trim())\r\n        .compact()\r\n        .uniqBy(v => v.toLowerCase())\r\n        .value()\r\n    ))\r\n  }\r\n\r\n  const handleKeyDown = (id) => (e) => {\r\n    switch (id) {\r\n      case 'tag':\r\n        if (e.key === 'Enter' && e.target.value === '')\r\n          handleMenuItemClick('tag', true)()\r\n        break\r\n\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  const handleMenuItemClick = (id, confirmAction = false) => (e) => {\r\n    switch (id) {\r\n      case 'edit':\r\n        onEditClick && onEditClick()\r\n        dispatch.setCurrentOpenCardId(selectedCardIds[0])\r\n        setTimeout(() => {\r\n          dispatch.setEditEnabled(true)\r\n          dispatch.setViewIndex(1)\r\n        }, 300)\r\n        closeMenu()\r\n        break\r\n\r\n      case 'delete':\r\n        if (confirmAction) {\r\n          const len = selectedCardIds.length\r\n          if (len > 0) {\r\n            const clonedArr = selectedCardIds.map(_id => ({\r\n              _id,\r\n              amount: 0,\r\n            }))\r\n\r\n            if (Config.MODIFY_DB_ALLOWED)\r\n              MagicdexApi.updateCards(clonedArr)\r\n                .then(res => {\r\n                  dispatch.updateCollection(res)\r\n                  const actions = _.countBy(res, 'action')\r\n                  actions['DELETED'] && enqueueSnackbar(`Deleted ${actions['DELETED']} card entries`, { variant: 'success' })\r\n                })\r\n                .catch(error => {\r\n                  enqueueSnackbar(`Failed to delete ${len} card entries`, { variant: 'error' })\r\n                })\r\n            else {\r\n              dispatch.updateCollection(clonedArr.map(card => ({ action: 'UPDATED', card })))\r\n              enqueueSnackbar(`Deleted ${len} card entries`, { variant: 'success' })\r\n            }\r\n          }\r\n          closeMenu()\r\n        }\r\n        else\r\n          setModalOpen('delete')\r\n        break\r\n\r\n      case 'tag':\r\n        if (confirmAction) {\r\n          const len = selectedCardIds.length\r\n          if (len > 0) {\r\n            const clonedArr = selectedCardIds.map(_id => ({\r\n              _id,\r\n              tag: tagArray,\r\n            }))\r\n\r\n            if (Config.MODIFY_DB_ALLOWED)\r\n              MagicdexApi.updateCards(clonedArr)\r\n                .then(res => {\r\n                  dispatch.updateCollection(res)\r\n                  const actions = _.countBy(res, 'action')\r\n                  actions['DELETED'] && enqueueSnackbar(`Deleted ${actions['DELETED']} card entries`, { variant: 'success' })\r\n                  actions['UPDATED'] && enqueueSnackbar(`Updated ${actions['UPDATED']} card entries`, { variant: 'info' })\r\n                })\r\n                .catch(error => {\r\n                  enqueueSnackbar(`Failed to tag ${len} card entries`, { variant: 'error' })\r\n                })\r\n            else {\r\n              dispatch.updateCollection(clonedArr.map(card => ({ action: 'UPDATED', card })))\r\n              enqueueSnackbar(`Updated ${len} card entries`, { variant: 'success' })\r\n            }\r\n          }\r\n          closeMenu()\r\n        }\r\n        else {\r\n          setTagArray(_.chain(collection)\r\n            .filter(card => selectedCardIds.includes(card._id))\r\n            .flatMap(card => card.tag)\r\n            .uniqBy(v => v.toLowerCase())\r\n            .value()\r\n          )\r\n          setModalOpen('tag')\r\n        }\r\n        break\r\n\r\n      default:\r\n        closeMenu()\r\n        break\r\n    }\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <>\r\n      <Menu keepMounted disableAutoFocusItem\r\n        onContextMenu={e => e.preventDefault()}\r\n        open={Boolean(mouseY && mouseX)}\r\n        onClose={closeMenu}\r\n        anchorReference='anchorPosition'\r\n        anchorPosition={\r\n          mouseY && mouseX\r\n            ? { top: mouseY - 4, left: mouseX - 2 }\r\n            : undefined\r\n        }\r\n        MenuListProps={{\r\n          dense: true,\r\n        }}\r\n        {...rest}\r\n        className={clsx(classes.root, props.className)}\r\n      >\r\n        {\r\n          selectedCardIds.length === 1 &&\r\n          <MenuItem onClick={handleMenuItemClick('edit')}>\r\n            <ListItemIcon style={{ minWidth: 40 }}>\r\n              <EditIcon fontSize='small' />\r\n            </ListItemIcon>\r\n            Edit\r\n          </MenuItem>\r\n        }\r\n        <MenuItem onClick={handleMenuItemClick('tag')}>\r\n          <ListItemIcon style={{ minWidth: 40 }}>\r\n            <TagIcon fontSize='small' />\r\n          </ListItemIcon>\r\n          Assign Tags\r\n        </MenuItem>\r\n        <MenuItem onClick={handleMenuItemClick('delete')}>\r\n          <ListItemIcon style={{ minWidth: 40 }}>\r\n            <DeleteIcon fontSize='small' />\r\n          </ListItemIcon>\r\n          Delete\r\n        </MenuItem>\r\n      </Menu>\r\n\r\n\r\n      {/* \"ARE YOU SURE\" MODAL */}\r\n      <Grid container spacing={5} justifyContent='center' alignItems='center'\r\n        component={Modal} closeAfterTransition\r\n        onClose={closeMenu}\r\n        open={Boolean(modalOpen)}\r\n        BackdropProps={{ timeout: 500 }}\r\n      >\r\n        <Grid item xs={8} sm={6} lg={4} component={Fade} in={Boolean(modalOpen)}>\r\n          <Paper>\r\n            <Grid container justifyContent='center' alignItems='center' spacing={1} className={classes.modal}>\r\n              {\r\n                ((value) => {\r\n                  switch (value) {\r\n                    case 'delete':\r\n                      return <>\r\n                        <Grid item xs={12} align='center'>\r\n                          <Typography noWrap variant='h5' align='left'>\r\n                            Confirm Action\r\n                          </Typography>\r\n                          <Typography noWrap variant='body1' align='left'>\r\n                            {\r\n                              `Are you sure you want to delete the selected ${selectedCardIds.length > 1 ? 'cards' : 'card'}?`\r\n                            }\r\n                          </Typography>\r\n                          <Typography noWrap variant='body2' align='left' color='error'>\r\n                            This action is irreversible.\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item container justifyContent='flex-end' xs={12} spacing={1}>\r\n                          <Grid item>\r\n                            <Button variant='outlined' onClick={closeMenu}>\r\n                              Nop\r\n                            </Button>\r\n                          </Grid>\r\n                          <Grid item>\r\n                            <Button variant='contained' color='secondary' onClick={handleMenuItemClick('delete', true)}>\r\n                              Yep\r\n                            </Button>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </>\r\n\r\n                    case 'tag':\r\n                      return <>\r\n                        <Grid item xs={12} align='left' component={Typography} variant='h5'>\r\n                          Assign Tags\r\n                        </Grid>\r\n                        <Grid item xs={12} align='left' component={Typography} variant='body2'>\r\n                          {`The following tags will be assigned to the selected ${selectedCardIds.length > 1 ? 'cards' : 'card'}:`}\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={10} md={9} lg={7}>\r\n                          <Autocomplete multiple freeSolo\r\n                            label='Tags'\r\n                            variant='outlined'\r\n                            margin='dense'\r\n                            size='small'\r\n                            color='secondary'\r\n                            options={[]}\r\n                            value={tagArray}\r\n                            onChange={(e, newValue) => { handleTagChange(newValue) }}\r\n                            onKeyDown={handleKeyDown('tag')}\r\n                            onInputChange={(e, newInputValue) => {\r\n                              if (newInputValue?.match(/[;,]/g)) {\r\n                                const values = _\r\n                                  .chain(newInputValue)\r\n                                  .split(/[;,]/)\r\n                                  .map(v => v.trim())\r\n                                  .compact()\r\n                                  .uniqBy(v => v.toLowerCase())\r\n                                  .value()\r\n                                if (values.length > 0)\r\n                                  handleTagChange(tagArray.concat(values))\r\n                                else\r\n                                  handleTagChange(tagArray)\r\n                              }\r\n                            }}\r\n                            renderInput={(props) => (\r\n                              <TextField multiline\r\n                                {...props}\r\n                                color='secondary'\r\n                                variant='outlined'\r\n                                label='Tags'\r\n                                helperText={\r\n                                  ['Tags are seperated by ', <code>{'Enter'}</code>, ' or ', <code>{'[;,]'}</code>]\r\n                                    .map((item, i) =>\r\n                                      <Fragment key={i}>{item}</Fragment>\r\n                                    )\r\n                                }\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n\r\n                        <Grid item container justifyContent='flex-end' spacing={1} xs={12}>\r\n                          <Grid item>\r\n                            <Button variant='outlined' onClick={closeMenu}>\r\n                              Cancel\r\n                            </Button>\r\n                          </Grid>\r\n                          <Grid item>\r\n                            <Button variant='contained' color='secondary' onClick={handleMenuItemClick('tag', true)}>\r\n                              Save\r\n                            </Button>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </>\r\n\r\n                    default:\r\n                      return <></>\r\n                  }\r\n                })(modalOpen)\r\n              }\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    connect(mapStateToProps, mapDispatchToProps)(\r\n      ContextMenu\r\n    )\r\n  )","import { FormControlLabel, Grid, Radio, RadioGroup, TextField, Chip } from \"@material-ui/core\"\r\nimport { Autocomplete } from \"@material-ui/lab\"\r\n// import clsx from \"clsx\"\r\n// import _ from 'lodash'\r\n\r\n\r\nconst formatCode = (code) => {\r\n  code = code.toLowerCase()\r\n  if (code.charAt(0) !== \"{\") return code\r\n  return \"\"\r\n}\r\n\r\nconst RangeTextField = ({ name, maxMin, state, stateHandler, clsInput }) => (\r\n  <TextField\r\n    className={clsInput}\r\n    id={maxMin + \"-\" + name}\r\n    label={maxMin}\r\n    type=\"number\"\r\n    placeholder={maxMin}\r\n    size=\"small\"\r\n    value={state}\r\n    pattern=\"\"\r\n    onChange={(e) => stateHandler(e.target.value)}\r\n    onKeyDown={(e) => {\r\n      if (e.key === \"e\" || e.key === \"+\" || e.key === \"-\") e.preventDefault()\r\n    }}\r\n  />\r\n)\r\n\r\n\r\nconst Utils = {\r\n  TextOption: ({ label, value, onChange, ...rest }) => (\r\n    <TextField\r\n      margin='dense'\r\n      size='small'\r\n      variant='outlined'\r\n      // variant='standard'\r\n      color='secondary'\r\n      label={label}\r\n      value={value}\r\n      onChange={onChange}\r\n      {...rest}\r\n    />\r\n  ),\r\n\r\n  RangeOptions: ({ name, stateMin, stateMax, stateHandlerMin, stateHandlerMax, clsInput, clsMinus }) => (\r\n    <Grid container spacing={1}>\r\n      <Grid item>{name + \": \"}</Grid>\r\n      <Grid item>\r\n        <RangeTextField\r\n          name={name}\r\n          maxMin=\"Minimum\"\r\n          state={stateMin}\r\n          stateHandler={stateHandlerMin}\r\n          clsInput={clsInput}\r\n        />\r\n      </Grid>\r\n      <Grid item className={clsMinus}>\r\n        —\r\n      </Grid>\r\n      <Grid item>\r\n        <RangeTextField\r\n          name={name}\r\n          maxMin=\"Maximum\"\r\n          state={stateMax}\r\n          stateHandler={stateHandlerMax}\r\n          clsInput={clsInput}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  ),\r\n\r\n  RadioOptions: ({ name, state, stateHandler }) => (\r\n    <Grid container spacing={2}>\r\n      <Grid item>{name + \": \"}</Grid>\r\n      <Grid item>\r\n        <RadioGroup\r\n          row\r\n          aria-label={name.toLowerCase()}\r\n          name={\"row-radio-buttons-\" + name.toLowerCase()}\r\n          value={state}\r\n          onChange={(e) => stateHandler(e.target.value)}\r\n        >\r\n          <FormControlLabel\r\n            value=\"Both\"\r\n            control={<Radio />}\r\n            label=\"Both\"\r\n          />\r\n          <FormControlLabel value=\"No\" control={<Radio />} label=\"No\" />\r\n          <FormControlLabel value=\"Yes\" control={<Radio />} label=\"Yes\" />\r\n        </RadioGroup>\r\n      </Grid>\r\n    </Grid>\r\n  ),\r\n\r\n  AutocompleteOptions: ({ ...props }) => (\r\n    <Autocomplete multiple disableCloseOnSelect filterSelectedOptions\r\n      style={{\r\n        width: '95%',\r\n        ...props?.style\r\n      }}\r\n      color='secondary'\r\n      ChipProps={{\r\n        variant: \"outlined\",\r\n        size: \"small\",\r\n        ...props?.ChipProps,\r\n      }}\r\n      renderTags={(value, getTagProps) => (\r\n        value.map((option, index) => (\r\n          <Chip\r\n            key={index}\r\n            {...getTagProps({ index })}\r\n            label={\r\n              props?.ChipProps?.label\r\n                ? props.ChipProps.label instanceof Function\r\n                  ? props.ChipProps.label(option)\r\n                  : props.ChipProps.label\r\n                : option\r\n            }\r\n          />\r\n        ))\r\n      )}\r\n      renderInput={params => (\r\n        <TextField\r\n          {...params}\r\n          color='secondary'\r\n          size='small'\r\n          margin='dense'\r\n          variant=\"outlined\"\r\n          label={props?.label}\r\n          {...props?.InputProps}\r\n        />\r\n      )}\r\n      {...props}\r\n    />\r\n  ),\r\n}\r\n\r\nexport {\r\n  Utils as default,\r\n  formatCode,\r\n}\r\n\r\nexport const {\r\n  RadioOptions,\r\n  TextOption,\r\n  RangeOptions,\r\n  AutocompleteOptions,\r\n} = Utils\r\n","\r\nconst useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  // const mainSidesPadding = theme.spacing(10)\r\n\r\n  return {\r\n    icon: {\r\n    },\r\n    popover: {\r\n    },\r\n    paper: {\r\n      minWidth: theme.spacing(20),\r\n      maxWidth: theme.spacing(30),\r\n    },\r\n    // contentShift: {\r\n    //   transition: theme.transitions.create('margin', {\r\n    //     easing: theme.transitions.easing.easeOut,\r\n    //     duration: theme.transitions.duration.enteringScreen,\r\n    //   }),\r\n    //   marginLeft: 0,\r\n    // },\r\n    // listItemText: {\r\n    //   marginRight: theme.spacing(1),\r\n    // },\r\n    // ListItemIcon: {\r\n    //   marginRight: theme.spacing(2.5),\r\n    //   width: 'auto',\r\n    //   minWidth: 'auto',\r\n    // },\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { useState, forwardRef, useImperativeHandle, useRef } from 'react'\r\nimport { ClickAwayListener, IconButton, List, Paper, Popover } from '@material-ui/core'\r\nimport { makeStyles, useTheme } from '@material-ui/styles'\r\nimport FilterListIcon from '@material-ui/icons/FilterList'\r\n// import { connect } from 'react-redux'\r\n\r\n// import { setCurrentTab } from '@/Logic/redux'\r\nimport useStyles from './styles'\r\n\r\n\r\nconst MenuPopover = forwardRef(({\r\n  /** VARS **/\r\n  ...props\r\n}, ref) => {\r\n  const [menuAnchor, setMenuAnchor] = useState(null)\r\n  const menuOpen = Boolean(menuAnchor)\r\n  const filterButtonRef = useRef()\r\n  const classes = makeStyles(useStyles(useTheme()))()\r\n  // const {\r\n  //   icon,\r\n  // } = props\r\n\r\n\r\n  /** EFFECTS **/\r\n  useImperativeHandle(ref, () => ({\r\n    openMenu: () => { handleMenuOpen(filterButtonRef) },\r\n    closeMenu: () => { handleMenuClose(null) },\r\n  }))\r\n\r\n  // useEffect(() => {\r\n  //   //onMount\r\n  //   console.log(props.ref)\r\n  // }, [])\r\n\r\n  /** HANDLERS **/\r\n  const handleIconClick = (e) => {\r\n    handleMenuOpen(e.currentTarget)\r\n    e.stopPropagation()\r\n  }\r\n\r\n  const handleMenuOpen = (menuAnnchor) => {\r\n    setMenuAnchor(menuAnnchor)\r\n  }\r\n\r\n  const handleMenuClose = (e) => {\r\n    setMenuAnchor(null)\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <>\r\n      <IconButton\r\n        color=\"inherit\"\r\n        className={classes.icon}\r\n        ref={filterButtonRef}\r\n        onClick={handleIconClick}\r\n      >\r\n        <FilterListIcon />\r\n      </IconButton>\r\n\r\n      <Popover\r\n        className={classes.popover}\r\n        open={menuOpen}\r\n        anchorEl={menuAnchor}\r\n        onClose={handleMenuClose}\r\n        anchorOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"right\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"left\",\r\n        }}\r\n      >\r\n        <Paper className={classes.paper}>\r\n          <ClickAwayListener onClickAway={handleMenuClose}>\r\n            <List dense disablePadding>\r\n              {props.children}\r\n            </List>\r\n          </ClickAwayListener>\r\n        </Paper>\r\n      </Popover>\r\n    </>\r\n  )\r\n})\r\n\r\n/** EXPORT **/\r\nexport default MenuPopover\r\n","\r\nconst useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  // const mainSidesPadding = theme.spacing(10)\r\n\r\n  return {\r\n    root: {\r\n      // maxWidth: theme.spacing(200),\r\n      // display: 'flex',\r\n      // justifyContent: 'center',\r\n    },\r\n    search: {\r\n      // margin: \"0 auto\",\r\n      // marginBottom: theme.spacing(2),\r\n    },\r\n    minus: {\r\n      // marginLeft: \"10px\",\r\n    },\r\n    rangeInput: {\r\n      // marginTop: \"-10px\",\r\n    },\r\n    autocompleteInput: {\r\n      // maxWidth: \"450px\",\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-lone-blocks */\r\n\r\nimport React, { useEffect, useState, createRef } from \"react\"\r\nimport { Grid, InputAdornment, TextField, ListItem, ListSubheader, Divider } from \"@material-ui/core\"\r\nimport { Autocomplete } from \"@material-ui/lab\"\r\nimport { withStyles } from \"@material-ui/styles\"\r\nimport { connect } from \"react-redux\"\r\nimport Scryfall from \"scryfall-client\"\r\nimport _ from \"lodash\"\r\n\r\nimport { setFilters } from '@/Logic/redux'\r\nimport { TextOption, AutocompleteOptions } from \"./utils\"\r\nimport FilterPopover from \"./FilterPopover\"\r\nimport useStyles from \"./styles\"\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  filters: state.actions.app.collection.filters,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    setFilters: (filters) => dispatch(setFilters(filters)),\r\n  },\r\n})\r\n\r\n\r\nconst FilterProvider = ({\r\n  /** VARS **/\r\n  ...props\r\n}) => {\r\n  const {\r\n    dispatch,\r\n    classes,\r\n    filters,\r\n  } = props\r\n  const filtersMenuRef = createRef()\r\n\r\n  const [setsData, setSetsData] = useState([])\r\n  const [cardName, setCardName] = useState('')\r\n\r\n  const [oracleText, setOracleText] = useState('')\r\n  const [typeLine, setTypeLine] = useState('')\r\n  // const [tags, setTags] = useState('')\r\n  const [tagArray, setTagArray] = useState([])\r\n\r\n  // const [selectedColors, setSelectedColors] = useState([])\r\n  // const [selectedManaCosts, setSelectedManaCosts] = useState([])\r\n  const [selectedSets, setSelectedSets] = useState([])\r\n\r\n  // const [amountMin, setAmountMin] = useState(0)\r\n  // const [amountMax, setAmountMax] = useState(9999)\r\n  // const [priceMin, setPriceMin] = useState(0)\r\n  // const [priceMax, setPriceMax] = useState(9999)\r\n\r\n  // const [foil, setFoil] = useState(\"Both\")\r\n  // const [signed, setSigned] = useState(\"Both\")\r\n  // const [altered, setAltered] = useState(\"Both\")\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    const fetchSets = async () => {\r\n      const allSets = await Scryfall.getSets()\r\n      setSetsData(\r\n        _.chain(allSets)\r\n          // .filter(set =>\r\n          //   set.set_type === 'token'\r\n          // )\r\n          .map(set => ({\r\n            ...set,\r\n            set_type: _.chain(set.set_type).replace(/[_]+/g, ' ').upperFirst().value(),\r\n            released_at: new Date(set.released_at),\r\n          }))\r\n          .sortBy(['set_type', 'released_at'])\r\n          .value()\r\n      )\r\n    }\r\n    fetchSets()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    dispatch.setFilters({\r\n      filters: {\r\n        name: v => v.toLowerCase().includes(cardName.toLowerCase()),\r\n        oracle_text: v => oracleText ? v?.toLowerCase().includes(oracleText) : true,\r\n        type_line: v => v.toLowerCase().includes(typeLine),\r\n        tag: tagArray.length > 0 ? tagArray : true,\r\n        set: selectedSets.length > 0 ? selectedSets : true,\r\n        // colors: selectedColors,\r\n        // mana_cost: selectedManaCosts,\r\n        // amount: (v) => v >= amountMin && v <= amountMax,\r\n        // price: (v, item) => item.amount * item.prices.usd >= priceMin && item.amount * item.prices.usd <= priceMax,\r\n        // foil: (v) => getRadioAsBoolean(v, foil),\r\n        // signed: (v) => getRadioAsBoolean(v, signed),\r\n        // altered: (v) => getRadioAsBoolean(v, altered),\r\n      }\r\n    })\r\n  }, [cardName, oracleText, typeLine, tagArray, selectedSets])\r\n  // }, [cardName, oracleText, type, selectedColors, selectedManaCosts, selectedSets, amountMin, amountMax, priceMin, priceMax, foil, signed, altered])\r\n\r\n  useEffect(() => {\r\n    if (Array.isArray(filters.tag))\r\n      setTagArray(filters.tag)\r\n  }, [filters])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleTagChange = (value) => {\r\n    setTagArray(state => (\r\n      _.chain(value)\r\n        .map(v => v.trim())\r\n        .compact()\r\n        .uniqBy(v => v.toLowerCase())\r\n        .value()\r\n    ))\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <Grid item container className={classes.root}>\r\n      <TextField\r\n        id=\"filled-search\"\r\n        label=\"Search Card Name\"\r\n        size='small'\r\n        type=\"search\"\r\n        color='secondary'\r\n        variant=\"filled\"\r\n        className={classes.search}\r\n        value={cardName}\r\n        onChange={(e) => setCardName(e.target.value)}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <FilterPopover ref={filtersMenuRef}>\r\n                <ListSubheader>\r\n                  Filters\r\n                </ListSubheader>\r\n                <ListItem>\r\n                  <TextOption\r\n                    label=\"Oracle Text\"\r\n                    value={oracleText}\r\n                    onChange={e => setOracleText(e.target.value)}\r\n                  />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <TextOption\r\n                    label=\"Type\"\r\n                    value={typeLine}\r\n                    onChange={e => setTypeLine(e.target.value)}\r\n                  />\r\n                </ListItem>\r\n\r\n                <ListItem style={{ paddingRight: 28 }}>\r\n                  <Autocomplete multiple freeSolo //disableClearable autoSelect\r\n                    limitTags={4}\r\n                    label='Tags'\r\n                    variant='outlined'\r\n                    margin='dense'\r\n                    size='small'\r\n                    color='secondary'\r\n                    options={[]}\r\n                    value={tagArray}\r\n                    onChange={(e, newValue) => { handleTagChange(newValue) }}\r\n                    onInputChange={(e, newInputValue) => {\r\n                      if (newInputValue?.match(/[;,]/g)) {\r\n                        const values = _\r\n                          .chain(newInputValue)\r\n                          .split(/[;,]/)\r\n                          .map(v => v.trim())\r\n                          .compact()\r\n                          .uniqBy(v => v.toLowerCase())\r\n                          .value()\r\n                        if (values.length > 0)\r\n                          handleTagChange(tagArray.concat(values))\r\n                        else\r\n                          handleTagChange(tagArray)\r\n                      }\r\n                    }}\r\n                    renderInput={(props) => (\r\n                      <TextField multiline\r\n                        {...props}\r\n                        color='secondary'\r\n                        variant='outlined'\r\n                        label='Tags'\r\n                        helperText={\r\n                          ['Tags are seperated by ', <code>{'Enter'}</code>, ' or ', <code>{'[;,]'}</code>]\r\n                            .map((item, i) =>\r\n                              <React.Fragment key={i}>{item}</React.Fragment>\r\n                            )\r\n                        }\r\n                      />\r\n                    )}\r\n                  />\r\n                </ListItem>\r\n\r\n                <Divider />\r\n\r\n                <ListItem>\r\n                  <AutocompleteOptions\r\n                    label=\"Sets\"\r\n                    options={setsData}\r\n                    value={selectedSets}\r\n                    onChange={(e, v) => setSelectedSets(v)}\r\n                    className={classes.autocompleteInput}\r\n                    groupBy={option => option.set_type}\r\n                    getOptionLabel={option => option.name}\r\n                    getOptionSelected={(option, value) => (\r\n                      option.code === value.code\r\n                    )}\r\n                    ChipProps={{\r\n                      label: option => option.code,\r\n                    }}\r\n                  />\r\n                </ListItem>\r\n\r\n                {/* getAutocompleteOptions(\r\n                    \"Colors\",\r\n                    getAllColors(),\r\n                    selectedColors,\r\n                    setSelectedColors,\r\n                    classes.autocompleteInput\r\n                  ),\r\n                  getAutocompleteOptions(\r\n                    \"Mana Costs\",\r\n                    symbols,\r\n                    selectedManaCosts,\r\n                    setSelectedManaCosts,\r\n                    classes.autocompleteInput\r\n                  ),\r\n                  getRangeOptions(\r\n                    \"Price\",\r\n                    priceMin,\r\n                    priceMax,\r\n                    setPriceMin,\r\n                    setPriceMax,\r\n                    classes.rangeInput,\r\n                    classes.minus\r\n                  ),\r\n                  getRangeOptions(\r\n                    \"Amount\",\r\n                    amountMin,\r\n                    amountMax,\r\n                    setAmountMin,\r\n                    setAmountMax,\r\n                    classes.rangeInput,\r\n                    classes.minus\r\n                  ),\r\n                  getRadioOptions(\"Foil\", foil, setFoil),\r\n                  getRadioOptions(\"Signed\", signed, setSigned),\r\n                  getRadioOptions(\"Altered\", altered, setAltered), */}\r\n              </FilterPopover>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n    </Grid>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default withStyles(useStyles)(\r\n  connect(mapStateToProps, mapDispatchToProps)(\r\n    FilterProvider\r\n  )\r\n)\r\n","import { Grid, Tooltip, Fab } from '@material-ui/core'\r\nimport {\r\n  Add as AddIcon,\r\n  CloudDownload as CloudDownloadIcon,\r\n} from '@material-ui/icons'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nconst MyFabs = ({\r\n  /** VARS **/\r\n  ...props\r\n}) => {\r\n  const history = useHistory()\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleFabClick = (id) => (e) => {\r\n    switch (id) {\r\n      case 'import':\r\n        history.push('/collection/import')\r\n        break\r\n\r\n      case 'export':\r\n        history.push('/collection/export')\r\n        break\r\n\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <Grid container spacing={1} direction=\"column-reverse\">\r\n      <Grid item>\r\n        <Tooltip arrow\r\n          placement='left'\r\n          title='Import Cards'\r\n          enterDelay={250}\r\n        >\r\n          <Fab\r\n            name='import'\r\n            size='small'\r\n            color='primary'\r\n            onClick={handleFabClick('import')}\r\n          >\r\n            <AddIcon />\r\n          </Fab>\r\n        </Tooltip>\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <Tooltip arrow\r\n          placement='left'\r\n          title='Export Cards'\r\n          enterDelay={250}\r\n        >\r\n          <Fab\r\n            name='export'\r\n            size='small'\r\n            color='primary'\r\n            onClick={handleFabClick('export')}\r\n          >\r\n            <CloudDownloadIcon />\r\n          </Fab>\r\n        </Tooltip>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default MyFabs","const useStyles = (theme) => {\r\n  const topBottomPadding = theme.spacing(8)\r\n\r\n  return {\r\n    root: {\r\n\r\n    },\r\n    modal: {\r\n      maxWidth: '90vw',\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","import { Fragment, useState, useEffect, useRef, useImperativeHandle } from 'react'\r\nimport { Grid, Hidden, Paper, Fade, Modal, Typography, TextField, MenuItem, FormControlLabel, Checkbox, InputAdornment, CircularProgress, Button, Tooltip, Divider } from '@material-ui/core'\r\nimport { Add as AddIcon } from '@material-ui/icons'\r\nimport { Autocomplete } from '@material-ui/lab'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport Scryfall from 'scryfall-client'\r\nimport cloneDeep from 'lodash/cloneDeep'\r\n\r\nimport { getCardPrints } from '@/Api'\r\nimport { CardImage } from '@/Components'\r\nimport { addCardPrice, addLayoutKeywords } from '@/Providers'\r\nimport useStyles from './styles'\r\n\r\n\r\nconst ImportWizard = ({\r\n  /** VARS **/\r\n  refs: ref,\r\n  updateHeight = () => { },\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n  } = props\r\n  const refs = {\r\n    cardName: {\r\n      autocomplete: useRef(),\r\n      input: useRef(),\r\n      listbox: useRef(),\r\n    },\r\n  }\r\n\r\n  const [card, setCard] = useState({})\r\n  const [newCards, setNewCards] = useState([])\r\n\r\n  const [menuHoverItem, setMenuHoverItem] = useState(null)\r\n  const [printsSet, setPrintsSet] = useState([])\r\n  const [printsLang, setPrintsLang] = useState([])\r\n  const [cardNames, setCardNames] = useState([])\r\n  const [listboxOpen, setListboxOpen] = useState(false)\r\n  const [modalOpen, setModalOpen] = useState(false)\r\n\r\n\r\n  /** METHODS **/\r\n  useImperativeHandle(ref, () => ({\r\n    handleSubmit,\r\n    reset: handleReset,\r\n    focus: handleFocus,\r\n  }))\r\n\r\n\r\n  /** FUNCTIONS **/\r\n  const resetCard = () => {\r\n    setPrintsSet([])\r\n    setPrintsLang([])\r\n    setCardNames([])\r\n    setCard({})\r\n\r\n    onMenuHover(null)\r\n    // dispatch.setEditEnabled(false)\r\n  }\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    updateHeight() // update height on each render\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (!card.name) {\r\n      resetCard()\r\n      return\r\n    }\r\n\r\n    Scryfall.getCardNamed(card.name)\r\n      .then(cardData => {\r\n        handleCardInfoChange({\r\n          ...cardData,\r\n          amount: card.amount || 1,\r\n          condition: card.condition || 'NM',\r\n          foil: card.foil || false,\r\n          signed: card.signed || false,\r\n          altered: card.altered || false,\r\n          misprint: card.misprint || false,\r\n        })\r\n\r\n        setPrintsSet([])\r\n        setPrintsLang([])\r\n\r\n        Promise\r\n          .all([\r\n            getCardPrints(cardData, 'set'),\r\n            getCardPrints(cardData, 'lang'),\r\n          ])\r\n          .then(([set, lang]) => {\r\n            setPrintsSet(set)\r\n            setPrintsLang(lang)\r\n          })\r\n      })\r\n  }, [card.name])\r\n\r\n  useEffect(() => {\r\n    if (card.set) {\r\n      setPrintsLang([])\r\n      getCardPrints(card, 'lang')\r\n        .then(lang => {\r\n          let data = lang[0]\r\n          delete data.foil\r\n          handleCardInfoChange(data)\r\n          setPrintsLang(lang)\r\n        })\r\n    }\r\n  }, [card.set])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleSubmit = (e) => {\r\n    return new Promise((resolve, reject) => {\r\n      const cardName = refs.cardName.input.current?.value.trim() || ''\r\n\r\n      if (cardName === '' && newCards.length > 0) {\r\n        setModalOpen({\r\n          source: 'submit',\r\n          reject,\r\n          resolve: () => {\r\n            resolve(newCards)\r\n            closeModal()\r\n          }\r\n        })\r\n      }\r\n      else {\r\n        if (cardName === card.name) {\r\n          handleAddToNewCards()\r\n        }\r\n        else if (cardName && cardNames.length > 0 && cardNames[0].toLowerCase().startsWith(cardName.toLowerCase())) {\r\n          handleCardInfoChange({ name: cardNames[0] })\r\n          setListboxOpen(false)\r\n        }\r\n\r\n        reject()\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleFocus = () => {\r\n    refs.cardName.input.current?.focus()\r\n  }\r\n\r\n  const handleReset = () => {\r\n    setNewCards([])\r\n    resetCard()\r\n  }\r\n\r\n  const handleAddToNewCards = () => {\r\n    const cardName = refs.cardName.input.current?.value.trim() || ''\r\n\r\n    if (cardName && cardName === card.name && card.set && card.lang) {\r\n      setNewCards(cards => [...cards, cloneDeep(card)])\r\n      resetCard()\r\n    }\r\n  }\r\n\r\n  const closeModal = () => {\r\n    if (modalOpen.hasOwnProperty('reject'))\r\n      modalOpen.reject()\r\n    setModalOpen(false)\r\n  }\r\n\r\n  const onMenuHover = (hoverItem) => {\r\n    if (hoverItem) {\r\n      // hoverItem.foil = card.foil\r\n      hoverItem = addCardPrice(hoverItem)\r\n      hoverItem = addLayoutKeywords(hoverItem)\r\n      setMenuHoverItem(hoverItem)\r\n    }\r\n    else\r\n      setMenuHoverItem(null)\r\n  }\r\n\r\n  const handleCardInfoChange = ({ ...data }) => {\r\n    setMenuHoverItem(null)\r\n    setCard(card => {\r\n      card = {\r\n        ...card,\r\n        ...data,\r\n      }\r\n\r\n      card = addCardPrice(card)\r\n      card = addLayoutKeywords(card)\r\n      return card\r\n    })\r\n  }\r\n\r\n  const handleCardNameChange = async (cardName) => {\r\n    try {\r\n      if (cardName)\r\n        setCardNames(\r\n          await Scryfall.autocomplete(cardName)\r\n        )\r\n      else\r\n        throw Error()\r\n    }\r\n    catch (err) {\r\n      setCardNames([])\r\n    }\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <>\r\n      <Grid item container justifyContent='center' alignItems='flex-start' spacing={2} xs={12} className={classes.root}>\r\n        <Grid item container justifyContent='center' alignItems='flex-start' spacing={5} xs={12} lg={9}>\r\n          <Hidden smDown>\r\n            <Grid item>\r\n              <CardImage tiltEnabled transform3dEnabled\r\n                showPrice={Boolean(card.prices)}\r\n                card={menuHoverItem || card}\r\n              />\r\n            </Grid>\r\n          </Hidden>\r\n          <Hidden mdUp>\r\n            <Grid item style={{ marginBottom: 16 }}>\r\n              <CardImage showPrice tiltEnabled transform3dEnabled\r\n                card={menuHoverItem || card}\r\n              />\r\n            </Grid>\r\n          </Hidden>\r\n\r\n          <Grid item container xs>\r\n            <Grid item container justifyContent='center' alignItems='center' xs={12} wrap='nowrap'>\r\n              <Grid item xs>\r\n                <Autocomplete clearOnEscape\r\n                  ref={refs.cardName.autocomplete}\r\n                  handleHomeEndKeys={false}\r\n                  open={listboxOpen}\r\n                  onOpen={() => setListboxOpen(true)}\r\n                  onClose={() => setListboxOpen(false)}\r\n                  label='Card Name'\r\n                  variant='outlined'\r\n                  margin='dense'\r\n                  size='small'\r\n                  color='secondary'\r\n                  options={cardNames}\r\n                  value={card?.name || ''}\r\n                  onChange={(e, v) => { handleCardInfoChange({ name: v }) }}\r\n                  onInputChange={(e, v) => { handleCardNameChange(v) }}\r\n\r\n                  renderInput={(props) => (\r\n                    <TextField\r\n                      {...props}\r\n                      color='secondary'\r\n                      variant='outlined'\r\n                      label='Card Name'\r\n                      style={{ marginLeft: 0 }}\r\n                      inputRef={refs.cardName.input}\r\n                      InputProps={{\r\n                        ...props.InputProps,\r\n                        endAdornment: (\r\n                          <Fragment>\r\n                            {cardNames === null && <CircularProgress size={20} />}\r\n                            {props.InputProps.endAdornment}\r\n                          </Fragment>\r\n                        ),\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n              <Grid item style={{ margin: '0px 8px' }}>\r\n                <Tooltip arrow\r\n                  disableFocusListener={!card?.name}\r\n                  disableHoverListener={!card?.name}\r\n                  disableTouchListener={!card?.name}\r\n                  placement='top'\r\n                  title='Add card to import list'\r\n                >\r\n                  <span>\r\n                    <Button\r\n                      disabled={!card?.name}\r\n                      variant='contained'\r\n                      color='secondary'\r\n                      onClick={handleAddToNewCards}\r\n                      style={{ minWidth: 0, width: '3em' }}\r\n                    >\r\n                      <AddIcon />\r\n                    </Button>\r\n                  </span>\r\n                </Tooltip>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid item container direction='column' justifyContent='center' alignItems='flex-start' style={{ maxWidth: 'min-content' }}>\r\n              <Grid item>\r\n                <TextField\r\n                  disabled={!card?.name}\r\n                  size='small'\r\n                  variant='outlined'\r\n                  type='number'\r\n                  label='Amount'\r\n                  color='secondary'\r\n                  value={card?.amount || ''}\r\n                  inputProps={{\r\n                    inputMode: 'numeric',\r\n                    min: 1,\r\n                  }}\r\n                  onChange={e => handleCardInfoChange({ amount: e.target.value })}\r\n                  style={{ marginLeft: 0 }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item style={{ width: '9em', paddingTop: 8 }}>\r\n                <TextField select\r\n                  disabled={!card?.name}\r\n                  color='secondary'\r\n                  variant='outlined'\r\n                  margin='dense'\r\n                  size='small'\r\n                  align='left'\r\n                  label='Condition'\r\n                  value={card?.condition || ''}\r\n                  onChange={e => handleCardInfoChange({ condition: e.target.value })}\r\n                  style={{ marginLeft: 0 }}\r\n                >\r\n                  {\r\n                    [['NM', 'NM'], ['LP', 'LP'], ['MP', 'MP'], ['HP', 'HP'], ['DAMAGED', 'Damaged']]\r\n                      .map(cond =>\r\n                        <MenuItem key={cond[0]} value={cond[0]}>{cond[1]}</MenuItem>)\r\n                  }\r\n                </TextField>\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  disabled={!card?.name}\r\n                  label='Foil'\r\n                  control={\r\n                    <Checkbox\r\n                      checked={Boolean(card?.foil)}\r\n                      onChange={e => handleCardInfoChange({ foil: e.target.checked })}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  disabled={!card?.name}\r\n                  label='Signed'\r\n                  control={\r\n                    <Checkbox\r\n                      checked={Boolean(card?.signed)}\r\n                      onChange={e => handleCardInfoChange({ signed: e.target.checked })}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  disabled={!card?.name}\r\n                  label='Altered'\r\n                  control={\r\n                    <Checkbox\r\n                      checked={Boolean(card?.altered)}\r\n                      onChange={e => handleCardInfoChange({ altered: e.target.checked })}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  disabled={!card?.name}\r\n                  label='Misprint'\r\n                  control={\r\n                    <Checkbox\r\n                      checked={Boolean(card?.misprint)}\r\n                      onChange={e => handleCardInfoChange({ misprint: e.target.checked })}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid item container direction='column' spacing={1} xs={12} sm={10} md>\r\n              <Grid item container wrap='nowrap' spacing={1}>\r\n                <Grid item xs style={{ width: '1px' }}>\r\n                  <TextField select\r\n                    color='secondary'\r\n                    variant='outlined'\r\n                    margin='dense'\r\n                    size='small'\r\n                    align='left'\r\n                    disabled={!card.name || printsSet?.length <= 1}\r\n                    label='Set'\r\n                    value={((!card.name && []) || printsSet || []).length === 0 ? '' : card.id}\r\n                    onChange={e => {\r\n                      const cardData = printsSet.find(item => item.id === e.target.value)\r\n                      delete cardData.foil\r\n                      handleCardInfoChange(cardData)\r\n                    }}\r\n                    SelectProps={{\r\n                      onClose: e => onMenuHover(card)\r\n                    }}\r\n                    InputProps={card?.name && printsSet?.length === 0\r\n                      ? {\r\n                        startAdornment: (\r\n                          <InputAdornment position='start'>\r\n                            <CircularProgress size={20} />\r\n                          </InputAdornment>\r\n                        )\r\n                      }\r\n                      : {}\r\n                    }\r\n                  >\r\n                    {\r\n                      (printsSet || [])\r\n                        .map((item) =>\r\n                          <MenuItem\r\n                            key={item.id}\r\n                            value={item.id}\r\n                            onMouseEnter={e => onMenuHover({ ...item, foil: card?.foil })}\r\n                            onMouseLeave={e => onMenuHover(null)}\r\n                          >\r\n                            {`${item.set_name} [#${item.collector_number}]`}\r\n                          </MenuItem>\r\n                        )\r\n                    }\r\n                  </TextField>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <TextField select\r\n                    color='secondary'\r\n                    variant='outlined'\r\n                    margin='dense'\r\n                    size='small'\r\n                    align='left'\r\n                    label={card?.name ? 'Language' : 'Lang'}\r\n                    disabled={!card.name || printsLang?.length <= 1}\r\n                    value={((!card.name && []) || printsLang || []).length === 0 ? '' : card.id}\r\n                    style={{ width: '6em' }}\r\n                    onChange={e => {\r\n                      const cardData = printsLang.find(item => item.id === e.target.value)\r\n                      delete cardData.foil\r\n                      handleCardInfoChange(cardData)\r\n                    }}\r\n                    SelectProps={{\r\n                      onClose: e => onMenuHover(card)\r\n                    }}\r\n                    InputProps={card?.name && printsLang?.length === 0\r\n                      ? {\r\n                        startAdornment: (\r\n                          <InputAdornment position='start'>\r\n                            <CircularProgress size={20} />\r\n                          </InputAdornment>\r\n                        )\r\n                      }\r\n                      : {}\r\n                    }\r\n                  >\r\n                    {\r\n                      (printsLang || [])\r\n                        .map(item =>\r\n                          <MenuItem\r\n                            key={item.id}\r\n                            value={item.id}\r\n                            onMouseEnter={e => onMenuHover({ ...item, foil: card?.foil })}\r\n                            onMouseLeave={e => onMenuHover(null)}\r\n                          >\r\n                            {item.lang}\r\n                          </MenuItem>\r\n                        )\r\n                    }\r\n                  </TextField>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item style={{ marginRight: 11 }}>\r\n                <Autocomplete multiple freeSolo disableClearable //autoSelect\r\n                  disabled={!card?.name}\r\n                  limitTags={4}\r\n                  label='Tags'\r\n                  variant='outlined'\r\n                  margin='dense'\r\n                  size='small'\r\n                  color='secondary'\r\n                  options={[]}\r\n                  value={card?.tag || []}\r\n                  onChange={(e, newValue) => { handleCardInfoChange({ tag: newValue }) }}\r\n                  onInputChange={(e, newInputValue) => {\r\n                    if (newInputValue?.match(/[;,]/g)) {\r\n                      const values = lodash\r\n                        .chain(newInputValue)\r\n                        .split(/[;,]/)\r\n                        .map(v => v.trim())\r\n                        .compact()\r\n                        .uniqBy(v => v.toLowerCase())\r\n                        .value()\r\n                      if (values.length > 0)\r\n                        handleCardInfoChange({ tag: card?.tag.concat(values) })\r\n                      else\r\n                        handleCardInfoChange({ tag: card?.tag })\r\n                    }\r\n                  }}\r\n                  renderInput={(props) => (\r\n                    <TextField multiline\r\n                      {...props}\r\n                      color='secondary'\r\n                      variant='outlined'\r\n                      label='Tags'\r\n                      helperText={\r\n                        ['Tags are seperated by ', <code>{'Enter'}</code>, ' or ', <code>{'[;,]'}</code>]\r\n                          .map((item, i) =>\r\n                            <Fragment key={i}>{item}</Fragment>\r\n                          )\r\n                      }\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Divider />\r\n        </Grid>\r\n\r\n        <Grid item container direction='row' justifyContent='flex-start' alignItems='center' xs={12} spacing={1}>\r\n          <Grid item xs={12} align='left' component={Typography}>\r\n            {\r\n              newCards.length === 0\r\n                ? <>\r\n                  <Typography gutterBottom variant='h6'>\r\n                    No new cards to add.\r\n                  </Typography>\r\n                  <Typography color='textSecondary' variant='body1'>\r\n                    Start adding cards by entering a card name above and filling the appropriate fields.<br />\r\n                    You may use the keyboard to navigate the fields and to select options.<br />\r\n                    Press enter while the search bar is focused to add the current card to the list. If no text is present in the search bar, pressing enter will submit the form instead.\r\n                  </Typography>\r\n                </>\r\n                : <Typography gutterBottom variant='h6'>\r\n                  {\r\n                    newCards.length === 1\r\n                      ? `${newCards.length} card entry:`\r\n                      : `${newCards.length} card entires:`\r\n                  }\r\n                </Typography>\r\n            }\r\n          </Grid>\r\n          <Grid item component='ul' style={{ textAlign: 'left' }}>\r\n            {\r\n              newCards.map((card, i) => (\r\n                <Typography component='li' variant='body1' key={i}>\r\n                  {[\r\n                    `x${card.amount}`,\r\n                    card.name,\r\n                    `[${card.set.toUpperCase()}]`,\r\n                    `[#${card.collector_number}]`,\r\n                    `[@${card.lang}]`,\r\n                    card.foil ? `[F]` : '',\r\n                  ].join(' ')}\r\n                </Typography>\r\n              ))\r\n            }\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n\r\n      {/* \"ARE YOU SURE\" MODAL */}\r\n      <Grid container spacing={5} justifyContent='center' alignItems='center'\r\n        component={Modal} closeAfterTransition\r\n        onClose={closeModal}\r\n        open={Boolean(modalOpen)}\r\n        BackdropProps={{ timeout: 500 }}\r\n      >\r\n        <Grid item xs={8} sm={6} lg={4}\r\n          component={Fade} in={Boolean(modalOpen)}\r\n        >\r\n          <Paper>\r\n            <Grid container justifyContent='center' alignItems='center' spacing={1} className={classes.modal}>\r\n              {\r\n                (() => {\r\n                  switch (modalOpen.source) {\r\n                    case 'delete':\r\n                      return <>\r\n                        <Grid item xs={12} align='center'>\r\n                          <Typography noWrap variant='h5' align='left'>\r\n                            Confirm Action\r\n                          </Typography>\r\n                          <Typography noWrap variant='body1' align='left'>\r\n                            Are you sure you want to delete the selected card?\r\n                          </Typography>\r\n                          <Typography noWrap variant='body2' align='left' color='error'>\r\n                            This action is irreversible.\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item container justifyContent='flex-end' xs={12} spacing={1}>\r\n                          <Grid item>\r\n                            <Button variant='outlined' onClick={closeModal}> {/* close modal & reject promise */}\r\n                              Nop\r\n                            </Button>\r\n                          </Grid>\r\n                          <Grid item>\r\n                            <Button variant='contained' color='secondary'>\r\n                              {/* TODO: handle card delete */}\r\n                              Yep\r\n                            </Button>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </>\r\n\r\n                    case 'submit':\r\n                      return <>\r\n                        <Grid item xs={12} align='center'>\r\n                          <Typography noWrap variant='h5' align='left'>\r\n                            Confirm Action\r\n                          </Typography>\r\n                          <Typography noWrap variant='body1' align='left'>\r\n                            Update {newCards.length} card {newCards.length > 1 ? 'entries' : 'entry'}?\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item container justifyContent='flex-end' xs={12} spacing={1}>\r\n                          <Grid item>\r\n                            <Button variant='outlined' onClick={closeModal}> {/* close modal & reject promise */}\r\n                              Nop\r\n                            </Button>\r\n                          </Grid>\r\n                          <Grid item>\r\n                            <Button variant='contained' color='secondary' onClick={modalOpen.resolve}>\r\n                              Yep\r\n                            </Button>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </>\r\n\r\n                    default:\r\n                      return <></>\r\n                  }\r\n                })()\r\n              }\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    ImportWizard\r\n  )","import { useState, useEffect, useRef, useImperativeHandle } from 'react'\r\nimport { Grid, TextField, Typography } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport compact from 'lodash/compact'\r\nimport upperFirst from 'lodash/upperFirst'\r\nimport Scryfall from 'scryfall-client'\r\n\r\nimport { getCardPrints } from '@/Api'\r\nimport useStyles from './styles'\r\n\r\n\r\nconst BulkImport = ({\r\n  /** VARS **/\r\n  refs: ref,\r\n  updateHeight,\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n  } = props\r\n  const inputRef = useRef()\r\n\r\n  const [cardListText, setCardListText] = useState('')\r\n  const [errorMessages, setErrorMessages] = useState([])\r\n\r\n\r\n  /** METHODS **/\r\n  useImperativeHandle(ref, () => ({\r\n    handleSubmit,\r\n    reset: handleReset,\r\n    focus: handleFocus,\r\n  }))\r\n\r\n  const bulkToCards = async (text) => {\r\n    let cards = []\r\n    let errors = []\r\n    const lines = text\r\n      .trim()\r\n      .split('\\n')\r\n      .map(line => line.trim())\r\n\r\n\r\n    for (let i = 0; i < lines.length; i++) {\r\n      let words = compact(lines[i].split(/[\\s]+/g)) // split on whitespaces (greedy)\r\n      const card = { line: i }\r\n\r\n      if (words.length === 0)\r\n        continue\r\n\r\n\r\n      // card.amount //\r\n      if (words[0].match(/(^x[1-9][0-9]*$)|(^[1-9][0-9]*x$)/gi)) {\r\n        // `x123` or `123x`\r\n        card.amount = parseInt(words[0].replace(/x/gi, ''))\r\n        words.splice(0, 1)\r\n      }\r\n      else if (words[0].match(/^[1-9][0-9]*$/g)) {\r\n        // `123` with no `x`\r\n        card.amount = parseInt(words[0])\r\n        words.splice(0, 1)\r\n      }\r\n      else if (words[0].match(/(^x{2,}[0-9]+$)|(^[0-9]+x{2,}$)|(^[^x][0-9]+$)|((^[0-9]+[^x]$))/gi)) {\r\n        errors.push({ line: i, message: `Invalid amount format.` })\r\n      }\r\n      else\r\n        card.amount = 1\r\n\r\n\r\n      // card.name //\r\n      if (words[0].match(/^\\[/g))\r\n        errors.push({ line: i, message: `Card name cannot start with '['.` })\r\n\r\n      while (words.length > 1 && words[1].match(/^[^[]/g)) // join words until we find a `[`\r\n        words.splice(0, 2, words.slice(0, 2).join(' '))\r\n      card.name = words.splice(0, 1)[0]\r\n\r\n\r\n      // bracket options //\r\n      while (words.length > 0) {\r\n        //foil\r\n        if (words[0].match(/^\\[f\\]$/gi))\r\n          card.foil = true\r\n\r\n        //set\r\n        else if (words[0].match(/^\\[\\w+]$/g))\r\n          card.set = words[0].replace(/[\\]\\[]/g, '')\r\n\r\n        //collector number\r\n        else if (words[0].match(/^\\[#.+]$/g))\r\n          card.collector_number = words[0].replace(/[#\\]\\[]/g, '')\r\n\r\n        //lang\r\n        else if (words[0].match(/^\\[@[a-z]+]$/gi))\r\n          card.lang = words[0].replace(/[\\]\\[]/g, '')\r\n\r\n        words.splice(0, 1)\r\n      }\r\n\r\n      cards.push(card)\r\n    }\r\n\r\n    // add scryfall data using fuzzy search\r\n    cards = await Promise.all(\r\n      cards.map(async (card) => {\r\n        let data = {}\r\n\r\n        try {\r\n          try {\r\n            data = await Scryfall.getCard(card.name, 'fuzzyName')\r\n          }\r\n          catch {\r\n            throw new Error(`Card name not found: \"${card.name}\".`)\r\n          }\r\n\r\n          const setPrints = await getCardPrints(data, 'set')\r\n\r\n          if (card.set) {\r\n            let flag = true\r\n            for (const item of setPrints) {\r\n              if (item.set.toLowerCase() === card.set.toLowerCase()) {\r\n                delete item.foil\r\n                data = {\r\n                  ...data,\r\n                  ...item,\r\n                }\r\n                flag = false\r\n                break\r\n              }\r\n            }\r\n            if (flag)\r\n              throw new Error(`Set not found: \"${card.set}\".`)\r\n          }\r\n\r\n          if (card.collector_number) {\r\n            let flag = true\r\n            for (const item of setPrints) {\r\n              if (item.collector_number === card.collector_number) {\r\n                delete item.foil\r\n                data = {\r\n                  ...data,\r\n                  ...item,\r\n                }\r\n                flag = false\r\n                break\r\n              }\r\n            }\r\n            if (flag)\r\n              throw new Error(`Collector number not found: \"${card.collector_number}\".`)\r\n          }\r\n\r\n          if (card.lang) {\r\n            const setLangs = await getCardPrints(data, 'lang')\r\n            for (const item of setLangs) {\r\n              if (item.lang.toLowerCase() === card.lang.toLowerCase()) {\r\n                delete item.foil\r\n                data = {\r\n                  ...data,\r\n                  ...item,\r\n                }\r\n                break\r\n              }\r\n            }\r\n          }\r\n\r\n          return {\r\n            ...data,\r\n            ...card,\r\n            foil: Boolean(card.foil),\r\n          }\r\n        }\r\n        catch (error) {\r\n          console.error(error)\r\n          return {\r\n            card,\r\n            error: {\r\n              line: card.line,\r\n              message: error.message,\r\n            },\r\n          }\r\n        }\r\n      })\r\n    )\r\n\r\n    cards = cards.filter(card => {\r\n      if (card.hasOwnProperty('error')) {\r\n        errors.push(card.error)\r\n        return false\r\n      }\r\n      return true\r\n    })\r\n\r\n    errors.sort((a, b) => a.line - b.line)\r\n    return { cards, errors }\r\n  }\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    updateHeight() // update height on each render\r\n  })\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleSubmit = async (e) => {\r\n    if (cardListText.trim() === '')\r\n      throw new Error('No cards to import')\r\n\r\n    const { cards, errors } = await bulkToCards(cardListText)\r\n\r\n    if (errors.length > 0) {\r\n      setErrorMessages(errors)\r\n      throw new Error(errors)\r\n    }\r\n\r\n    return cards\r\n  }\r\n\r\n  const handleFocus = () => {\r\n    inputRef.current?.focus()\r\n  }\r\n\r\n  const handleReset = () => {\r\n    setErrorMessages([])\r\n    setCardListText('')\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <Grid container justifyContent='center' alignItems='center' spacing={1}>\r\n      {\r\n        errorMessages.length > 0 &&\r\n        <>\r\n          <Grid item xs={12} component={Typography} color='error' variant='h6' align='left' style={{ marginLeft: 8 }}>\r\n            We found errors in your card list\r\n          </Grid>\r\n          <Grid item container xs={12} direction='column' style={{ marginLeft: 8, marginBottom: 12 }}>\r\n            {\r\n              Object.values(errorMessages).map(({ line, message }, i) => (\r\n                <Grid item key={i} component='li' align='left' style={{ whiteSpace: 'break-spaces', marginLeft: 12 }}>\r\n                  <Typography color='error' align='left'>\r\n                    {`Line ${line + 1}, \\t${upperFirst(message)}`}\r\n                  </Typography>\r\n                </Grid>\r\n              ))\r\n            }\r\n          </Grid>\r\n        </>\r\n      }\r\n\r\n      <Grid item xs={12}>\r\n        <TextField multiline fullWidth\r\n          inputRef={inputRef}\r\n          color='secondary'\r\n          rows={20}\r\n          variant='filled'\r\n          label='Card List'\r\n          value={cardListText}\r\n          onChange={e => setCardListText(e.target.value)}\r\n          placeholder={[\r\n            \"Paste your collection here, the supported format is:\",\r\n            \"\\tx2 cardname [setid] [#collectorNumber] [@lang] [isFoil]\",\r\n            \"\",\r\n            \"Fuzzy named search is supported.\",\r\n            \"\",\r\n            \"------------------------\",\r\n            \"\",\r\n            \"2 fireball [m12] [f]\",\r\n            \"atraxa [@fr]\",\r\n            \"3x Garruk's Gorehorn [#306]\",\r\n            \"1x Garruk's Gorehorn [#108]\",\r\n            \"...\",\r\n          ].join('\\n')}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    BulkImport\r\n  )","const useStyles = (theme) => {\r\n  const topBottomPadding = theme.spacing(8)\r\n\r\n  return {\r\n    root: {\r\n      minHeight: `calc(100vh - 2*${topBottomPadding}px)`,\r\n      marginBottom: theme.spacing(2),\r\n      // width: '40vw',\r\n      // flexDirection: \"column\",\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      display: 'flex',\r\n      flexGrow: 1,\r\n    },\r\n    hoverHighlight: {\r\n      cursor: 'pointer',\r\n      '&:hover': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n    view1Container: {\r\n      height: '350px',\r\n    },\r\n    view2Container: {\r\n      padding: [2, 2, 0, 2]\r\n        .map(v => `${theme.spacing(v)}px`)\r\n        .join(' '),\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { useState, useEffect, useRef } from 'react'\r\nimport { Grid, Typography, Paper, Divider, Button, TextField, Box } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport {\r\n  ImportExport as ImportExportIcon,\r\n  ChevronLeft as ChevronLeftIcon,\r\n  ChevronRight as ChevronRightIcon,\r\n} from '@material-ui/icons'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { useSnackbar } from 'notistack'\r\nimport SwipeableViews from 'react-swipeable-views'\r\n\r\nimport Config from '@/Config'\r\nimport { setCurrentTab, setCurrentCollection, updateCollection } from '@/Logic/redux'\r\nimport { MagicdexApi } from '@/Api'\r\nimport { BaseForm } from '@/Components'\r\nimport ImportWizard from './ImportWizard'\r\nimport BulkImport from './BulkImport'\r\nimport useStyles from './styles'\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  username: state.actions.activeUser.username,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    setCurrentTab: (tab) => dispatch(setCurrentTab({ tab })),\r\n    setCurrentCollection: (collection) => dispatch(setCurrentCollection({ collection })),\r\n    updateCollection: (cards) => dispatch(updateCollection({ cards })),\r\n  }\r\n})\r\n\r\n\r\nconst Import = ({\r\n  /** VARS **/\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n    dispatch,\r\n    username,\r\n  } = props\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  const history = useHistory()\r\n\r\n  const refs = {\r\n    viewRef: useRef(),\r\n    wizardRef: useRef(),\r\n    bulkRef: useRef(),\r\n  }\r\n\r\n  const [currentViewIndex, _setCurrentViewIndex] = useState(1)\r\n  const [wizardBackdrop, setWizardBackdrop] = useState(false)\r\n\r\n  const updateHeight = () => setTimeout(refs.viewRef.current?.updateHeight, 10)\r\n\r\n\r\n  /** FUNCTIONS **/\r\n  const updateCollection = async (newCards) => {\r\n    if (Config.MODIFY_DB_ALLOWED) {\r\n      try {\r\n        const res = await MagicdexApi.updateCards(newCards)\r\n        const actions = _.countBy(res, 'action')\r\n\r\n        dispatch.updateCollection(res.map(item => item.card))\r\n\r\n        actions['CREATED'] && enqueueSnackbar(`Created ${actions['CREATED']} card entries`, { variant: 'success' })\r\n        actions['UPDATED'] && enqueueSnackbar(`Updated ${actions['UPDATED']} card entries`, { variant: 'info' })\r\n      }\r\n      catch (error) {\r\n        enqueueSnackbar(`Error updating cards`, { variant: 'error' })\r\n        console.error({ error })\r\n      }\r\n    }\r\n    else {\r\n      dispatch.updateCollection([{ action: 'UPDATED', cards: newCards }])\r\n      enqueueSnackbar(`Updated ${newCards.length} card entries`, { variant: 'info' })\r\n    }\r\n  }\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    //onMount\r\n    dispatch.setCurrentTab('collection')\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (!username)\r\n      return history.push('/login')\r\n  }, [username])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const setCurrentViewIndex = (index) => {\r\n    _setCurrentViewIndex(index)\r\n    updateHeight()\r\n    \r\n    switch (index) {\r\n      case 0:\r\n        setTimeout(refs.bulkRef.current?.focus, 350)\r\n        break\r\n\r\n      default:\r\n      case 1:\r\n        break\r\n\r\n      case 2:\r\n        setTimeout(refs.wizardRef.current?.focus, 350)\r\n        break\r\n    }\r\n  }\r\n\r\n  const handleImportTypeClick = (source) => (e) => {\r\n    switch (source) {\r\n      case 'bulk':\r\n        setCurrentViewIndex(0)\r\n        break\r\n\r\n      case 'wizard':\r\n        setCurrentViewIndex(2)\r\n        break\r\n\r\n      default:\r\n        setCurrentViewIndex(1)\r\n        break\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (source) => async (e) => {\r\n    let formRef = null\r\n    let res = []\r\n\r\n    switch (source) {\r\n      case 'bulk':\r\n        formRef = refs.bulkRef.current\r\n        break\r\n\r\n      case 'wizard':\r\n        formRef = refs.wizardRef.current\r\n        break\r\n\r\n      default:\r\n        break\r\n    }\r\n\r\n    try {\r\n      const newCards = (await formRef.handleSubmit(e))\r\n        .map(card => ({\r\n          ...card,\r\n          amount: `+${card.amount}`,\r\n        }))\r\n      setWizardBackdrop(true)\r\n\r\n      await updateCollection(newCards)\r\n      setCurrentViewIndex(1)\r\n      formRef.reset()\r\n\r\n      res = Promise.resolve(newCards)\r\n    }\r\n    catch (err) {\r\n      res = Promise.reject(err)\r\n    }\r\n    finally {\r\n      setWizardBackdrop(false)\r\n      return res\r\n    }\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <Grid container className={classes.root}>\r\n      <Grid item xs={12} component={Paper}>\r\n        <SwipeableViews animateHeight ignoreNativeScroll\r\n          ref={refs.viewRef}\r\n          index={currentViewIndex}\r\n          slideStyle={{\r\n            overflow: 'hidden',\r\n          }}\r\n          style={{ overflow: 'hidden' }}\r\n        >\r\n\r\n          {/** VIEW 0 - BULK IMPORT **/}\r\n          <Grid container justifyContent='center' alignItems='center' spacing={2} className={classes.view2Container}>\r\n            <BaseForm\r\n              onSubmit={handleSubmit('bulk')}\r\n              instantValidate={false}\r\n              elevation={0}\r\n              style={{ width: '100%' }}\r\n\r\n              header='Bulk Import'\r\n              headerProps={{ align: 'left' }}\r\n              icon={() => (\r\n                <Box marginBottom={-2}>\r\n                  <ImportExportIcon style={{ fontSize: '1.5em' }} />\r\n                </Box>\r\n              )}\r\n\r\n              content={() => (\r\n                <BulkImport refs={refs.bulkRef} updateHeight={updateHeight} />\r\n              )}\r\n              contentProps={{\r\n                style: {\r\n                  paddingRight: '8px',\r\n                },\r\n              }}\r\n\r\n              actions={() => (\r\n                <Box paddingTop={2} marginLeft={1.5} marginRight={1.5}>\r\n                  <Grid container justifyContent='flex-end' alignItems='center' spacing={1}>\r\n                    <Grid item xs align='left'>\r\n                      <Button variant='contained' color='secondary' onClick={refs.bulkRef.current?.reset}>\r\n                        Reset\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Button variant='outlined' onClick={() => setCurrentViewIndex(1)}>\r\n                        Back\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Button variant='contained' type='submit' color='primary'>\r\n                        Submit\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Box>\r\n              )}\r\n            />\r\n          </Grid>\r\n\r\n\r\n          {/** VIEW 1 - CHOOSE IMPORT TYPE **/}\r\n          <Grid container justifyContent='center' alignItems='center' className={`MuiPaper-rounded ${classes.view1Container}`}>\r\n            <Grid item container xs component={Button} style={{ height: '100%', borderRadius: 0 }} onClick={handleImportTypeClick('bulk')}>\r\n              <Grid item style={{ marginTop: 6, marginRight: 12 }}>\r\n                <ChevronLeftIcon fontSize='large' />\r\n              </Grid>\r\n              <Grid item component={Typography} variant=\"h5\">\r\n                Bulk Import\r\n              </Grid>\r\n            </Grid>\r\n            <Divider flexItem orientation='vertical' />\r\n            <Grid item container xs component={Button} style={{ height: '100%', borderRadius: 0 }} onClick={handleImportTypeClick('wizard')}>\r\n              <Grid item component={Typography} variant=\"h5\">\r\n                Import Wizard\r\n              </Grid>\r\n              <Grid item style={{ marginTop: 6, marginLeft: 12 }}>\r\n                <ChevronRightIcon fontSize='large' />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n\r\n          {/** VIEW 2 - IMPORT WIZARD **/}\r\n          <Grid container justifyContent='center' alignItems='center' spacing={2} className={classes.view2Container}>\r\n            <BaseForm\r\n              onSubmit={handleSubmit('wizard')}\r\n              disableBackdrop={!wizardBackdrop}\r\n              instantValidate={false}\r\n              elevation={0}\r\n              style={{ width: '100%' }}\r\n\r\n              header={() =>\r\n                <>\r\n                  Import Wizard <span style={{ fontSize: '0.5em' }}>(of the coast™)</span>\r\n                </>\r\n              }\r\n              headerProps={{ align: 'left' }}\r\n              icon={() => (\r\n                <Box marginBottom={2}>\r\n                  🧙‍♂️\r\n                </Box>\r\n              )}\r\n\r\n              content={() => (\r\n                <ImportWizard refs={refs.wizardRef} updateHeight={updateHeight} />\r\n              )}\r\n              contentProps={{\r\n                style: {\r\n                  paddingRight: '8px',\r\n                },\r\n              }}\r\n\r\n              actions={() => (\r\n                <Box paddingTop={2} marginLeft={1.5} marginRight={1.5}>\r\n                  <Grid container justifyContent='flex-end' alignItems='center' spacing={1}>\r\n                    <Grid item xs align='left'>\r\n                      <Button variant='contained' color='secondary' onClick={refs.wizardRef.current?.reset}>\r\n                        Reset\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Button variant='outlined' onClick={() => setCurrentViewIndex(1)}>\r\n                        Back\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Button variant='contained' color='primary' type='submit'>\r\n                        Submit\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Box>\r\n              )}\r\n            />\r\n          </Grid>\r\n\r\n        </SwipeableViews>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    connect(mapStateToProps, mapDispatchToProps)(\r\n      Import\r\n    )\r\n  )","const useStyles = (theme) => {\r\n  const topBottomPadding = theme.spacing(8)\r\n\r\n  return {\r\n    root: {\r\n      minHeight: `calc(100vh - 2*${topBottomPadding}px)`,\r\n      // width: '40vw',\r\n      // flexDirection: \"column\",\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      display: 'flex',\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      height: '350px',\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-lone-blocks */\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport { Grid, Box, Button } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport { Description as ExportIcon } from '@material-ui/icons'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { setCurrentTab, setCurrentCollection } from '@/Logic/redux'\r\nimport { pickCardFields } from '@/Api/MagicdexApi/utils'\r\nimport { BaseForm } from '@/Components'\r\nimport useStyles from './styles'\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  username: state.actions.activeUser.username,\r\n  collection: state.actions.activeUser.collection,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    setCurrentTab: (tab) => dispatch(setCurrentTab({ tab })),\r\n    setCurrentCollection: (collection) => dispatch(setCurrentCollection({ collection })),\r\n  }\r\n})\r\n\r\n\r\nconst Export = ({\r\n  /** VARS **/\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n    dispatch,\r\n    username,\r\n    collection,\r\n  } = props\r\n  const history = useHistory()\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    //onMount\r\n    dispatch.setCurrentTab('collection')\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (!username)\r\n      return history.push('/login')\r\n  }, [username])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleSubmit = () => {\r\n    // TODO: handle export submit\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <div className={classes.root}>\r\n      <BaseForm\r\n        onSubmit={handleSubmit}\r\n        instantValidate={false}\r\n        style={{ width: '100%' }}\r\n\r\n        header='Export Data'\r\n        headerProps={{ align: 'left' }}\r\n        icon={<ExportIcon style={{ fontSize: '1em' }} />}\r\n\r\n        content={() => (\r\n          <>todo</>\r\n        )}\r\n        // contentProps={{\r\n        //   style: {\r\n        //     paddingRight: '8px',\r\n        //   },\r\n        // }}\r\n\r\n        actions={() => (\r\n          <Box paddingTop={2} marginLeft={1.5} marginRight={1.5}>\r\n            <Grid container justifyContent='flex-end' alignItems='center' spacing={1}>\r\n              <Grid item xs align='left'>\r\n                <Button variant='contained' color='secondary'>\r\n                  Reset\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button variant='outlined'>\r\n                  Back\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button variant='contained' type='submit' color='primary'>\r\n                  Submit\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        )}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    connect(mapStateToProps, mapDispatchToProps)(\r\n      Export\r\n    )\r\n  )","\r\nconst useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  // const mainSidesPadding = theme.spacing(10)\r\n\r\n  return {\r\n    '@global': {\r\n      '.MuiTableCell-head': {\r\n        fontWeight: 'bold',\r\n        textTransform: 'uppercase',\r\n      },\r\n      '.MuiTableCell-sizeSmall': {\r\n        padding: '0.3em',\r\n      },\r\n    },\r\n    root: {\r\n      marginBottom: theme.spacing(3),\r\n    },\r\n    fab: {\r\n      position: 'fixed',\r\n      bottom: theme.spacing(2),\r\n      right: theme.spacing(3),\r\n    },\r\n    filtersContainer: {\r\n      marginBottom: theme.spacing(4.5),\r\n    },\r\n    subheader: {\r\n      justifyContent: 'center',\r\n      fontWeight: 600,\r\n      height: '2.5rem',\r\n      alignItems: 'baseline',\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { useEffect, useRef } from 'react'\r\nimport { Grid, ListItemText, MenuItem, ListItem, ListSubheader, Divider, useMediaQuery } from '@material-ui/core'\r\nimport { Skeleton, ToggleButton, ToggleButtonGroup } from '@material-ui/lab'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport {\r\n  MoreVert as MoreVertIcon,\r\n  ViewList as ViewListIcon,\r\n  ViewModule as ViewModuleIcon,\r\n  ViewCompact as ViewCompactIcon,\r\n} from '@material-ui/icons'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport upperFirst from 'lodash/upperFirst'\r\n\r\nimport {\r\n  setCurrentTab, setCurrentCollection, setView, toggleCurrency, setColumns_TableView,\r\n  toggleCardsSelectableEnabled, setCurrentOpenCardId, setCardsSelectableEnabled,\r\n  setPerPage, setPageNumber,\r\n} from '@/Logic/redux'\r\nimport { CardPriceDataProvider, FilteredDataProvider } from '@/Providers'\r\nimport { MenuPopover } from '@/Components'\r\nimport { MagicdexApi } from '@/Api'\r\nimport { CardTableView, CardGridView, CardInfo } from './Views'\r\nimport FilterFields from './FilterFields'\r\nimport MyFabs from './MyFabs'\r\nimport Import from './.Import'\r\nimport Export from './.Export'\r\nimport useStyles from './styles'\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  username: state.actions.activeUser.username,\r\n  collection: state.actions.activeUser.collection,\r\n  view: state.actions.app.collection.view,\r\n  currency: state.actions.app.currency,\r\n  cardsSelectableEnabled: state.actions.app.collection.cardsSelectableEnabled,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    setCurrentTab: (tab) => dispatch(setCurrentTab({ tab })),\r\n    setCurrentCollection: (collection) => dispatch(setCurrentCollection({ collection })),\r\n    setCurrentOpenCardId: (id) => dispatch(setCurrentOpenCardId({ id })),\r\n    setView: (view) => dispatch(setView({ view })),\r\n    setColumns: (columns) => dispatch(setColumns_TableView({ columns })),\r\n    toggleCurrency: () => dispatch(toggleCurrency()),\r\n    setCardsSelectableEnabled: (enabled) => dispatch(setCardsSelectableEnabled({ enabled })),\r\n    toggleCardsSelectableEnabled: () => dispatch(toggleCardsSelectableEnabled()),\r\n    setPageNumber: (pageNumber) => dispatch(setPageNumber({ pageNumber })),\r\n    setPerPage: (perPage) => dispatch(setPerPage({ perPage })),\r\n  }\r\n})\r\n\r\n\r\nconst Collection = ({\r\n  /** VARS **/\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n    dispatch,\r\n    username,\r\n    collection, // current user's collection\r\n    view, // one of ['table', 'grid', 'compact']\r\n    currency,\r\n    cardsSelectableEnabled,\r\n  } = props\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n  const menuRef = useRef()\r\n  const menuItemRef = useRef()\r\n  const mdDown = useMediaQuery((theme) => theme.breakpoints.down('md'))\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    //onMount\r\n    dispatch.setCurrentTab('collection')\r\n    dispatch.setCurrentOpenCardId(null)\r\n\r\n    //onUnmount\r\n    return () => {\r\n      dispatch.setCurrentOpenCardId(null)\r\n      dispatch.setCardsSelectableEnabled(false)\r\n      // dispatch.setPerPage(PER_PAGE)\r\n      dispatch.setPageNumber(0)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(location.search)\r\n    const viewParam = params.get('view')\r\n\r\n    if (viewParam && viewParam !== view)\r\n      handleViewChange(viewParam)\r\n  }, [location])\r\n\r\n  useEffect(() => {\r\n    if (mdDown) {\r\n      dispatch.setColumns({\r\n        amount: 'amount',\r\n        name: 'name',\r\n        set: 'set',\r\n        mana_cost: 'cost',\r\n        type_line: 'type',\r\n        foil: 'foil',\r\n        total_price: `price`,\r\n      })\r\n    }\r\n    else {\r\n      dispatch.setColumns({\r\n        amount: 'amount',\r\n        name: 'name',\r\n        set: 'set',\r\n        mana_cost: 'mana cost',\r\n        type_line: 'type',\r\n        foil: 'foil',\r\n        total_price: `price (${currency})`,\r\n        date_created: 'date added',\r\n      })\r\n    }\r\n  }, [mdDown, currency])\r\n\r\n  useEffect(() => {\r\n    if (!username)\r\n      return history.push('/login')\r\n\r\n    dispatch.setCurrentCollection(JSON.parse(localStorage.getItem('collection')))\r\n    MagicdexApi\r\n      .getAllCards()\r\n      .then(res => dispatch.setCurrentCollection(res))\r\n  }, [username])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleViewChange = (value) => {\r\n    if (value && value !== view) {\r\n      const params = new URLSearchParams(location.search)\r\n      params.set('view', value)\r\n\r\n      history.push({ search: params.toString() })\r\n      dispatch.setView(value)\r\n      dispatch.setCurrentOpenCardId(null)\r\n      dispatch.setCardsSelectableEnabled(false)\r\n      // dispatch.setPerPage(PER_PAGE)\r\n      dispatch.setPageNumber(0)\r\n    }\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        {\r\n          !collection\r\n            ?\r\n            // SHOW SKELETON\r\n            <Grid container justifyContent='center'>\r\n              <Grid item container xs={12} sm={11} md={10} spacing={2}>\r\n                <Grid item xs={2}>\r\n                  <Skeleton variant='rect' height='100%' />\r\n                </Grid>\r\n                <Grid item container xs={10}>\r\n                  <Grid item xs={2}>\r\n                    <Skeleton variant='circle' width={75} height={75} />\r\n                  </Grid>\r\n                  <Grid item xs={10}>\r\n                    <Skeleton variant='rect' height={32} />\r\n                    <Skeleton variant='text' />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    {[...Array(10).keys()].map(i => <Skeleton key={i} variant='text' />)}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            :\r\n            // SHOW ACTUAL DATA VIEW\r\n            <>\r\n              <Grid container justifyContent='center'>\r\n                <Grid item container xs={12} lg={10} wrap='nowrap' justifyContent='center' alignItems='center' className={classes.filtersContainer}>\r\n                  <Grid item container xs={11}>\r\n                    <FilterFields />\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <MenuPopover\r\n                      refs={menuRef}\r\n                      icon={<MoreVertIcon />}\r\n                      listProps={{ dense: true }}\r\n                    >\r\n                      <ListItem style={{ justifyContent: 'center' }}>\r\n                        <ToggleButtonGroup exclusive\r\n                          style={{ height: '2.4em' }}\r\n                          size='small'\r\n                          value={view}\r\n                          onChange={(e, v) => handleViewChange(v)}\r\n                        >\r\n                          <ToggleButton value='table'>\r\n                            <ViewListIcon />\r\n                          </ToggleButton>\r\n                          <ToggleButton value='grid'>\r\n                            <ViewModuleIcon />\r\n                          </ToggleButton>\r\n                          <ToggleButton value='compact'>\r\n                            <ViewCompactIcon />\r\n                          </ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                      </ListItem>\r\n\r\n                      <Divider style={{ marginTop: 8 }} />\r\n\r\n                      <ListSubheader className={classes.subheader}>\r\n                        {`${upperFirst(view)} View`}\r\n                      </ListSubheader>\r\n                      <MenuItem onClick={dispatch.toggleCardsSelectableEnabled}>\r\n                        <ListItemText\r\n                          primary={'Selection Mode'}\r\n                          secondary={cardsSelectableEnabled ? 'On' : 'Off'}\r\n                        />\r\n                      </MenuItem>\r\n                      <MenuItem onClick={dispatch.toggleCurrency}>\r\n                        <ListItemText\r\n                          primary={'Change Currency'}\r\n                          secondary={`Viewing ${currency.toUpperCase()}`}\r\n                        />\r\n                      </MenuItem>\r\n\r\n                      <span ref={menuItemRef} />  {/* placeholder for the view component to use <Portal> on */}\r\n                    </MenuPopover>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid item container wrap='nowrap' justifyContent='center' xs={12}>\r\n                  <CardPriceDataProvider data={collection}>\r\n                    <FilteredDataProvider>\r\n                      {\r\n                        (() => {\r\n                          const props = {\r\n                            menuItemRef,\r\n                            // {data} is passed to children from the <DataProvider> parents\r\n                          }\r\n                          switch (view) {\r\n                            default:\r\n                            case 'table':\r\n                              return <CardTableView {...props} />\r\n                            case 'grid':\r\n                              return <CardGridView {...props} />\r\n                            case 'compact':\r\n                              return <div>TBD</div>\r\n                          }\r\n                        })()\r\n                      }\r\n                    </FilteredDataProvider>\r\n                  </CardPriceDataProvider>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              {/* FLOATING ACTION BUTTONS */}\r\n              <div className={classes.fab}>\r\n                <MyFabs />\r\n              </div>\r\n            </>\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    connect(mapStateToProps, mapDispatchToProps)(\r\n      Collection\r\n    )\r\n  )\r\n\r\nexport {\r\n  CardInfo,\r\n  Import,\r\n  Export,\r\n}","const useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  const leftRightPadding = theme.spacing(10)\r\n  const topBottomPadding = theme.spacing(8)\r\n  // const contrast = theme.palette.type === 'dark' ? '255,255,255' : '0,0,0'\r\n  // console.log(theme.palette)\r\n\r\n  return {\r\n    '@global': {\r\n      '#root': {\r\n        // display: 'flex',\r\n        // justifyContent: 'center',\r\n        // minHeight: '100vh',\r\n        // maxHeight: '100vh',\r\n        // height: '100vh',\r\n        // minWidth: '100wh',\r\n        maxWidth: '100wh',\r\n        width: '100wh',\r\n        // background: theme.palette.background.default,\r\n        // background: `linear-gradient(35deg, ${theme.palette.background.default} 20%, ${theme.palette.background.paper} 175%)`,\r\n        // background: `linear-gradient(35deg, ${theme.palette.background.paper} 10%, ${theme.palette.background.default} 225%)`,\r\n        // paddingTop: topBottomPadding,\r\n        // paddingBottom: topBottomPadding,\r\n        // paddingLeft: leftRightPadding,\r\n        // paddingRight: leftRightPadding,\r\n      }\r\n    },\r\n\r\n    root: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      // minHeight: '100vh',\r\n      // maxHeight: '100vh',\r\n      // minWidth: '100wh',\r\n      // maxWidth: '100wh',\r\n      // background: theme.palette.background.default,\r\n      // background: `linear-gradient(35deg, ${theme.palette.background.default} 20%, ${theme.palette.background.paper} 175%)`,\r\n      // background: `linear-gradient(35deg, ${theme.palette.background.paper} 10%, ${theme.palette.background.default} 225%)`,\r\n    },\r\n    content: {\r\n      overflow: 'visible', // !important\r\n      paddingTop: topBottomPadding,\r\n      // paddingBottom: topBottomPadding,\r\n      paddingLeft: leftRightPadding,\r\n      paddingRight: leftRightPadding,\r\n      // flexGrow: 1,\r\n      // maxWidth: '100wh',\r\n      // maxWidth: '95%',\r\n      // minHeight: '100vh',\r\n      // minHeight: `calc(100vh - ${topBottomPadding}px)`,\r\n      minHeight: '100vh',\r\n      // textAlign: '-webkit-center',\r\n      // display: 'flex',\r\n      // justifyContent: 'center',\r\n      // alignItems: 'center',\r\n      // paddingTop: topBottomPadding,\r\n      // paddingBottom: topBottomPadding,\r\n      // paddingLeft: leftRightPadding,\r\n      // paddingRight: leftRightPadding,\r\n      // boxShadow: theme.shadows[4]\r\n    },\r\n    bottomBar: {\r\n      // height: 'fit-content',\r\n      minHeight: topBottomPadding,\r\n      // maxHeight: topBottomPadding,\r\n      // padding: theme.spacing(1),\r\n\r\n      backgroundColor: theme.palette.primary.dark,\r\n      color: theme.palette.getContrastText(theme.palette.primary.dark),\r\n      // background: `linear-gradient(rgba(${contrast}, 0.17),rgba(${contrast}, 0.17)), ${theme.palette.background.default}`,\r\n      // boxShadow: 'rgba(17, 17, 26, 0.05) 0px 1px 0px, rgba(17, 17, 26, 0.1) 0px 0px 8px',\r\n      // boxShadow: `rgba(${contrast}, 0.5) 0px 2px 4px, rgba(${contrast}, 0.4) 0px 7px 13px -3px, rgba(${contrast}, 0.3) 0px -3px 0px inset`,\r\n      // boxShadow: 'rgba(0, 0, 0, 0.06) 0px 2px 4px 0px inset',\r\n      // boxShadow: 'rgba(17, 17, 26, 0.1) 0px 8px 24px, rgba(17, 17, 26, 0.1) 0px 16px 56px, rgba(17, 17, 26, 0.1) 0px 24px 80px',\r\n      // boxShadow: '      0px -2px 4px -1px rgb(0 0 0 / 20%), 0px -4px 5px 0px rgb(0 0 0 / 14%), 0px -1px 10px 0px rgb(0 0 0 / 12%)',\r\n      // boxShadow: '0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)',\r\n      // boxShadow: 'rgba(0, 0, 0, 0.45) 0px -25px 20px -20px',\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { useEffect, createRef } from 'react'\r\nimport { Grid, Button, CssBaseline, ThemeProvider } from \"@material-ui/core\"\r\nimport { Close as CloseIcon } from '@material-ui/icons'\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\nimport { makeStyles } from \"@material-ui/styles\"\r\nimport { SnackbarProvider } from 'notistack'\r\n// import { useHistory } from 'react-router-dom'\r\n\r\nimport { Collection, TopMenu, BottomBar, Login, Register, Home, Decks, Profile } from \"@/Components\"\r\nimport { Import, Export } from \"@/Components/Collection\"\r\nimport { MagicdexApi } from \"@/Api\"\r\nimport { setActiveUser } from \"@/Logic/redux\"\r\nimport useStyles from \"./styles\"\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  theme: state.actions.theme.currentTheme,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    setActiveUser: (payload) => dispatch(setActiveUser(payload)),\r\n  }\r\n})\r\n\r\n\r\nconst App = ({\r\n  /** VARS **/\r\n  theme: _theme,\r\n  ...props\r\n}) => {\r\n  const {\r\n    dispatch,\r\n  } = props\r\n  const snackbarRef = createRef()\r\n  const theme = Object.assign({}, _theme)\r\n  const classes = makeStyles(useStyles(theme))()\r\n\r\n  const routes = [\r\n    {\r\n      component: Route,\r\n      props: {\r\n        path: '/',\r\n        component: Home,\r\n        exact: true,\r\n      }\r\n    },\r\n    {\r\n      component: Route,\r\n      props: {\r\n        path: '/collection',\r\n        component: Collection,\r\n        exact: true,\r\n      }\r\n    },\r\n    {\r\n      component: Route,\r\n      props: {\r\n        path: '/collection/import',\r\n        component: Import,\r\n        exact: true,\r\n      }\r\n    },\r\n    {\r\n      component: Route,\r\n      props: {\r\n        path: '/collection/export',\r\n        component: Export,\r\n        exact: true,\r\n      }\r\n    },\r\n    {\r\n      component: Route,\r\n      props: {\r\n        path: '/decks',\r\n        component: Decks,\r\n        exact: true,\r\n      }\r\n    },\r\n    {\r\n      component: Route,\r\n      props: {\r\n        path: '/login',\r\n        component: Login,\r\n        exact: true,\r\n      }\r\n    },\r\n    {\r\n      component: Route,\r\n      props: {\r\n        path: '/register',\r\n        component: Register,\r\n        exact: true,\r\n      }\r\n    },\r\n    {\r\n      component: Route,\r\n      props: {\r\n        path: '/profile',\r\n        component: Profile,\r\n        exact: true,\r\n      }\r\n    },\r\n    {\r\n      component: Redirect,\r\n      props: {\r\n        to: '/',\r\n        exact: false,\r\n      }\r\n    },\r\n  ]\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    // onMount\r\n    MagicdexApi.login() //try to login with `localStorage['accessToken']`\r\n      .then(res => {\r\n        dispatch.setActiveUser(res)\r\n        snackbarRef.current.enqueueSnackbar(`Welcome back ${res.username}`, { variant: 'info' })\r\n        // snackbarRef.current.enqueueSnackbar('Welcome back', { variant: 'info' })\r\n      })\r\n      .catch(err => dispatch.setActiveUser({ username: null }))\r\n  }, [])\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <SnackbarProvider\r\n        ref={snackbarRef}\r\n        autoHideDuration={3250}\r\n        maxSnack={3}\r\n        action={toastId => (\r\n          <Button\r\n            endIcon={<CloseIcon />}\r\n            onClick={e => snackbarRef.current.closeSnackbar(toastId)}\r\n            color=\"inherit\"\r\n          >\r\n            Dismiss\r\n          </Button>\r\n        )}\r\n      >\r\n        <Grid container component={Router} justifyContent='center' alignItems='flex-start' basename='/magicdex-web'>\r\n          <Grid item xs={12}\r\n            component={TopMenu}\r\n          />\r\n\r\n          <Grid item xs={12} align='center' className={classes.content}>\r\n            <Switch>\r\n              {\r\n                routes.map((item, i) => (\r\n                  <item.component\r\n                    key={i}\r\n                    {...item.props}\r\n                  />\r\n                ))\r\n              }\r\n            </Switch>\r\n          </Grid>\r\n\r\n          <Grid item container justifyContent='center' alignItems='center' xs={12} className={`${classes.bottomBar} MuiPaper-elevation8`}>\r\n            <BottomBar />\r\n          </Grid>\r\n        </Grid>\r\n      </SnackbarProvider>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","\r\nconst useStyles = (theme) => {\r\n    // const bottomBarHeight = '50px'\r\n    // const mainSidesPadding = theme.spacing(10)\r\n  \r\n    return {\r\n      icon: {\r\n      },\r\n      popover: {\r\n      },\r\n      paper: {\r\n        minWidth: theme.spacing(20),\r\n      },\r\n      // contentShift: {\r\n      //   transition: theme.transitions.create('margin', {\r\n      //     easing: theme.transitions.easing.easeOut,\r\n      //     duration: theme.transitions.duration.enteringScreen,\r\n      //   }),\r\n      //   marginLeft: 0,\r\n      // },\r\n      // listItemText: {\r\n      //   marginRight: theme.spacing(1),\r\n      // },\r\n      // ListItemIcon: {\r\n      //   marginRight: theme.spacing(2.5),\r\n      //   width: 'auto',\r\n      //   minWidth: 'auto',\r\n      // },\r\n    }\r\n  }\r\n  \r\n  export default useStyles","import { useImperativeHandle, useRef } from 'react'\r\nimport { ClickAwayListener, IconButton, List, Paper, Popover } from '@material-ui/core'\r\nimport { useState, useEffect } from 'react'\r\nimport { withStyles } from '@material-ui/styles'\r\n\r\nimport useStyles from './styles'\r\n\r\n\r\nconst MenuPopover = ({\r\n  /** VARS **/\r\n  refs,\r\n  icon,\r\n  iconButtonProps,\r\n  popoverProps,\r\n  listProps,\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n    children,\r\n    // ...rest\r\n  } = props\r\n\r\n  const iconButtonRef = useRef()\r\n  const [Icon, setIcon] = useState(icon)\r\n\r\n  const [menuAnchor, setMenuAnchor] = useState(null)\r\n  const menuOpen = Boolean(menuAnchor)\r\n\r\n\r\n  /** EFFECTS **/\r\n  useImperativeHandle(refs, () => ({\r\n    openMenu: () => { handleMenuOpen(iconButtonRef) },\r\n    closeMenu: () => { handleMenuClose(null) },\r\n  }))\r\n\r\n  useEffect(() => {\r\n    setIcon(icon)\r\n  }, [icon])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleIconClick = (e) => {\r\n    handleMenuOpen(e.currentTarget)\r\n    e.stopPropagation()\r\n  }\r\n\r\n  const handleMenuOpen = (menuAnnchor) => {\r\n    setMenuAnchor(menuAnnchor)\r\n  }\r\n\r\n  const handleMenuClose = (e) => {\r\n    setMenuAnchor(null)\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <>\r\n      <IconButton\r\n        color=\"inherit\"\r\n        className={classes.icon}\r\n        ref={iconButtonRef}\r\n        onClick={handleIconClick}\r\n        {...iconButtonProps}\r\n      >\r\n        {Icon}\r\n      </IconButton>\r\n\r\n      <Popover keepMounted\r\n        ref={refs}\r\n        className={classes.popover}\r\n        open={menuOpen}\r\n        anchorEl={menuAnchor}\r\n        onClose={handleMenuClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n        {...popoverProps}\r\n      >\r\n        <Paper className={classes.paper}>\r\n          <ClickAwayListener onClickAway={handleMenuClose}>\r\n            <List {...listProps}>\r\n              {children}\r\n            </List>\r\n          </ClickAwayListener>\r\n        </Paper>\r\n      </Popover>\r\n    </>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    MenuPopover\r\n  )\r\n","\r\nconst useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  const mainSidesPadding = theme.spacing(10)\r\n\r\n  return {\r\n    root: {\r\n      position: 'absolute',\r\n    },\r\n    appBar: {\r\n      // position: \"inherit\",\r\n      paddingLeft: mainSidesPadding,\r\n      paddingRight: mainSidesPadding,\r\n      // backgroundColor: theme.palette.type === 'dark' ? 'rgba(0,0,0,0.25)' : theme.palette.primary,\r\n      // backgroundColor: theme.palette.type === 'dark' ? theme.palette.primary : theme.palette.primary,\r\n      // color: theme.palette.text.primary,\r\n      // transition: theme.transitions.create(['margin', 'width'], {\r\n      //   easing: theme.transitions.easing.sharp,\r\n      //   duration: theme.transitions.duration.leavingScreen,\r\n      // }),\r\n    },\r\n    iconButton: {\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    dropdown_tab: {\r\n      display: 'flex',\r\n      whiteSpace: 'nowrap',\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      // '&:hover':{\r\n      //   backgroundColor: 'transparent',\r\n      // },\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","import { useRef } from \"react\"\r\nimport { AppBar, Tabs, Tab, Grid, MenuItem, Divider, ListSubheader, ListItem, ListItemText, ListItemSecondaryAction, Switch } from \"@material-ui/core\"\r\nimport { withStyles } from \"@material-ui/styles\"\r\nimport {\r\n  Menu as MenuIcon,\r\n  AccountCircle as AccountCircleIcon,\r\n  Settings as SettingsIcon,\r\n  // ArrowDropDown as ArrowDropDownIcon,\r\n} from '@material-ui/icons'\r\nimport { connect } from \"react-redux\"\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSnackbar } from \"notistack\"\r\n\r\nimport { MenuPopover } from '@/Components'\r\nimport { setActiveUser, toggleThemeType } from \"@/Logic/redux\"\r\nimport useStyles from \"./styles\"\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  themeType: state.actions.theme.themeType,\r\n  username: state.actions.activeUser.username,\r\n  currentTab: state.actions.app.topMenu.currentTab,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  'dispatch': {\r\n    toggleThemeType: (payload) => dispatch(toggleThemeType(payload)),\r\n    setActiveUser: (payload) => dispatch(setActiveUser(payload)),\r\n  }\r\n})\r\n\r\n\r\nconst TopMenu = ({\r\n  /** VARS **/\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n    dispatch,\r\n    currentTab,\r\n    themeType,\r\n    username,\r\n  } = props\r\n  const history = useHistory()\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  const menuRef = useRef()\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleTabChange = (event, value) => {\r\n    // dispatch.setCurrentTab({tab:value});\r\n    history.push('/' + value)\r\n  }\r\n\r\n  const handleMenuItemClick = (e) => {\r\n    let goto = e.currentTarget.attributes.goto?.value\r\n    let id = e.currentTarget.attributes.id?.value\r\n\r\n    switch (id) {\r\n      default:\r\n        menuRef.current?.closeMenu()\r\n        break\r\n\r\n      case 'profile':\r\n      case 'login':\r\n      case 'register':\r\n        menuRef.current?.closeMenu()\r\n        history.push(goto)\r\n        break\r\n\r\n      case 'logout':\r\n        // menuRef.current?.closeMenu()\r\n        dispatch.setActiveUser({ username: null })\r\n        enqueueSnackbar('Logged out', { variant: \"info\" })\r\n        break\r\n\r\n      case 'mode':\r\n        dispatch.toggleThemeType()\r\n        break\r\n    }\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar className={classes.appBar}>\r\n        <Grid container wrap='nowrap' justifyContent='space-between'>\r\n          <Grid item>\r\n            <Tabs variant='scrollable' value={currentTab} onChange={handleTabChange}>\r\n              <Tab value='home' label='Home' />\r\n              <Tab value='collection' label='Collection' />\r\n              <Tab value='decks' label='Decks' />\r\n\r\n              <Tab value='profile' style={{ display: 'none' }} />\r\n              <Tab value='login' style={{ display: 'none' }} />\r\n              <Tab value='register' style={{ display: 'none' }} />\r\n            </Tabs>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <MenuPopover refs={menuRef} icon={() => <MenuIcon />}>\r\n              <ListSubheader>\r\n                <AccountCircleIcon />\r\n                {username ?? 'Account'}\r\n              </ListSubheader>\r\n              {\r\n                username\r\n                  ?\r\n                  <>\r\n                    <MenuItem onClick={handleMenuItemClick} id='profile' goto='/profile'>Personal Info</MenuItem>\r\n                    <MenuItem onClick={handleMenuItemClick} id='logout'>Logout</MenuItem>\r\n                  </>\r\n                  :\r\n                  <>\r\n                    <MenuItem onClick={handleMenuItemClick} id='login' goto='/login'>Login</MenuItem>\r\n                    <MenuItem onClick={handleMenuItemClick} id='register' goto='/register'>Register</MenuItem>\r\n                  </>\r\n              }\r\n\r\n              <Divider />\r\n\r\n              <ListSubheader>\r\n                <SettingsIcon />\r\n                Settings\r\n              </ListSubheader>\r\n\r\n              <ListItem style={{ paddingTop: 0, paddingBottom: 0 }}>\r\n                <ListItemText primary='Toggle Theme' secondary={themeType} />\r\n                <ListItemSecondaryAction>\r\n                  <Switch\r\n                    // color='primary'\r\n                    edge='end'\r\n                    checked={themeType === 'dark'}\r\n                    onChange={handleMenuItemClick}\r\n                    id='mode'\r\n                  />\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            </MenuPopover>\r\n          </Grid>\r\n        </Grid>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n\r\n/** EXPORT WITH HOOKS AND DECORATORS **/\r\nexport default\r\n  connect(mapStateToProps, mapDispatchToProps)(\r\n    withStyles(useStyles)(\r\n      TopMenu\r\n    )\r\n  )","\r\nconst useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  // const mainSidesPadding = theme.spacing(10)\r\n\r\n  return {\r\n    root: {\r\n      position: 'relative',\r\n      borderRadius: '4.75% / 3.5%',\r\n    },\r\n    loading: {\r\n      position: 'absolute',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      top: 0,\r\n      left: 0,\r\n      color: 'white',\r\n      background: 'url(cardback.png) 0 0 / cover',\r\n      // background: 'linear-gradient(rgba(60,60,60,0.7),rgba(60,60,60,0.7)), url(cardback.png) 0 0 / cover',\r\n      opacity: 0.65,\r\n      backgroundSize: 'cover',\r\n      borderRadius: '4.75% / 3.5%',\r\n    },\r\n    base: {\r\n      borderRadius: '4.75% / 3.5%',\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n    },\r\n    overlay: {\r\n      borderRadius: '4.75% / 3.5%',\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","import { useState, useEffect } from 'react'\r\nimport { CircularProgress, FormControlLabel } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport clsx from 'clsx'\r\n\r\nimport useStyles from './styles'\r\n\r\n\r\nconst ImageOverlay = ({\r\n  /** VARS **/\r\n  name = 'Loading..',\r\n  rootProps,\r\n  baseSrc,\r\n  baseProps,\r\n  overlaySrc,\r\n  overlayEnabled,\r\n  overlayProps,\r\n  width,\r\n  height,\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n    ...rest\r\n  } = props\r\n  const [isLoaded, setLoaded] = useState(false)\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    setLoaded(false)\r\n  }, [baseSrc])\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <div\r\n      className={classes.root}\r\n      style={{ width: width, height: height }}\r\n      {...rootProps}\r\n      {...rest}\r\n    >\r\n      {\r\n        !isLoaded &&\r\n        <div\r\n          className={classes.loading}\r\n          style={{\r\n            // zIndex: 69, // nice\r\n            width: width,\r\n            height: height,\r\n          }}\r\n        >\r\n          <FormControlLabel\r\n            control={<CircularProgress />}\r\n            labelPlacement={'bottom'}\r\n            label={(\r\n              <span style={{ fontSize: '0.9rem' }}>\r\n                {name}\r\n              </span>\r\n            )}\r\n          />\r\n        </div>\r\n      }\r\n\r\n      <img\r\n        width={width}\r\n        height={height}\r\n        src={baseSrc}\r\n        alt='base'\r\n        {...baseProps}\r\n        className={clsx(classes.base, baseProps?.className)}\r\n        onLoad={(e) => setLoaded(true)}\r\n        style={{ display: isLoaded ? '' : 'none' }}\r\n      />\r\n\r\n      {\r\n        overlayEnabled &&\r\n        <img\r\n          width={width}\r\n          height={height}\r\n          src={overlaySrc}\r\n          alt='overlay'\r\n          {...overlayProps}\r\n          className={clsx(classes.overlay, overlayProps?.className)}\r\n        />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    ImageOverlay\r\n  )","\r\nconst useStyles = (theme) => {\r\n  return {\r\n    root: {\r\n      position: 'relative',\r\n      overflow: 'visible',\r\n      transition: 'all 0.33s cubic-bezier(0.75, 0, 0.25, 1)',\r\n    },\r\n    face: {\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n    },\r\n    front: {\r\n    },\r\n    back: {\r\n      transform: 'scaleX(-1)'\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","import { useEffect, useState } from 'react'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport clsx from 'clsx'\r\n\r\nimport ImageOverlay from '../ImageOverlay'\r\nimport useStyles from './styles'\r\n\r\n\r\nconst TransformableCard = ({\r\n  /** VARS **/\r\n  card,\r\n  flipped: _flipped,\r\n  width,\r\n  height,\r\n  imageProps,\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n  } = props\r\n  const [flipped, setFlipped] = useState(_flipped)\r\n  const [scaleX, setScaleX] = useState('1')\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    setScaleX(_flipped ? '-1' : '1')\r\n\r\n    setTimeout(() => {\r\n      setFlipped(_flipped)\r\n    }, 150)\r\n\r\n  }, [_flipped])\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <div\r\n      className={classes.root}\r\n      style={{\r\n        width: width || '250px',\r\n        height: height || '350px',\r\n        transform: `scaleX(${scaleX})`,\r\n      }}\r\n    >\r\n\r\n      <div className={clsx(classes.face, classes.front)} style={{ display: flipped ? 'none' : 'unset' }}>\r\n        <ImageOverlay\r\n          overlayEnabled={card.foil}\r\n          baseProps={{ alt: card?.card_faces[0]?.name }}\r\n          baseSrc={card.card_faces[0].image_uris.png}\r\n          overlaySrc='/foil-overlay.png'\r\n          overlayProps={{ style: { opacity: 0.65 } }}\r\n          name={card?.card_faces[0]?.name}\r\n          width={250}\r\n          height={350}\r\n          {...imageProps}\r\n        />\r\n      </div>\r\n\r\n      <div className={clsx(classes.face, classes.back)} style={{ display: !flipped ? 'none' : 'unset' }}>\r\n        <ImageOverlay\r\n          overlayEnabled={card.foil}\r\n          baseProps={{ alt: card?.card_faces[0]?.name }}\r\n          baseSrc={card.card_faces[1].image_uris.png}\r\n          overlaySrc='/foil-overlay.png'\r\n          overlayProps={{ style: { opacity: 0.65 } }}\r\n          name={card?.card_faces[0]?.name}\r\n          width={250}\r\n          height={350}\r\n          {...imageProps}\r\n        />\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    TransformableCard\r\n  )","\r\nconst useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  // const mainSidesPadding = theme.spacing(10)\r\n  // console.log({ palette: theme.palette })\r\n\r\n  return {\r\n    imageContainer: {\r\n      zIndex: 1,\r\n      position: 'relative',\r\n      transition: 'all 0.4s cubic-bezier(0.75, 0, 0.25, 1)',\r\n    },\r\n    dfcSymbol: {\r\n      fontSize: '1.5em',\r\n      position: 'absolute',\r\n      top: '2.5%',\r\n      left: '2.5%',\r\n    },\r\n    checkboxContainer: {\r\n      position: 'absolute',\r\n      top: '4%',\r\n      right: '5%',\r\n      // borderRadius: '20%',\r\n      // border: `1px solid ${theme.palette.action.hover}`,\r\n      // backgroundColor: theme.palette.action.active,\r\n      // margin: 0,\r\n      // padding: 0,\r\n      // '&:hover': {\r\n      //   backgroundColor: theme.palette.action.hover,\r\n      // },\r\n    },\r\n    checkbox: {\r\n      // padding: 1.5,\r\n      // margin: 2,\r\n      // backgroundColor: theme.palette.action.active,\r\n      // borderRadius: '15%',\r\n      transform: 'scale(1.5)'\r\n    },\r\n    priceContainer: {\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    buttonContainer: {\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    buttonThridly: {\r\n      color: '#fff',\r\n      backgroundColor: '#9c27b0',\r\n      '&:hover': {\r\n        backgroundColor: '#7b1fa2',\r\n      },\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport { Button, Grid, useMediaQuery, Tooltip } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport { connect } from 'react-redux'\r\nimport Tilt from 'react-parallax-tilt'\r\n\r\nimport { addSelectedCardIds, removeSelectedCardIds } from '@/Logic/redux'\r\nimport RenderCell from '@/CardRenders'\r\nimport ImageOverlay from './ImageOverlay'\r\nimport TransformableCard from './TransformableCard'\r\nimport useStyles from './styles'\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  selectedCardIds: state.actions.app.collection.selectedCardIds,\r\n  cardsSelectableEnabled: state.actions.app.collection.cardsSelectableEnabled,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    addSelectedCardId: (id) => dispatch(addSelectedCardIds({ id })),\r\n    removeSelectedCardId: (id) => dispatch(removeSelectedCardIds({ id })),\r\n  }\r\n})\r\n\r\n\r\n/** CUSTOM TOOLTIP **/\r\nconst MyTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: theme.palette.type === 'dark' ? '#787878' : '#909090',\r\n    fontSize: theme.typography.pxToRem(12.25),\r\n    boxShadow: theme.shadows[2],\r\n  },\r\n  arrow: {\r\n    color: theme.palette.type === 'dark' ? '#787878' : '#909090',\r\n  }\r\n}))(({\r\n  arrow = true,\r\n  enterDelay = 500,\r\n  placement = 'right',\r\n  ...props\r\n}) =>\r\n  <Tooltip placement={placement} arrow={arrow} enterDelay={enterDelay} {...props} />\r\n)\r\n\r\n\r\nconst CardImage = ({\r\n  /** VARS **/\r\n  card,\r\n  width = 250,\r\n  height = 350,\r\n  rootProps,\r\n  imageProps,\r\n  buttonProps,\r\n  tiltProps,\r\n  tiltEnabled = false,\r\n  transform3dEnabled = false,\r\n  packTransformButton = false,\r\n  showPrice = false,\r\n  showCheckbox = false,\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n    dispatch,\r\n    selectedCardIds,\r\n    cardsSelectableEnabled,\r\n  } = props\r\n  const md = useMediaQuery(theme => theme.breakpoints.down('md'))\r\n  const [flipped, setFlipped] = useState(false)\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    setFlipped(false)\r\n  }, [card])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleRootClick = e => {\r\n    rootProps?.onClick && rootProps.onClick(e)\r\n  }\r\n\r\n  const handleTransform = (setValueTo = undefined) => (e) => {\r\n    setFlipped(setValueTo ?? !flipped)\r\n  }\r\n\r\n  const handleCheckboxChange = (card) => (e) => {\r\n    e.target.checked\r\n      ? dispatch.addSelectedCardId(card._id)\r\n      : dispatch.removeSelectedCardId(card._id)\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <Grid container direction=\"column\" {...rootProps} onClick={handleRootClick}>\r\n\r\n      {/** IMAGE PREVIEW **/}\r\n      <Grid item\r\n        className={classes.imageContainer}\r\n        style={{\r\n          transform: flipped && (\r\n            card.is_split\r\n              ? `rotate(90deg) scale(0.825) translateX(-35%) translateY(${md ? '2%' : '7%'})`\r\n              : card.is_flip\r\n                ? 'rotate(180deg)'\r\n                : ''\r\n          ),\r\n        }}\r\n      >\r\n        <Tilt\r\n          tiltEnable={tiltEnabled}\r\n          glareEnable={tiltEnabled}\r\n          tiltMaxAngleX={10}\r\n          tiltMaxAngleY={10}\r\n          glareBorderRadius='4.75% / 3.5%'\r\n          glarePosition='all'\r\n          glareMaxOpacity={0.13}\r\n          onEnter={(card?.is_transform || card?._isDoublesided) && packTransformButton && handleTransform(true)}\r\n          onLeave={(card?.is_transform || card?._isDoublesided) && packTransformButton && handleTransform(false)}\r\n          {...tiltProps}\r\n        >\r\n          {\r\n            (card?.is_transform || card?._isDoublesided)\r\n              // double faced card\r\n              ? transform3dEnabled\r\n                ? <TransformableCard\r\n                  flipped={flipped}\r\n                  width={width}\r\n                  height={height}\r\n                  card={card}\r\n                  imageProps={imageProps}\r\n                />\r\n                : <ImageOverlay\r\n                  overlayEnabled={card?.foil}\r\n                  baseProps={{ alt: card?.name }}\r\n                  baseSrc={\r\n                    card && card.hasOwnProperty('image_uris')\r\n                      ? card.card_faces[flipped ? 1 : 0].image_uris?.png ?? card.card_faces[flipped ? 1 : 0].image_uris?.large ?? card.card_faces[flipped ? 1 : 0].image_uris?.normal\r\n                      : '/cardback.png'\r\n                  }\r\n                  overlaySrc='/foil-overlay.png'\r\n                  overlayProps={{ style: { opacity: 0.65 } }}\r\n                  name={card?.card_faces[flipped ? 1 : 0]?.name}\r\n                  width={width}\r\n                  height={height}\r\n                  {...imageProps}\r\n                />\r\n              :\r\n              // single faced card\r\n              <ImageOverlay\r\n                overlayEnabled={card?.foil}\r\n                baseProps={{ alt: card?.name }}\r\n                baseSrc={\r\n                  card && card.hasOwnProperty('image_uris')\r\n                    ? card.image_uris?.png ?? card.image_uris?.large ?? card.image_uris?.normal\r\n                    : '/cardback.png'\r\n                }\r\n                overlaySrc='/foil-overlay.png'\r\n                overlayProps={{ style: { opacity: 0.65 } }}\r\n                name={card?.name}\r\n                width={width}\r\n                height={height}\r\n                {...imageProps}\r\n              />\r\n          }\r\n\r\n          {\r\n            showCheckbox && (selectedCardIds.includes(card?._id) || cardsSelectableEnabled) &&\r\n            <span className={classes.checkboxContainer} onClick={e => e.stopPropagation()}>\r\n              <input\r\n                type='checkbox'\r\n                checked={selectedCardIds.includes(card._id)}\r\n                className={classes.checkbox}\r\n                onChange={handleCheckboxChange(card)}\r\n              />\r\n            </span>\r\n          }\r\n\r\n        </Tilt>\r\n      </Grid>\r\n\r\n      {/** PRICE **/}\r\n      {\r\n        showPrice &&\r\n        <Grid item align='center' className={classes.priceContainer}>\r\n          {\r\n            card.price > 0\r\n              ? card.amount > 1\r\n                ? [\r\n                  <MyTooltip key='one' title='Price for x1' placement='left'>\r\n                    <span>\r\n                      <RenderCell\r\n                        card={card}\r\n                        columnName='price'\r\n                      />\r\n                    </span>\r\n                  </MyTooltip>,\r\n                  ' / ',\r\n                  <MyTooltip key='multiple' title={`Price for x${card.amount}`}>\r\n                    <span>\r\n                      <RenderCell\r\n                        card={card}\r\n                        columnName='total_price'\r\n                      />\r\n                    </span>\r\n                  </MyTooltip>,\r\n                ]\r\n                : <MyTooltip title='Price for x1'>\r\n                  <span>\r\n                    <RenderCell\r\n                      card={card}\r\n                      columnName='price'\r\n                    />\r\n                  </span>\r\n                </MyTooltip>\r\n              : <MyTooltip title='No Price Available'>\r\n                <span>\r\n                  {'-'}\r\n                </span>\r\n              </MyTooltip>\r\n          }\r\n        </Grid>\r\n      }\r\n\r\n      {/** TRANSFORM BUTTON **/}\r\n      {\r\n        ((card?.is_transform || card?._isDoublesided) || card?.is_split || card?.is_flip) && !packTransformButton && (\r\n          <Grid item align='center' className={classes.buttonContainer}>\r\n            <Button\r\n              className={classes.buttonThridly}\r\n              variant='contained'\r\n              size='small'\r\n              onClick={handleTransform()}\r\n              {...buttonProps}\r\n            >\r\n              {\r\n                (\r\n                  (card?.is_transform || card?._isDoublesided)\r\n                    ? 'Transform'\r\n                    : card.is_split\r\n                      ? 'Rotate'\r\n                      : card.is_flip\r\n                        ? 'Flip'\r\n                        : ''\r\n                ) + (flipped ? ' ↪' : ' ↩')\r\n              }\r\n            </Button>\r\n          </Grid>\r\n        )\r\n      }\r\n    </Grid >\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    connect(mapStateToProps, mapDispatchToProps)(\r\n      CardImage\r\n    )\r\n  )","\r\nconst useStyles = (theme) => {\r\n  // const bottomBarHeight = '50px'\r\n  // const mainSidesPadding = theme.spacing(10)\r\n\r\n  return {\r\n    root: {},\r\n    appBar: {\r\n      // height: '100%',\r\n      // width: '100%',\r\n      marginLeft: theme.spacing(2),\r\n      marginRight: theme.spacing(2),\r\n      // margin: 0,\r\n      // position: \"inherit\",\r\n      // textAlign: 'center',\r\n      // verticalAlign: 'middle',\r\n      // backgroundColor: theme.palette.type === 'dark' ? 'rgba(0,0,0,0.25)' : theme.palette.primary,\r\n      // backgroundColor: theme.palette.type === 'dark' ? theme.palette.primary : theme.palette.primary,\r\n      // color: theme.palette.text.primary,\r\n      // transition: theme.transitions.create(['margin', 'width'], {\r\n      //   easing: theme.transitions.easing.sharp,\r\n      //   duration: theme.transitions.duration.leavingScreen,\r\n      // }),\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","import { withStyles } from '@material-ui/styles'\r\nimport { Grid, Typography } from '@material-ui/core'\r\n\r\nimport useStyles from './styles'\r\n\r\n\r\nconst BottomBar = ({\r\n  /** VARS **/\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n  } = props\r\n\r\n  const Link = ({ href, children }) => <a rel='noreferrer' target='_blank' href={href}>{children}</a>\r\n  const LooLzzz = () => <Link href='https://github.com/LooLzzz'>LooLzzz</Link>\r\n  const Bedopear = () => <Link href='https://github.com/Yarintop'>Bedopear</Link>\r\n  const Scryfall = () => <Link href='https://scryfall.com/'>Scryfall.com</Link>\r\n  const ScryfallClient = () => <Link href='https://www.npmjs.com/package/scryfall-client'>Scryfall-Client</Link>\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <Grid item container justifyContent='center' alignContent='center' align='center' className={classes.appBar} spacing={1}>\r\n      <Grid item xs={12}\r\n        component={Typography} variant='caption'\r\n      >\r\n        Made with <span style={{ color: 'red' }}>❤</span> by <LooLzzz /> and <Bedopear />\r\n      </Grid>\r\n      <Grid item xs={12}\r\n        component={Typography} variant='caption'\r\n      >\r\n        Powered by <Scryfall /> via <ScryfallClient />\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    BottomBar\r\n  )","\r\nconst useStyles = (theme) => {\r\n  // const topBottomPadding = theme.spacing(8)\r\n\r\n  return {\r\n    root: {\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-lone-blocks */\r\n\r\nimport { useEffect } from 'react'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router'\r\n\r\nimport { setCurrentTab } from '@/Logic/redux'\r\nimport useStyles from './styles'\r\n\r\n\r\n// TODO: complete `Decks` component\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  username: state.actions.activeUser.username,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    setCurrentTab: (payload) => dispatch(setCurrentTab(payload)),\r\n  }\r\n})\r\n\r\n\r\nconst Decks = ({\r\n  /** VARS **/\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n    dispatch,\r\n    username,\r\n  } = props\r\n  const history = useHistory()\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    //onMount\r\n    dispatch.setCurrentTab({ tab: 'decks' })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (!username)\r\n      return history.push('/login')\r\n  }, [username])\r\n\r\n\r\n  /** HANDLERS **/\r\n  { }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <div className={classes.root}>\r\n      hello from Decks\r\n    </div>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    connect(mapStateToProps, mapDispatchToProps)(\r\n      Decks\r\n    )\r\n  )","\r\nconst useStyles = (theme) => {\r\n  // const topBottomPadding = theme.spacing(8)\r\n\r\n  return {\r\n    root: {\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-lone-blocks */\r\n\r\nimport { useEffect } from 'react'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router'\r\n\r\nimport { setCurrentTab } from '@/Logic/redux'\r\nimport useStyles from './styles'\r\n\r\n\r\n// TODO: complete `Profile` component\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  username: state.actions.activeUser.username,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    setCurrentTab: (payload) => dispatch(setCurrentTab(payload)),\r\n  }\r\n})\r\n\r\n\r\nconst Profile = ({\r\n  /** VARS **/\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n    dispatch,\r\n    username,\r\n  } = props\r\n  const history = useHistory()\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    //onMount\r\n    dispatch.setCurrentTab({ tab: 'profile' })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (!username)\r\n      return history.push('/login')\r\n  }, [username])\r\n\r\n\r\n  /** HANDLERS **/\r\n  { }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <div className={classes.root}>\r\n      hello from Profile\r\n    </div>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    connect(mapStateToProps, mapDispatchToProps)(\r\n      Profile\r\n    )\r\n  )","const useStyles = (theme) => {\r\n  const iconSize = \"4.5em\"\r\n\r\n  return {\r\n    root: {\r\n      padding: theme.spacing(3),\r\n      paddingBottom: 0,\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      flexDirection: \"column\",\r\n\r\n      // minHeight: '80vh',\r\n    },\r\n    header: {\r\n      // alignSelf: \"flex-end\",\r\n      textTransform: \"uppercase\",\r\n      fontWeight: \"bold\",\r\n      width: '100%',\r\n    },\r\n    icon: {\r\n      fontSize: iconSize,\r\n      alignSelf: \"flex-start\",\r\n      position: \"relative\",\r\n      // color: theme.palette.primary.light,\r\n      zIndex: 1,\r\n    },\r\n    divider1: {\r\n      bottom: `calc(${iconSize} - 0.55em)`,\r\n      marginBottom: theme.spacing(3),\r\n      width: `calc(100% + 2*${theme.spacing(3)}px)`,\r\n      position: \"relative\",\r\n      zIndex: 0,\r\n    },\r\n    divider2: {\r\n      marginBottom: theme.spacing(3),\r\n      width: `calc(100% + 2*${theme.spacing(3)}px)`,\r\n      position: \"relative\",\r\n      zIndex: 0,\r\n    },\r\n    bottom: {\r\n      position: \"relative\",\r\n      bottom: \"2em\",\r\n      width: '100%',\r\n      // display: \"flex\",\r\n      // justifyContent: \"center\",\r\n      // alignItems: \"center\",\r\n      // flexDirection: \"column\",\r\n    },\r\n    content: {\r\n      width: '100%',\r\n      paddingBottom: theme.spacing(2),\r\n    },\r\n    actions: {\r\n      width: '100%',\r\n      alignSelf: \"flex-end\",\r\n    },\r\n  }\r\n}\r\n\r\nexport default useStyles\r\n","import { useEffect, useState } from 'react'\r\nimport { Paper, Divider, Grid, Typography, Dialog, DialogContent, CircularProgress } from '@material-ui/core'\r\nimport { withStyles } from \"@material-ui/styles\"\r\nimport { ValidatorForm } from 'react-material-ui-form-validator'\r\n\r\nimport useStyles from './styles'\r\n\r\n\r\nconst BaseForm = ({\r\n  /** VARS **/\r\n  validationRules = {},\r\n  header,\r\n  icon,\r\n  content,\r\n  actions,\r\n  headerProps = {},\r\n  iconProps = {},\r\n  contentProps = {},\r\n  actionsProps = {},\r\n  formRef,\r\n  disableBackdrop = false,\r\n  onSubmit = async (e) => Promise.resolve(),\r\n  onError = (err) => { console.error(err) },\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n    ...rest\r\n  } = props\r\n  const [Header, setHeader] = useState([])\r\n  const [Icon, setIcon] = useState([])\r\n  const [Content, setContent] = useState([])\r\n  const [Actions, setActions] = useState([])\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    const rules = validationRules\r\n\r\n    Object.entries(rules).forEach(item => {\r\n      const [key, value] = item\r\n      if (!ValidatorForm.hasValidationRule(key))\r\n        ValidatorForm.addValidationRule(key, value)\r\n    })\r\n  }, [validationRules])\r\n\r\n  useEffect(() => {\r\n    setHeader(header)\r\n    setIcon(icon)\r\n    setContent(content)\r\n    setActions(actions)\r\n  }, [header, icon, content, actions])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleSubmit = async (e) => {\r\n    setIsLoading(true)\r\n\r\n    try {\r\n      await onSubmit(e)\r\n    }\r\n    catch (err) {\r\n      onError(err)\r\n    }\r\n    finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <>\r\n      <Paper component={ValidatorForm} ref={formRef}\r\n        className={classes.root} elevation={8}\r\n        onSubmit={handleSubmit} onError={onError} {...rest}\r\n      >\r\n        <Typography variant='h4' align='right' className={classes.header} {...headerProps}>\r\n          {Header}\r\n        </Typography>\r\n\r\n        <div className={classes.icon} {...iconProps}>\r\n          {Icon}\r\n        </div>\r\n        <Divider className={classes.divider1} />\r\n\r\n        <Grid container direction='column' justifyContent='center' alignItems='center' className={classes.bottom}>\r\n          <Grid item xs={12} className={classes.content} {...contentProps}>\r\n            {Content}\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.actions} {...actionsProps}>\r\n            {Actions}\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </Paper>\r\n\r\n      {\r\n        !disableBackdrop &&\r\n        <Dialog open={isLoading}>\r\n          <DialogContent>\r\n            <CircularProgress />\r\n          </DialogContent>\r\n        </Dialog>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    BaseForm\r\n  )","const useStyles = (theme) => {\r\n  const topBottomPadding = theme.spacing(8)\r\n\r\n  return {\r\n    root: {\r\n      minHeight: `calc(100vh - 2*${topBottomPadding}px)`,\r\n      // width: '40vw',\r\n      // flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      alignItems: 'center',\r\n      display: 'flex',\r\n      flexGrow: 1,\r\n    },\r\n    errorMessages: {\r\n      color: theme.palette.error.main,\r\n      fontSize: '0.75rem',\r\n    },\r\n    // paper: {\r\n    //   padding: theme.spacing(3),\r\n    //   display: 'flex',\r\n    //   justifyContent: \"center\",\r\n    //   alignItems: 'center',\r\n    //   // flexDirection: \"column\",\r\n    //   // flexGrow: 0.1,\r\n    // },\r\n  }\r\n}\r\n\r\nexport default useStyles;","/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { useEffect, useState, useRef } from 'react'\r\nimport { Box, Button, Grid } from '@material-ui/core'\r\n// import { AccountCircle as AccountCircleIcon } from '@material-ui/icons';\r\nimport { withStyles } from \"@material-ui/styles\"\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { TextValidator } from 'react-material-ui-form-validator'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nimport { MagicdexApi } from '@/Api'\r\nimport { setActiveUser, setCurrentTab } from '@/Logic/redux'\r\nimport { BaseForm } from './..'\r\nimport useStyles from './styles'\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  username: state.actions.activeUser.username,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    setActiveUser: (payload) => dispatch(setActiveUser(payload)),\r\n    setCurrentTab: (payload) => dispatch(setCurrentTab(payload)),\r\n  }\r\n})\r\n\r\n\r\nconst Login = ({\r\n  /** VARS **/\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n    dispatch,\r\n    username,\r\n  } = props\r\n  const history = useHistory()\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  const formRef = useRef()\r\n\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [errorMessages, setErrorMessages] = useState([])\r\n  const [usernameInput, setUsernameInput] = useState('')\r\n  const [passwordInput, setPasswordInput] = useState('')\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    //onMount\r\n    dispatch.setCurrentTab({ tab: 'login' })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (username)\r\n      history.push('/')\r\n  }, [username])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleSubmit = async (e) => {\r\n    let res = null\r\n    setErrorMessages([])\r\n    setIsLoading(true)\r\n    setPasswordInput('')\r\n\r\n    try {\r\n      const user = await MagicdexApi.login({ username: usernameInput, password: passwordInput })\r\n\r\n      dispatch.setActiveUser(user)\r\n      enqueueSnackbar('Login successful', { variant: 'success' })\r\n      res = Promise.resolve(user)\r\n    }\r\n    catch (err) {\r\n      const msg = err.response.data.msg || err.response.data.message\r\n      let msgs = (msg instanceof Array) ? msg : [msg]\r\n\r\n      msgs = msgs.map(msg =>\r\n        msg.toLowerCase().includes('combination not found')\r\n          ? 'Bad credentials'\r\n          : msg\r\n      )\r\n\r\n      err.message = msgs\r\n      res = Promise.reject(err)\r\n    }\r\n    finally {\r\n      setIsLoading(false)\r\n      return res\r\n    }\r\n  }\r\n\r\n  const handleError = (err) => {\r\n    setErrorMessages(err.message)\r\n    enqueueSnackbar('Login failed', { variant: 'error' })\r\n  }\r\n\r\n  const handleClear = (e) => {\r\n    setErrorMessages([])\r\n    setUsernameInput('')\r\n    setPasswordInput('')\r\n    formRef.current.resetValidations()\r\n  }\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <Grid container className={classes.root}>\r\n      <BaseForm\r\n        formRef={formRef}\r\n        onSubmit={handleSubmit}\r\n        onError={handleError}\r\n        instantValidate={false}\r\n\r\n        header='Login'\r\n        // icon     = {() => <AccountCircleIcon fontSize='inherit' />}\r\n        icon={() => <Box marginBottom={2}>💩</Box>}\r\n        content={() => (\r\n          <>\r\n            <TextValidator\r\n              id='username'\r\n              type='text'\r\n              label='Username'\r\n              variant='outlined'\r\n              size='small'\r\n              color='secondary'\r\n              value={usernameInput}\r\n              onChange={(e) => setUsernameInput(e.target.value)}\r\n              validators={['required', `matchRegexp:^([A-Za-z0-9]|[-_.'])*$`]}\r\n              errorMessages={['Field is required', 'Special characters are not allowed']}\r\n              autoComplete='current-username'\r\n            />\r\n            <TextValidator\r\n              id='password'\r\n              type='password'\r\n              label='Password'\r\n              variant='outlined'\r\n              size='small'\r\n              color='secondary'\r\n              value={passwordInput}\r\n              onChange={(e) => setPasswordInput(e.target.value)}\r\n              validators={['required']}\r\n              errorMessages={['Field is required']}\r\n              autoComplete='current-password'\r\n            />\r\n            <Grid container direction='column'>\r\n              {\r\n                Object.values(errorMessages).map((value, i) => (\r\n                  <Grid item key={i} className={classes.errorMessages}>\r\n                    {value[0].toUpperCase() + value.slice(1)} {/* capitalize first letter */}\r\n                  </Grid>\r\n                ))\r\n              }\r\n            </Grid>\r\n          </>\r\n        )}\r\n        actions={() => (\r\n          <Grid container justifyContent='flex-end' spacing={1}>\r\n            <Grid item>\r\n              <Button\r\n                size=\"medium\"\r\n                variant=\"outlined\"\r\n                onClick={handleClear}\r\n                disabled={isLoading}\r\n              >\r\n                Clear\r\n              </Button>\r\n            </Grid>\r\n            <Grid item style={{ paddingRight: 0 }}>\r\n              <Button\r\n                type=\"submit\"\r\n                size=\"medium\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disabled={isLoading}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      />\r\n    </Grid>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default\r\n  withStyles(useStyles)(\r\n    connect(mapStateToProps, mapDispatchToProps)(\r\n      Login\r\n    )\r\n  )","const useStyles = (theme) => {\r\n  const topBottomPadding = theme.spacing(8)\r\n\r\n  return {\r\n    root: {\r\n      minHeight: `calc(100vh - 2*${topBottomPadding}px)`,\r\n      // width: '40vw',\r\n      // flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      alignItems: 'center',\r\n      display: 'flex',\r\n      flexGrow: 1,\r\n    },\r\n    errorMessages: {\r\n      color: theme.palette.error.main,\r\n      fontSize: '0.75rem',\r\n    },\r\n    // paper: {\r\n    //   padding: theme.spacing(3),\r\n    //   display: 'flex',\r\n    //   justifyContent: \"center\",\r\n    //   alignItems: 'center',\r\n    //   // flexDirection: \"column\",\r\n    //   // flexGrow: 0.1,\r\n    // },\r\n  }\r\n}\r\n\r\nexport default useStyles;","/* eslint-disable no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { useEffect, useState, useRef } from 'react'\r\nimport { Box, Button, Grid, Typography } from '@material-ui/core'\r\nimport { AccountCircle as AccountCircleIcon } from '@material-ui/icons'\r\nimport { withStyles } from \"@material-ui/styles\"\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { TextValidator } from 'react-material-ui-form-validator'\r\nimport { useSnackbar } from 'notistack'\r\nimport _ from 'lodash'\r\n\r\nimport { MagicdexApi } from \"@/Api\"\r\nimport { setActiveUser, setCurrentTab } from '@/Logic/redux'\r\nimport { BaseForm } from './..'\r\nimport useStyles from './styles'\r\n\r\n\r\n/** REDUX **/\r\nconst mapStateToProps = (state) => ({\r\n  username: state.actions.activeUser.username,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatch: {\r\n    setActiveUser: (payload) => dispatch(setActiveUser(payload)),\r\n    setCurrentTab: (payload) => dispatch(setCurrentTab(payload)),\r\n  }\r\n})\r\n\r\n\r\nconst Register = ({\r\n  /** VARS **/\r\n  ...props\r\n}) => {\r\n  const {\r\n    classes,\r\n    dispatch,\r\n    username,\r\n  } = props\r\n  const history = useHistory()\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [errorMessages, setErrorMessages] = useState([])\r\n  const [usernameInput, setUsernameInput] = useState('')\r\n  const [passwordInput, setPasswordInput] = useState('')\r\n  const [passwordRepeatInput, setPasswordRepeatInput] = useState('')\r\n  const passwordInputRef = useRef()\r\n  const formRef = useRef()\r\n\r\n\r\n  /** EFFECTS **/\r\n  useEffect(() => {\r\n    //onMount\r\n    dispatch.setCurrentTab({ tab: 'register' })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (username)\r\n      history.push('/')\r\n  }, [username])\r\n\r\n\r\n  /** HANDLERS **/\r\n  const handleSubmit = async (e) => {\r\n    let res = null\r\n    setErrorMessages([])\r\n    setIsLoading(true)\r\n    setPasswordInput('')\r\n    setPasswordRepeatInput('')\r\n\r\n    try {\r\n      const user = await MagicdexApi.register({ username: usernameInput, password: passwordInput })\r\n\r\n      dispatch.setActiveUser(user)\r\n      enqueueSnackbar('Successfully registered', { variant: 'success' })\r\n      res = Promise.resolve(user)\r\n    }\r\n    catch (err) {\r\n      const msg = err.response.data.msg || err.response.data.message\r\n      const msgs = (msg instanceof Array) ? msg : [msg]\r\n      \r\n      err.message = msgs\r\n      res = Promise.reject(err)\r\n    }\r\n    finally {\r\n      setIsLoading(false)\r\n      return res\r\n    }\r\n  }\r\n\r\n  const handleError = (err) => {\r\n    setErrorMessages(err.message)\r\n    enqueueSnackbar('Error registering', { variant: 'error' })\r\n  }\r\n\r\n  const handleClear = (e) => {\r\n    setErrorMessages([])\r\n    setUsernameInput('')\r\n    setPasswordInput('')\r\n    setPasswordRepeatInput('')\r\n    formRef.current.resetValidations()\r\n  }\r\n\r\n\r\n  /** VALIDATORS **/\r\n  const isPasswordMatch = (value) => (\r\n    value === passwordInputRef.current.props.value\r\n  )\r\n\r\n\r\n  /** RENDER **/\r\n  return (\r\n    <Grid container className={classes.root}>\r\n      <BaseForm\r\n        formRef={formRef}\r\n        validationRules={{ isPasswordMatch }}\r\n        onSubmit={handleSubmit}\r\n        onError={handleError}\r\n        instantValidate={false}\r\n\r\n        header='Signup'\r\n        // icon={() => <AccountCircleIcon fontSize='inherit' />}\r\n        icon={() => <Box marginBottom={2}>💁</Box>}\r\n        content={() => (\r\n          <>\r\n            <TextValidator\r\n              error={_.join(errorMessages, ';').includes('username')}\r\n              id='username'\r\n              name='username'\r\n              type='text'\r\n              label='Username'\r\n              variant='outlined'\r\n              size='small'\r\n              color='secondary'\r\n              value={usernameInput}\r\n              onChange={(e) => setUsernameInput(e.target.value)}\r\n              validators={['required', `matchRegexp:^[A-Za-z][A-Za-z0-9-_.]*$`]}\r\n              errorMessages={['Field is required', 'Special characters are not allowed']}\r\n              autoComplete='new-username'\r\n            />\r\n            <TextValidator\r\n              ref={passwordInputRef}\r\n              id='password'\r\n              name='password'\r\n              type='password'\r\n              label='Password'\r\n              variant='outlined'\r\n              size='small'\r\n              color='secondary'\r\n              value={passwordInput}\r\n              onChange={(e) => setPasswordInput(e.target.value)}\r\n              validators={['required', 'minStringLength:5']}\r\n              errorMessages={['Field is required', 'Password is too short']}\r\n              autoComplete='new-password'\r\n            />\r\n            <TextValidator\r\n              id='password_repeat'\r\n              name='password_repeat'\r\n              type='password'\r\n              label='Repeat Password'\r\n              variant='outlined'\r\n              size='small'\r\n              color='secondary'\r\n              value={passwordRepeatInput}\r\n              onChange={(e) => setPasswordRepeatInput(e.target.value)}\r\n              validators={['required', 'minStringLength:5', 'isPasswordMatch']}\r\n              errorMessages={['Field is required', 'Password is too short', 'Passwords does not match']}\r\n              autoComplete='new-password2'\r\n            />\r\n            <Grid container direction='column'>\r\n              {\r\n                Object\r\n                  .values(errorMessages)\r\n                  .map((value, i) => (\r\n                    <Grid item key={i} className={classes.errorMessages}>\r\n                      {_.upperFirst(value)}\r\n                    </Grid>\r\n                  ))\r\n              }\r\n            </Grid>\r\n          </>\r\n        )}\r\n        actions={() => (\r\n          <Grid container justifyContent='flex-end' spacing={1}>\r\n            <Grid item>\r\n              <Button\r\n                size=\"medium\"\r\n                variant=\"outlined\"\r\n                onClick={handleClear}\r\n                disabled={isLoading}\r\n              >\r\n                Clear\r\n              </Button>\r\n            </Grid>\r\n            <Grid item style={{ paddingRight: 0 }}>\r\n              <Button\r\n                type=\"submit\"\r\n                size=\"medium\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disabled={isLoading}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      />\r\n    </Grid>\r\n  )\r\n}\r\n\r\n/** EXPORT **/\r\nexport default withStyles(useStyles)(\r\n  connect(mapStateToProps, mapDispatchToProps)(\r\n    Register\r\n  )\r\n)\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { Provider } from \"react-redux\"\r\n\r\nimport { store } from \"@/Logic/redux\"\r\nimport { App } from \"@/Components\"\r\nimport './index.css'\r\nimport 'fontsource-roboto'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}